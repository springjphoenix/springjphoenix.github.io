{"version":3,"sources":["webpack:///path---cssinjs-d857209d57654444c537.js","webpack:///./.cache/json/cssinjs.json"],"names":["webpackJsonp","605","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","timeToRead","frontmatter","date","category","tags","math","pathContext","prev","url","slug","next"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,iBAAAC,OAAA,YAA6CC,gBAAmBC,GAAA,qGAAAC,KAAA,28HAAupFC,WAAA,EAAAC,aAAqhDN,MAAA,YAAAO,KAAA,aAAAC,SAAA,KAAAC,MAAA,oBAAAC,KAAA,QAAkGC,aAAgBC,MAAQC,IAAA,sBAAAb,MAAA,gBAAmDc,KAAA,YAAAC,MAA4BF,IAAA,oBAAAb,MAAA","file":"path---cssinjs-d857209d57654444c537.js","sourcesContent":["webpackJsonp([103936559373274],{\n\n/***/ 605:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Magicly's Blog\",\"author\":\"Magicly\"}},\"markdownRemark\":{\"id\":\"/Users/spring/Developer/Gatsby/gatsby-blog/src/pages/cssinjs.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>自从2014年Christopher Chedeau做了<a href=\\\"http://blog.vjeux.com/2014/javascript/react-css-in-js-nationjs.html\\\">CSS in JS</a>的演讲之后， cssinjs的各种库纷纷出现，已经<a href=\\\"https://github.com/MicheleBertoli/css-in-js\\\">有好几十种了</a>。</p>\\n<p><a href=\\\"https://github.com/css-modules/css-modules\\\">css modules</a>应该是很流行的了， 说实话我没有用过， 不过在浏览作者主页的时候意外发现了<a href=\\\"https://github.com/styled-components/styled-components\\\">styled-components</a>，发现这就是我想要的！大家可以看看下面几个视频，先有个大概印象。</p>\\n<!-- more -->\\n<p><a href=\\\"https://github.com/styled-components/styled-components\\\">styled-components</a>作者<a href=\\\"https://twitter.com/mxstbr\\\">Max Stoiber</a>在2017年React大会上的演讲：</p>\\n<div>\\n          <div\\n            class=\\\"gatsby-resp-iframe-wrapper\\\"\\n            style=\\\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem\\\"\\n          >\\n            <iframe src=\\\"https://www.youtube.com/embed/2j9rSur_mnk\\\" frameborder=\\\"0\\\" allowfullscreen style=\\\"\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n          \\\"></iframe>\\n          </div>\\n          </div>\\n<p><a href=\\\"https://github.com/css-modules/css-modules\\\">css modules</a>作者<a href=\\\"https://twitter.com/glenmaddern\\\">@glenmaddern</a>在2017年欧洲CSS大会上分享<a href=\\\"https://github.com/styled-components/styled-components\\\">styled-components</a>。</p>\\n<div>\\n          <div\\n            class=\\\"gatsby-resp-iframe-wrapper\\\"\\n            style=\\\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem\\\"\\n          >\\n            <iframe src=\\\"https://www.youtube.com/embed/MT4D_DioYC8\\\" frameborder=\\\"0\\\" allowfullscreen style=\\\"\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n          \\\"></iframe>\\n          </div>\\n          </div>\\n<p><a href=\\\"https://github.com/css-modules/css-modules\\\">css modules</a>作者<a href=\\\"https://twitter.com/glenmaddern\\\">@glenmaddern</a>分享<a href=\\\"https://github.com/styled-components/styled-components\\\">styled-components</a>， 玩得很high啊。</p>\\n<div>\\n          <div\\n            class=\\\"gatsby-resp-iframe-wrapper\\\"\\n            style=\\\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem\\\"\\n          >\\n            <iframe src=\\\"https://www.youtube.com/embed/qu4U7lwZTRI\\\" frameborder=\\\"0\\\" allowfullscreen style=\\\"\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n          \\\"></iframe>\\n          </div>\\n          </div>\\n<p>想要了解更多<a href=\\\"https://github.com/styled-components/styled-components\\\">styled-components</a>， 可以看<a href=\\\"https://react-course.magicfun.ai/css/\\\">React实战课程</a>内容。</p>\\n<p>这有一篇<a href=\\\"https://github.com/callemall/material-ui\\\">Material UI</a>的一位作者<a href=\\\"https://github.com/oliviertassinari/a-journey-toward-better-style\\\">讲他们如何在各种cssinjs中做的选型</a>，介绍对比了各种cssinjs库的一些特性，大家可以了解一下， 这里是<a href=\\\"https://oliviertassinari.github.io/a-journey-toward-better-style/\\\">PPT</a>。</p>\\n<p>再提一下<a href=\\\"https://twitter.com/floydophone\\\">Pete Hunt</a>大神的<a href=\\\"https://github.com/smyte/jsxstyle\\\">jsxstyle</a>，之前看的时候还是<a href=\\\"https://medium.com/smyte/announcing-jsxstyle-1-0-3ef469d1863a\\\">1.0刚发布</a>，貌似现在快出2.0了。 大概思路是封装了用于布局的一些components，包括：</p>\\n<ul>\\n<li>Block</li>\\n<li>Flex</li>\\n<li>Inline</li>\\n<li>InlineBlock</li>\\n<li>InlineFlex</li>\\n<li>Table</li>\\n<li>TableCell</li>\\n<li>TableRow</li>\\n<li>Row</li>\\n<li>Col</li>\\n</ul>\\n<p>不过给我的感觉，有点像用<a href=\\\"https://facebook.github.io/react-native/\\\">React Native</a>来开发web的思想， 比如<a href=\\\"https://github.com/necolas/react-native-web\\\">react-native-web</a>以及淘宝出的<a href=\\\"https://github.com/taobaofed/react-web\\\">react-web</a>，不过都不太符合我的口味。</p>\\n<p><a href=\\\"mxstbr\\\">Max Stoiber</a>最近又发布了一个新的库<a href=\\\"https://github.com/styled-components/polished\\\">polished</a>，大概看了一下，也很符合我的口味，利用currying function去组合各种基本样式， 后面有时间再研究一下。阮老师已经写了<a href=\\\"http://www.ruanyifeng.com/blog/2017/04/css_in_js.html\\\">一篇文章介绍</a>啦。</p>\",\"timeToRead\":2,\"frontmatter\":{\"title\":\"CSS In JS\",\"date\":\"2017-08-29\",\"category\":\"FE\",\"tags\":[\"css\",\"js\",\"react\"],\"math\":null}}},\"pathContext\":{\"prev\":{\"url\":\"/chrome-extentions/\",\"title\":\"推荐一些Chrome插件\"},\"slug\":\"/cssinjs/\",\"next\":{\"url\":\"/webpack/concepts\",\"title\":\"webpack concepts\"}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---cssinjs-d857209d57654444c537.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Magicly's Blog\",\"author\":\"Magicly\"}},\"markdownRemark\":{\"id\":\"/Users/spring/Developer/Gatsby/gatsby-blog/src/pages/cssinjs.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>自从2014年Christopher Chedeau做了<a href=\\\"http://blog.vjeux.com/2014/javascript/react-css-in-js-nationjs.html\\\">CSS in JS</a>的演讲之后， cssinjs的各种库纷纷出现，已经<a href=\\\"https://github.com/MicheleBertoli/css-in-js\\\">有好几十种了</a>。</p>\\n<p><a href=\\\"https://github.com/css-modules/css-modules\\\">css modules</a>应该是很流行的了， 说实话我没有用过， 不过在浏览作者主页的时候意外发现了<a href=\\\"https://github.com/styled-components/styled-components\\\">styled-components</a>，发现这就是我想要的！大家可以看看下面几个视频，先有个大概印象。</p>\\n<!-- more -->\\n<p><a href=\\\"https://github.com/styled-components/styled-components\\\">styled-components</a>作者<a href=\\\"https://twitter.com/mxstbr\\\">Max Stoiber</a>在2017年React大会上的演讲：</p>\\n<div>\\n          <div\\n            class=\\\"gatsby-resp-iframe-wrapper\\\"\\n            style=\\\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem\\\"\\n          >\\n            <iframe src=\\\"https://www.youtube.com/embed/2j9rSur_mnk\\\" frameborder=\\\"0\\\" allowfullscreen style=\\\"\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n          \\\"></iframe>\\n          </div>\\n          </div>\\n<p><a href=\\\"https://github.com/css-modules/css-modules\\\">css modules</a>作者<a href=\\\"https://twitter.com/glenmaddern\\\">@glenmaddern</a>在2017年欧洲CSS大会上分享<a href=\\\"https://github.com/styled-components/styled-components\\\">styled-components</a>。</p>\\n<div>\\n          <div\\n            class=\\\"gatsby-resp-iframe-wrapper\\\"\\n            style=\\\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem\\\"\\n          >\\n            <iframe src=\\\"https://www.youtube.com/embed/MT4D_DioYC8\\\" frameborder=\\\"0\\\" allowfullscreen style=\\\"\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n          \\\"></iframe>\\n          </div>\\n          </div>\\n<p><a href=\\\"https://github.com/css-modules/css-modules\\\">css modules</a>作者<a href=\\\"https://twitter.com/glenmaddern\\\">@glenmaddern</a>分享<a href=\\\"https://github.com/styled-components/styled-components\\\">styled-components</a>， 玩得很high啊。</p>\\n<div>\\n          <div\\n            class=\\\"gatsby-resp-iframe-wrapper\\\"\\n            style=\\\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem\\\"\\n          >\\n            <iframe src=\\\"https://www.youtube.com/embed/qu4U7lwZTRI\\\" frameborder=\\\"0\\\" allowfullscreen style=\\\"\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n          \\\"></iframe>\\n          </div>\\n          </div>\\n<p>想要了解更多<a href=\\\"https://github.com/styled-components/styled-components\\\">styled-components</a>， 可以看<a href=\\\"https://react-course.magicfun.ai/css/\\\">React实战课程</a>内容。</p>\\n<p>这有一篇<a href=\\\"https://github.com/callemall/material-ui\\\">Material UI</a>的一位作者<a href=\\\"https://github.com/oliviertassinari/a-journey-toward-better-style\\\">讲他们如何在各种cssinjs中做的选型</a>，介绍对比了各种cssinjs库的一些特性，大家可以了解一下， 这里是<a href=\\\"https://oliviertassinari.github.io/a-journey-toward-better-style/\\\">PPT</a>。</p>\\n<p>再提一下<a href=\\\"https://twitter.com/floydophone\\\">Pete Hunt</a>大神的<a href=\\\"https://github.com/smyte/jsxstyle\\\">jsxstyle</a>，之前看的时候还是<a href=\\\"https://medium.com/smyte/announcing-jsxstyle-1-0-3ef469d1863a\\\">1.0刚发布</a>，貌似现在快出2.0了。 大概思路是封装了用于布局的一些components，包括：</p>\\n<ul>\\n<li>Block</li>\\n<li>Flex</li>\\n<li>Inline</li>\\n<li>InlineBlock</li>\\n<li>InlineFlex</li>\\n<li>Table</li>\\n<li>TableCell</li>\\n<li>TableRow</li>\\n<li>Row</li>\\n<li>Col</li>\\n</ul>\\n<p>不过给我的感觉，有点像用<a href=\\\"https://facebook.github.io/react-native/\\\">React Native</a>来开发web的思想， 比如<a href=\\\"https://github.com/necolas/react-native-web\\\">react-native-web</a>以及淘宝出的<a href=\\\"https://github.com/taobaofed/react-web\\\">react-web</a>，不过都不太符合我的口味。</p>\\n<p><a href=\\\"mxstbr\\\">Max Stoiber</a>最近又发布了一个新的库<a href=\\\"https://github.com/styled-components/polished\\\">polished</a>，大概看了一下，也很符合我的口味，利用currying function去组合各种基本样式， 后面有时间再研究一下。阮老师已经写了<a href=\\\"http://www.ruanyifeng.com/blog/2017/04/css_in_js.html\\\">一篇文章介绍</a>啦。</p>\",\"timeToRead\":2,\"frontmatter\":{\"title\":\"CSS In JS\",\"date\":\"2017-08-29\",\"category\":\"FE\",\"tags\":[\"css\",\"js\",\"react\"],\"math\":null}}},\"pathContext\":{\"prev\":{\"url\":\"/chrome-extentions/\",\"title\":\"推荐一些Chrome插件\"},\"slug\":\"/cssinjs/\",\"next\":{\"url\":\"/webpack/concepts\",\"title\":\"webpack concepts\"}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/cssinjs.json\n// module id = 605\n// module chunks = 103936559373274"],"sourceRoot":""}
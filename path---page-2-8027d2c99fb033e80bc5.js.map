{"version":3,"sources":["webpack:///path---page-2-8027d2c99fb033e80bc5.js","webpack:///./.cache/json/page-2.json"],"names":["webpackJsonp","631","module","exports","data","site","siteMetadata","title","allMarkdownRemark","edges","node","html","timeToRead","excerpt","fields","slug","frontmatter","date","category","tags","pathContext","current","skip","total"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,mBAA0BC,mBAAsBC,QAAUC,MAAQC,KAAA,wufAAAC,WAAA,EAAAC,QAAA,uIAAAC,QAAmzgBC,KAAA,iCAAuCC,aAAgBT,MAAA,2BAAAU,KAAA,aAAAC,SAAA,aAAAC,MAAA,sCAA6HT,MAAQC,KAAA;AAA+1tEC,WAAA,EAAAC,QAAA,kIAAAC,QAA02DC,KAAA,4BAAkCC,aAAgBT,MAAA,+BAAAU,KAAA,aAAAC,SAAA,KAAAC,MAAA,mDAAsIT,MAAQC,KAAA,6xCAAAC,WAAA,EAAAC,QAAA,8HAAAC,QAA++CC,KAAA,wBAA8BC,aAAgBT,MAAA,oBAAAU,KAAA,aAAAC,SAAA,KAAAC,MAAA,4BAAoGT,MAAQC,KAAA,m4PAA26CC,WAAA,EAAAC,QAAA,6CAAAC,QAAu1NC,KAAA,2BAAiCC,aAAgBT,MAAA,mBAAAU,KAAA,aAAAC,SAAA,aAAAC,MAAA,2BAA0GT,MAAQC,KAAA,ggHAA2yFC,WAAA,EAAAC,QAAA,mHAAAC,QAA84BC,KAAA,wBAA8BC,aAAgBT,MAAA,uBAAAU,KAAA,aAAAC,SAAA,SAAAC,MAAA,gBAA+FT,MAAQC,KAAA,6uMAAAC,WAAA,EAAAC,QAAA,6IAAAC,QAAsmNC,KAAA,0BAAgCC,aAAgBT,MAAA,UAAAU,KAAA,aAAAC,SAAA,KAAAC,MAAA,uBAAqFT,MAAQC,KAAA;AAA2tpBC,WAAA,EAAAC,QAAA,4IAAAC,QAA2owCC,KAAA,cAAoBC,aAAgBT,MAAA,eAAAU,KAAA,aAAAC,SAAA,KAAAC,MAAA,uBAA0FT,MAAQC,KAAA,y+FAA4yDC,WAAA,EAAAC,QAAA,sIAAAC,QAAq8CC,KAAA,kBAAwBC,aAAgBT,MAAA,iBAAAU,KAAA,aAAAC,SAAA,KAAAC,MAAA,uBAA4FT,MAAQC,KAAA;AAAgq5BC,WAAA,EAAAC,QAAA,gJAAAC,QAAw8HC,KAAA,4BAAkCC,aAAgBT,MAAA,4BAAAU,KAAA,aAAAC,SAAA,KAAAC,MAAA,2DAA2IT,MAAQC,KAAA;AAA+z2DC,WAAA,EAAAC,QAAA,+IAAAC,QAAg/CC,KAAA,sBAA4BC,aAAgBT,MAAA,qBAAAU,KAAA,aAAAC,SAAA,KAAAC,MAAA,iCAAyGC,aAAgBC,QAAA,EAAAC,KAAA,GAAAC,MAAA","file":"path---page-2-8027d2c99fb033e80bc5.js","sourcesContent":["webpackJsonp([135728916539164],{\n\n/***/ 631:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Magicly's Blog\"}},\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"html\":\"<p>在区块链开发中涉及到很多密码学知识， 不懂得相关原理，可能很难理解设计思路更不要说阅读源码了。 我们就花一点时间来了解下区块链开发设计到的密码学知识， 本文简单介绍Hash函数的一些性质， 要想更深入了解请阅读相关专业文献。</p>\\n<!-- more -->\\n<h1 id=\\\"什么是hash函数\\\"><a href=\\\"#%E4%BB%80%E4%B9%88%E6%98%AFhash%E5%87%BD%E6%95%B0\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>什么是Hash函数</h1>\\n<p>这里说的Hash函数不是哈希表这种数据结构， 而是一种密码学概念，具有如下一些性质：</p>\\n<ul>\\n<li>输入是任意长度，输出为固定长度（比如256bits）</li>\\n<li>计算起来很高效</li>\\n<li>输入改动一点点（哪怕只是一个bit），输出结果千差万别</li>\\n<li>…</li>\\n</ul>\\n<p>常用的Hash函数有MD5， SHA1， SHA256等。 有很多在线工具可以计算Hash函数的值， 比如：<a href=\\\"http://tool.oschina.net/encrypt?type=2%EF%BC%8C\\\">http://tool.oschina.net/encrypt?type=2，</a> 我们来看一下<code class=\\\"language-text\\\">hello blockchain!</code>的几种Hash函数值：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\">md5<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">4</span>b7cf9b1f0e3c92c3ca571a5ea4d3fda\\nsha1<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">57</span>bf459d6c142f3427258089e386c43d106a72ab\\nsha256<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">108</span>be1bede687534d56a8229d4deabccfd9ee83358b15e3e95286915b8a4f648</code></pre>\\n      </div>\\n<p>在mac下有相应的命令行可以计算这些Hash函数值，md5和shasum。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  Desktop <span class=\\\"token function\\\">cat</span> helloblockchain.txt\\nhello blockchain<span class=\\\"token operator\\\">!</span>% // 这里的%不是文件内容，而是因为最后一行没有\\\\n导致命令行下显示的问题\\n➜  Desktop md5 helloblockchain.txt\\nMD5 <span class=\\\"token punctuation\\\">(</span>helloblockchain.txt<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span> 4b7cf9b1f0e3c92c3ca571a5ea4d3fda\\n➜  Desktop shasum helloblockchain.txt\\n57bf459d6c142f3427258089e386c43d106a72ab  helloblockchain.txt\\n➜  Desktop shasum -a 256 helloblockchain.txt\\n108be1bede687534d56a8229d4deabccfd9ee83358b15e3e95286915b8a4f648  helloblockchain.txt</code></pre>\\n      </div>\\n<p>在linux下和windows命令可能略有不同， 大家自己查一下即可。 这里有个坑要注意，<a href=\\\"https://www.zhihu.com/question/22808787\\\">linux以及mac下用vim编辑文件， 会在每一行后自动给你加上<code class=\\\"language-text\\\">\\\\n</code></a>，即使只有一行！也就是说你输入的是<code class=\\\"language-text\\\">hello blockchain!</code>， 用vim看上去也是只有一行， 但是其实存储的时候在最后多存储了一个<code class=\\\"language-text\\\">\\\\n</code>， 而用vim你还看不出来。 后来用VSCode打开文件才发现多了一个换行， 我说怎么hash值完全不一样呢。 这也体现了hash函数的一大性质： 任意一点点改动， 最后hash值都差别很大！</p>\\n<p>作为密码学概念， 我们希望Hash函数具有如下三个特征，我们才认为此Hash函数是密码学安全的：</p>\\n<ol>\\n<li>Collision Free</li>\\n<li>Hiding</li>\\n<li>Puzzle Friendly</li>\\n</ol>\\n<h1 id=\\\"collision-free\\\"><a href=\\\"#collision-free\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Collision Free</h1>\\n<p>这个性质说的是没有人能够找到两个不同的输入， 它们的hash输出是相同的， 即不能找到<code class=\\\"language-text\\\">x != y</code>但是<code class=\\\"language-text\\\">H(x) == H(y)</code>。</p>\\n<p>注意， 我们这里说的是“没有人能够找到”，而不是说不存在！大家仔细想想就会知道， 冲突（Collision）肯定是存在的。 为啥呢？因为我们说了输出是固定长度的， 比如256bits，那么输出空间大小就只有<code class=\\\"language-text\\\">Math.pow(2, 256)</code>种可能。而输入可以是任意长度，那输入空间远比输出空间要大，根据小时候学过的<a href=\\\"https://zh.wikipedia.org/wiki/%E9%B4%BF%E5%B7%A2%E5%8E%9F%E7%90%86\\\">鸽巢原理</a>就知道至少有两个<code class=\\\"language-text\\\">x != y</code>使得<code class=\\\"language-text\\\">H(x) == H(y)</code>的。</p>\\n<blockquote>\\n<p>鸽巢原理：若有n个笼子和n+1只鸽子，所有的鸽子都被关在鸽笼里，那么至少有一个笼子有至少2只鸽子。</p>\\n</blockquote>\\n<p>对于输出是256bits的hash函数，不管Hash函数是什么，只要尝试<code class=\\\"language-text\\\">Math.pow(2, 130)</code>个输入， 就有<code class=\\\"language-text\\\">99.8%</code>的概率会找到冲突， 最差也就是找<code class=\\\"language-text\\\">Math.pow(2, 256) + 1</code>次就肯定能找到冲突，平均是<code class=\\\"language-text\\\">Math.pow(2, 128)</code>次。但是问题是，这个需要花太久太久的时间！多久呢？我在自己的Mac Pro上简单测试了一下， 大概每秒计算2000000次hash，则大概需要花<code class=\\\"language-text\\\">Math.pow(2, 128) / (3600 * 24 * 365 * 2000000) ~= 5 * Math.pow(10, 24)</code>年，远比宇宙诞生的时间久。引用普林斯顿的课程<a href=\\\"http://bitcoinbook.cs.princeton.edu/\\\">Bitcoin and Cryptocurrency Technologies</a>里的一段话：</p>\\n<blockquote>\\n<p>For another way of thinking about this, we can say that, if every computer ever made by humanity was computing since the beginning of the entire universe, up to now, the odds that they would have found a collision is still infinitesimally small. So small that it’s way less than the odds that the Earth will be destroyed by a giant meteor in the next two seconds.</p>\\n</blockquote>\\n<p>这段话的大概意思是说把全人类从古自今曾经造出来过的电脑都拿来从宇宙一开始就计算，那么到今天为止找到冲突的概率依然很小很小， 有多小呢？比接下来的两秒钟地球被一块大流星撞毁的概率还小， 而这件事。。。。。。。（2s过去）。。。。并没有发生。</p>\\n<p>不过这段话应该是在2015年说的， 这两年发生了很多事情， 其中一件事情就是比特币大涨， 导致专门用于挖矿的矿机（ASIC）出现， 计算hash的速度大幅度提升。<a href=\\\"https://magicly.me/blockchain-btc-mining/\\\">区块链系列一：现在挖比特币有多难</a>中我们提到，目前比特币矿机全网的算力大概是每秒<code class=\\\"language-text\\\">23555072455973170000</code>次hash计算，我们来看看这么大的算力平均花多久能找到冲突呢。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\">Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pow</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">128</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">/</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3600</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">24</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">365</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">23555072455973170000</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">~</span><span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">4600</span>亿</code></pre>\\n      </div>\\n<p>宇宙年龄目前大概是130亿年， 也就是说如果这些矿机从宇宙诞生就开始计算hash， 则发现冲突的概率大概是<code class=\\\"language-text\\\">130 / 4600 ~= 3%</code>。注意我们还只是说的是挖比特币的矿机，并没有如作者说的<code class=\\\"language-text\\\">把全人类曾经造出来过的电脑都算上</code>, 换句话说仅仅只是挖比特币的矿机，就把一件概率曾经远小于接下来2s地球被流星击中而毁灭的事情的概率提高到了3%！！！想想就觉得可怕！！！</p>\\n<p>这两年hash算力有这么大的提升， 完全是由于比特币大涨， 人们为了在挖矿中占据优势， 开发了大量ASIC。我们之前说一个蚂蚁矿机S9的算力是13.5Thash/s， 而我的mac pro大概是2Mhash/s， 也就是一台S9在计算hash方面，相当于<code class=\\\"language-text\\\">13.5T / 2M ~= 6.7M</code>，670万台Mac Pro！！！</p>\\n<p>那么有没有更快的方法找到冲突呢？答案是，对于有些hash函数，有。 对于其他的hash函数， 我们不知道！注意， 是不知道，而不是没有！没有任何hash函数被“证明”是Collision Free的。只是有些hash函数人们花了大量时间去找， 但是还没有找到，所以暂时认为是collision free的，而有些曾经认为是collision free的hash函数被找到有效构造冲突的方法了，比如MD5，因此在安全性要求较高的场景就建议不再使用MD5了。比特币里使用的是sha256。</p>\\n<p>PS， 破解MD5的是时任山东大学教授的<a href=\\\"https://baike.baidu.com/item/%E7%8E%8B%E5%B0%8F%E4%BA%91/29050\\\">王小云教授</a>。 另外，Google真正找到了一个SHA1的碰撞的实例，因此也被认为是不安全的了。 可以参看： <a href=\\\"https://www.leiphone.com/news/201711/CD1xUXxl8ByzS1nr.html\\\">https://www.leiphone.com/news/201711/CD1xUXxl8ByzS1nr.html</a></p>\\n<h2 id=\\\"应用案例：消息摘要message-digests\\\"><a href=\\\"#%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%B6%88%E6%81%AF%E6%91%98%E8%A6%81message-digests\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>应用案例：消息摘要Message digests</h2>\\n<p>那么hash函数的这条性质有什么用呢？Hash函数的输出， 可以作为信息摘要。 </p>\\n<p>我们说“没有人能够”找到<code class=\\\"language-text\\\">x != y</code>使得<code class=\\\"language-text\\\">H(x) == H(y)</code>， 反过来也就是只要<code class=\\\"language-text\\\">H(x) == H(y)</code>，我们就可以认为<code class=\\\"language-text\\\">x == y</code>的。这样我们要比较两个文件是否一致， 不管这两个文件有多大， 我们只需要比较他们的hash输出即可，而hash输出只有256bits，比较非常快。 </p>\\n<p>有个典型的应用是网盘的“秒传”功能， 用过网盘的都知道， 在上传某些大文件（比如某部电影）的时候， 可能几秒就传完了。一部几个G的电影， 几秒就传到网盘服务器上去了， 你们家网速真的有这么快么？！事实是， 网盘先在本地计算电影的hash值， 然后把输出的256bits发给服务器， 如果服务器上之前已经有某个文件的hash值等于现在的256bits，则认为网盘服务器上已经有这个文件了， 就不需要传了， 只需要在服务器后台加条记录链接过去就可以了。 所以我们会发现越是热门的电影等越是容易秒传。 而如果你自己拍的视频被“秒传”了， 那你就得想想是怎么回事儿了。</p>\\n<p>文件摘要还有一个用处是验证下载的文件是否完整没有被篡改过。一般下载软件都建议大家去官网下载， 但是有时候官网下载速度比较慢（尤其是官网在国外的时候），这时候很多人会选择在其他论坛或者使用p2p软件（比如迅雷）下载， 但是这样其实是有安全问题的。 有可能你下载的软件已经被别人植入了病毒， 大家还记得之前的<a href=\\\"https://zh.wikipedia.org/zh-cn/XcodeGhost%E9%A3%8E%E6%B3%A2\\\">Xcode Ghost风波</a>么？那么我们就可以通过从第三方下载软件， 下载完成之后， 计算软件的hash值， 然后比较这个hash值是否等于官网上的hash值（一般官网都会提供软件的好几种hash值），如果相同，我们就可以放心地使用此软件。这样，既提高了软件下载速度，也保证了安全性。</p>\\n<h1 id=\\\"hiding\\\"><a href=\\\"#hiding\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Hiding</h1>\\n<p>我们希望hash函数满足这样的性质：知道<code class=\\\"language-text\\\">H(x)</code>，不可能推算出<code class=\\\"language-text\\\">x</code>。</p>\\n<p>不过上面这样描述不太准确， 因为如果x的取值范围有限， 比如只是0-9， 则我们可以对0-9求H(x)， 然后直接反查就可以得出x了。准确的描述应该如下：</p>\\n<blockquote>\\n<p>如果我们从一个满足high min-entropy的概率分布中选出一个秘密的值r， 则如果知道H(r || x)的情况下不能推算出x， 则我们说H函数满足Hiding性质。</p>\\n</blockquote>\\n<p>high min-entropy大概意思是从一个很大的空间中随机选择一个值，每个值的概率基本是一样的。比如我们从“所有256bits长的字符串”这个空间中等概率的选择一个字符串，则选到具体某个字符串的概率是<code class=\\\"language-text\\\">1 / Math.pow(2, 256)</code>， 这是一个极小的数字。<code class=\\\"language-text\\\">||</code>表示字符串拼接， 比如<code class=\\\"language-text\\\">hello || blockchain! === hello blochain!</code>。</p>\\n<p>这里拼接一个从很大空间中选出来的secret值r的目的就是为了让<code class=\\\"language-text\\\">r || x</code>的取值范围变得很大， 目的跟密码加盐再做hash差不多。</p>\\n<h2 id=\\\"应用案例：承诺commitments\\\"><a href=\\\"#%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%89%BF%E8%AF%BAcommitments\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>应用案例：承诺Commitments</h2>\\n<p>我们来做一个游戏， 我想一个0-9的数， 你来猜， 猜对算赢。如果我只是“想”一个数的话， 你永远赢不了，因为哪怕你猜对了，我也可以说我想的是另外一个数。如果我们是面对面的话， 可以这样， 我把数字写下来，放在信封里，把信封放在我们面前的桌子上， 你猜了数字之后， 我们打开信封，就能验证有没有猜对， 而我也不能抵赖或者偷偷修改之前写的数字。</p>\\n<p>如果在线上要怎么玩呢？因为我们可以找一个满足Collision Free和Hiding性质的函数H， 我想一个数字x， 然后把H(x)发出来给大家看到， 因为我们说H具有Collision Free性质， 所以我不可能事后说我写的数字其实是x1， 因为我找不到满足<code class=\\\"language-text\\\">x1 != x</code>并且<code class=\\\"language-text\\\">H(x1) == H(x)</code>的数字，所以我不能抵赖。但是你是可以把0-9都用H计算一遍， 然后跟H(x)对比，就能知道我想的x是多少了。</p>\\n<p>所以我还需要随机选择一个256bits的key， 然后把<code class=\\\"language-text\\\">H(key || x)</code>发出来，因为<code class=\\\"language-text\\\">key</code>的选择空间是<code class=\\\"language-text\\\">Math.pow(2, 256)</code>，你不可能去遍历所有可能的key来暴力计算所有的<code class=\\\"language-text\\\">H(key || x)</code>，因此就没办法知道<code class=\\\"language-text\\\">key || x</code>，也就没办法知道<code class=\\\"language-text\\\">x</code>了。同样，我还是不可能找到另一个不同的<code class=\\\"language-text\\\">key1</code>，使得<code class=\\\"language-text\\\">key1 != key</code>但是<code class=\\\"language-text\\\">H(key1 || x) == H(key || x)</code>的。这样就保证了我既不能抵赖，你也不能推算出<code class=\\\"language-text\\\">x</code>，对于你猜的数字y，只要事后我把<code class=\\\"language-text\\\">key</code>发出来，计算<code class=\\\"language-text\\\">H(key || x)</code>和<code class=\\\"language-text\\\">H(key || y)</code>，如果两者相等， 则认为<code class=\\\"language-text\\\">x == y</code>， 反之亦然。</p>\\n<p>除了玩猜数字游戏这个，还有哪些使用场景呢？博彩、在线扑克等使用这个特性， 就能一定程度保证庄家不会作弊。最近在构思用区块链技术解决在线poker的一些问题， 有兴趣私聊。</p>\\n<h1 id=\\\"puzzle-friendly\\\"><a href=\\\"#puzzle-friendly\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Puzzle Friendly</h1>\\n<p>对于n-bit的输出y，如果k是从一个high min-entropy的分布中选出来的，如果不可能在远小于<code class=\\\"language-text\\\">Math.pow(2, n)</code>的时间中找到x使得<code class=\\\"language-text\\\">H(k || x) == y</code>， 则我们说H具有Puzzle friendliness性质。</p>\\n<p>这个性质是说， 要想找到x， 使得<code class=\\\"language-text\\\">H(k || x) == y</code>， 没什么办法比随机乱猜更有效！</p>\\n<h2 id=\\\"应用案例：搜索谜题search-puzzle\\\"><a href=\\\"#%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%90%9C%E7%B4%A2%E8%B0%9C%E9%A2%98search-puzzle\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>应用案例：搜索谜题Search puzzle</h2>\\n<p>搜索谜题包括几个要素：</p>\\n<ul>\\n<li>hash函数H</li>\\n<li>puzzle-ID，需要是从high min-entropy分布中选出来的</li>\\n<li>目标范围Y</li>\\n</ul>\\n<p>这个问题的解x需要满足如下性质：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token constant\\\">H</span><span class=\\\"token punctuation\\\">(</span>id <span class=\\\"token operator\\\">||</span> x<span class=\\\"token punctuation\\\">)</span> ∈ <span class=\\\"token constant\\\">Y</span></code></pre>\\n      </div>\\n<p>假设hash函数H输出是n-bit，则输出空间大小为<code class=\\\"language-text\\\">Math.pow(2, n)</code>。Y的大小决定了问题的求解难度。如果Y的大小等于<code class=\\\"language-text\\\">Math.pow(2, n)</code>，则最容易，随便一个x都满足条件。如果Y的大小只有1， 则问题是最难的。Y范围越小，问题越难。</p>\\n<p>如果H是puzzle-friendly的，则没有什么方法比随机取x去尝试更有效。 事实上， 比特币的挖矿机制就利用了这个性质。</p>\\n<h1 id=\\\"总结\\\"><a href=\\\"#%E6%80%BB%E7%BB%93\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>总结</h1>\\n<p>本文我们讲了密码学领域的hash函数， 以及需要满足几个特征来保证其安全性。 最后要强调的是， 目前没有哪个函数被“数学证明”是满足这三个特征的， 只是有些函数人们在实际中花了大量精力去“破解”而没有成功，因此我们暂时认为其是“安全”的。所以，安全是一个相对以及不断发展变化的问题，就好比以前几十年都认为是安全的MD5， 后来也被发现是不安全的了。那么目前认为还是安全的sha256， 到哪有一天会被发现有问题呢？让我们拭目以待。</p>\\n<p>下一篇讲公钥加密机制。</p>\\n<h1 id=\\\"参考资料\\\"><a href=\\\"#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>参考资料</h1>\\n<ul>\\n<li><a href=\\\"http://bitcoinbook.cs.princeton.edu/\\\">http://bitcoinbook.cs.princeton.edu/</a></li>\\n</ul>\",\"timeToRead\":5,\"excerpt\":\"在区块链开发中涉及到很多密码学知识， 不懂得相关原理，可能很难理解设计思路更不要说阅读源码了。 我们就花一点时间来了解下区块链开发设计到的密码学知识， 本文简单介绍Hash函数的一些性质， 要想更深入了解请阅读相关专业文献。 什么是Hash函数 这里说的Hash…\",\"fields\":{\"slug\":\"/blockchain-crytography-hash/\"},\"frontmatter\":{\"title\":\"区块链系列二：区块链涉及到的密码学知识之Hash\",\"date\":\"2018-03-24\",\"category\":\"Blockchain\",\"tags\":[\"BTC\",\"密码学\",\"crytography\",\"hash\"]}}},{\"node\":{\"html\":\"<p>我们知道Node.js里充满着大量的异步， 后来出现了Promise以及async/await来解决”callback hell”的问题。我们就来看看promise以及async/await如何简化JS并发代码的编写， 最后再给出一份实现相同功能的Go代码。</p>\\n<!-- more -->\\n<h1 id=\\\"问题\\\"><a href=\\\"#%E9%97%AE%E9%A2%98\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>问题</h1>\\n<p>代码开发中经常会做的一件事就是去请求一个api， 并可能进一步根据api返回结果去获取访问新的接口。 这里我们构造一个问题：获取<a href=\\\"https://cnodejs.org/\\\">https://cnodejs.org/</a> 前10个主题的id、title、date、作者昵称以及第一个回复者的昵称。 cnodejs提供了api， <a href=\\\"https://cnodejs.org/api\\\">https://cnodejs.org/api</a> 这里的前两个接口就能满足我们的要求。 首先用<a href=\\\"https://cnodejs.org/api/v1/topics\\\">https://cnodejs.org/api/v1/topics</a> 接口获取到前10个topics， 然后取出每个topic的id去访问<code class=\\\"language-text\\\">get /topic/:id 主题详情</code>接口， 里面可以获取到回复数据。</p>\\n<h1 id=\\\"简单实现\\\"><a href=\\\"#%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>简单实现</h1>\\n<p>发起网络请求有很多方法， 我们这里采用<a href=\\\"https://github.com/axios/axios\\\">axios</a>库， 有几个好处， 其中包括同时支持Node.js和Browser。</p>\\n<p>我们直接用“最先进”的async/await来实现一个版本:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> axios <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"axios\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">getFirst10TopicsIncludeFirstReplyAuthor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> response <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> axios<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token string\\\">\\\"https://cnodejs.org/api/v1/topics?limit=10\\\"</span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> json <span class=\\\"token operator\\\">=</span> response<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> first10 <span class=\\\"token operator\\\">=</span> json<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>topic <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n      id<span class=\\\"token punctuation\\\">:</span> topic<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span>\\n      title<span class=\\\"token punctuation\\\">:</span> topic<span class=\\\"token punctuation\\\">.</span>title<span class=\\\"token punctuation\\\">,</span>\\n      date<span class=\\\"token punctuation\\\">:</span> topic<span class=\\\"token punctuation\\\">.</span>create_at<span class=\\\"token punctuation\\\">,</span>\\n      author<span class=\\\"token punctuation\\\">:</span> topic<span class=\\\"token punctuation\\\">.</span>author<span class=\\\"token punctuation\\\">.</span>loginname\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> topic <span class=\\\"token keyword\\\">of</span> first10<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> response <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> axios<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`https://cnodejs.org/api/v1/topic/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>topic<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> json <span class=\\\"token operator\\\">=</span> response<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> firstReply <span class=\\\"token operator\\\">=</span> json<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span>replies<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    topic<span class=\\\"token punctuation\\\">.</span>firstReplyAuthor <span class=\\\"token operator\\\">=</span> firstReply <span class=\\\"token operator\\\">&amp;&amp;</span> firstReply<span class=\\\"token punctuation\\\">.</span>author<span class=\\\"token punctuation\\\">.</span>loginname<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> first10<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">getFirst10TopicsIncludeFirstReplyAuthor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>data <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h1 id=\\\"并发\\\"><a href=\\\"#%E5%B9%B6%E5%8F%91\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>并发</h1>\\n<p>上述代码简单直接， 用了async/await， 异步代码看上去基本上是同步的， 很直观易懂。 先发起一个请求， 获取10个topics的信息， 然后针对每个topic发起一个请求， 去获取第一条回复数据，最后把数据拼凑在一起返回。 由于后面的请求需要第一个请求返回的id， 因此必须等到第一个请求回来才可以发送后面的请求， 这块没有任何问题。 但是后面的10个请求完全是独立的， 因此可以并发请求，这样能大大缩短时间。比如每个请求需要花费1s， 则上述代码总共需要花费<code class=\\\"language-text\\\">1(第一个请求) + 10(后面10个请求) = 11s</code>， 而如果将第二步的请求完全并发则只需要<code class=\\\"language-text\\\">1(第一个请求) + 1(后面10个请求同时请求) = 2s</code>！！！</p>\\n<p>由于网络请求受网速影响很大不利于我们精确分析问题， 也避免大量的请求给Cnodejs服务造成影响， 我们在本地用<code class=\\\"language-text\\\">setTimout</code>模拟网络请求花费的时间。</p>\\n<p>上述代码在并发性上跟下面代码基本等价：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// 模拟一次api网络请求花费1s</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">,</span> time <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> time<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">get10Topics</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> t1 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> result <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> total <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;=</span> total<span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">+=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> r <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    result<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>r<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">const</span> t2 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`total cost: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>t2 <span class=\\\"token operator\\\">-</span> t1<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">ms.`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> result<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">get10Topics</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>data <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>执行之后发现， 确实在11s左右：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  test-js git:<span class=\\\"token punctuation\\\">(</span>master<span class=\\\"token punctuation\\\">)</span> ✗ node p1.js\\ntotal cost: 11037ms.\\n<span class=\\\"token punctuation\\\">[</span> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 <span class=\\\"token punctuation\\\">]</span></code></pre>\\n      </div>\\n<p><a href=\\\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/all\\\">Promise.all</a>可以同时发起多个Promise，等到所有Promise都完成了之后返回一个数组， 包含每个Promise的结果。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// 模拟一次api网络请求花费1s</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">,</span> time <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> time<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">get10Topics2</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> t1 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> total <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> promises <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;=</span> total<span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">+=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    promises<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">const</span> result <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">all</span><span class=\\\"token punctuation\\\">(</span>promises<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">const</span> t2 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`total cost: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>t2 <span class=\\\"token operator\\\">-</span> t1<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">ms.`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> result<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">get10Topics2</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>data <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>时间正如我们说的， 缩短成了2s！</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  test-js git:<span class=\\\"token punctuation\\\">(</span>master<span class=\\\"token punctuation\\\">)</span> ✗ node p2.js\\ntotal cost: 2005ms.\\n<span class=\\\"token punctuation\\\">[</span> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 <span class=\\\"token punctuation\\\">]</span></code></pre>\\n      </div>\\n<h1 id=\\\"限流\\\"><a href=\\\"#%E9%99%90%E6%B5%81\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>限流</h1>\\n<p>上面第二种方法已经大大提高率效率， 而且请求数越多， 提高的效率越多。 前面的分析可以得出， 如果是获取前100个topics， 第一种串行的方法需要101s， 而第二种还是2s！！！</p>\\n<p>仔细想想你会发现哪里不对， 那就是第二种方法“太并发”了！10个请求可能还好， 如果同时并发100个请求， 那对服务器就会造成一定的影响， 如果是1000个，10000个， 那问题就更大了， 甚至到了一定程度， 会超过操作系统允许打开的连接数， 对客户端本身也会有很大的影响。</p>\\n<p>所以我们需要限制最大并发数，比如我们限制最大并发数为3， 则10个请求大概是3个3个一组， 总共会有4组（最后一组只有1个）， 总共时间是5s， 这也比11s提高了50%多。一种实现方式如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">get10Topics3</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> t1 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> total <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">MAX_CURRENCY</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> result <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;=</span> total<span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">+=</span> <span class=\\\"token constant\\\">MAX_CURRENCY</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> promises <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> j <span class=\\\"token operator\\\">=</span> i<span class=\\\"token punctuation\\\">;</span> j <span class=\\\"token operator\\\">&lt;</span> i <span class=\\\"token operator\\\">+</span> <span class=\\\"token constant\\\">MAX_CURRENCY</span> <span class=\\\"token operator\\\">&amp;&amp;</span> j <span class=\\\"token operator\\\">&lt;=</span> total<span class=\\\"token punctuation\\\">;</span> j <span class=\\\"token operator\\\">+=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      promises<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span>j<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">const</span> r <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">all</span><span class=\\\"token punctuation\\\">(</span>promises<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    result<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">...</span>r<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">const</span> t2 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`total cost: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>t2 <span class=\\\"token operator\\\">-</span> t1<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">ms.`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> result<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">get10Topics3</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>data <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>看一下结果：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  test-js git:<span class=\\\"token punctuation\\\">(</span>master<span class=\\\"token punctuation\\\">)</span> ✗ node p3.js\\ntotal cost: 5012ms.\\n<span class=\\\"token punctuation\\\">[</span> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 <span class=\\\"token punctuation\\\">]</span></code></pre>\\n      </div>\\n<p>还有什么问题么？</p>\\n<h1 id=\\\"one-more-step\\\"><a href=\\\"#one-more-step\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>One More Step</h1>\\n<p>上面的实现方法， 既利用了并发， 又对并发做了一定限制保证不至于把系统资源耗尽，似乎是完美的。 但是如果每个请求所需要的时间不一样呢？<code class=\\\"language-text\\\">get10Topics3</code>的实现方式是每三个一组， 等着三个都完成了， 再进行下一组请求。 那么如果三个任务中， 有一个花费的时间比较多， 另外两个任务完成了之后， 本来可以继续开始新的任务的， 现在必须等着第三个任务完成了才能开始新的任务。甚至如果三个任务需要的时间都不一样， 那么第一个需要等第二个和第三个， 第二个需要等第三个， 整个系统就被最慢的那个任务拖累了。 比如第一个任务需要1s， 第二个任务需要2s， 第三个任务需要3s， 则<code class=\\\"language-text\\\">get10Topics3</code>每组任务需要3s， 三组任务需要<code class=\\\"language-text\\\">3 * 3 = 9s</code>， 最后一组那个任务只需要1s， 总共需要<code class=\\\"language-text\\\">1 + 3 + 3 + 3 + 1 = 11s</code>， 当然这也比完全串行需要的时间<code class=\\\"language-text\\\">1 + 1 + 2 + 3 + 1 + 2 + 3 + 1 + 2 + 3 + 1 = 20s</code>要快不少。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// 模拟一次api网络请求花费特定时间</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">,</span> time <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">,</span> time<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> time<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">get10Topics4</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> t1 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> total <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">MAX_CURRENCY</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> result <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;=</span> total<span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">+=</span> <span class=\\\"token constant\\\">MAX_CURRENCY</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> promises <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> j <span class=\\\"token operator\\\">=</span> i<span class=\\\"token punctuation\\\">;</span> j <span class=\\\"token operator\\\">&lt;</span> i <span class=\\\"token operator\\\">+</span> <span class=\\\"token constant\\\">MAX_CURRENCY</span> <span class=\\\"token operator\\\">&amp;&amp;</span> j <span class=\\\"token operator\\\">&lt;=</span> total<span class=\\\"token punctuation\\\">;</span> j <span class=\\\"token operator\\\">+=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">const</span> costtime <span class=\\\"token operator\\\">=</span> j <span class=\\\"token operator\\\">%</span> <span class=\\\"token number\\\">3</span> <span class=\\\"token operator\\\">===</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token number\\\">3</span> <span class=\\\"token punctuation\\\">:</span> j <span class=\\\"token operator\\\">%</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 第一个任务1s， 第二个2是， 第三个3s...</span>\\n      promises<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span>j<span class=\\\"token punctuation\\\">,</span> costtime <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">const</span> t3 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> r <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">all</span><span class=\\\"token punctuation\\\">(</span>promises<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> t4 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`promise </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>i<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> cost: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>t4 <span class=\\\"token operator\\\">-</span> t3<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">ms`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    result<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">...</span>r<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">const</span> t2 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`total cost: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>t2 <span class=\\\"token operator\\\">-</span> t1<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">ms.`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> result<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">get10Topics4</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>data <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>运行结果：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  test-js git:<span class=\\\"token punctuation\\\">(</span>master<span class=\\\"token punctuation\\\">)</span> ✗ node p4.js\\n10 1000\\n1 1000\\n2 2000\\n3 3000\\npromise 1 cost: 3002ms\\n4 1000\\n5 2000\\n6 3000\\npromise 4 cost: 2999ms\\n7 1000\\n8 2000\\n9 3000\\npromise 7 cost: 3002ms\\n10 1000\\npromise 10 cost: 1005ms\\ntotal cost: 11030ms.\\n<span class=\\\"token punctuation\\\">[</span> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 <span class=\\\"token punctuation\\\">]</span></code></pre>\\n      </div>\\n<p>大家很容易想到， 把所需时间短的任务放一起并发执行， 这样就能减少互相等待的时间。比如把4个1s的放一起， 3个2s的放一起， 3个3s的放一起， 则总共需要时间为：<code class=\\\"language-text\\\">1 + 1 + 2 + 3 + 1 = 8s</code>， 又提高了一些。但是， 一方面我们在实际任务开始并完成之前， 并不知道具体哪个任务需要花多长时间， 另一方面不可能刚好总有花同样时间的任务能凑成一组， 甚至极端情况下， 每个任务所花时间都不一样。</p>\\n<p>仔细想想， 我们只需要这么做： 构建一个任务池， 一开始并发三个任务， 每个任务回来之后不用等其他两个任务， 直接看一下任务池还有任务么， 有的话就直接去做，直到所有任务都完成即可。</p>\\n<p>由于Node.js里面没有信号量来同步各个“线程”之间的工作， 这里用了递归并操作公共变量的方式实现， 如果读者有更好的方式可以给作者留言。注意， “并发地修改共享变量是万恶之源， 有data race的问题， 好在JS里面是单线程， 所以没有这个问题。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// 模拟一次api网络请求花费特定时间</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">,</span> time <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">,</span> time<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> time<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> start <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">worker</span><span class=\\\"token punctuation\\\">(</span>tasks<span class=\\\"token punctuation\\\">,</span> result<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> task <span class=\\\"token operator\\\">=</span> tasks<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">shift</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>task<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 任务结束</span>\\n    <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">const</span> costtime <span class=\\\"token operator\\\">=</span> task <span class=\\\"token operator\\\">%</span> <span class=\\\"token number\\\">3</span> <span class=\\\"token operator\\\">===</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token number\\\">3</span> <span class=\\\"token punctuation\\\">:</span> task <span class=\\\"token operator\\\">%</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 第一个任务1s， 第二个2是， 第三个3s...</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span>task<span class=\\\"token punctuation\\\">,</span> costtime <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>r <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>r<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> completes at time: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">-</span> start<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    result<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>r<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">worker</span><span class=\\\"token punctuation\\\">(</span>tasks<span class=\\\"token punctuation\\\">,</span> result<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">get10Topics5</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> t1 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> total <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">MAX_CURRENCY</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> result <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> tasks <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;=</span> total<span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">+=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    tasks<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> promises <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token constant\\\">MAX_CURRENCY</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">+=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    promises<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">worker</span><span class=\\\"token punctuation\\\">(</span>tasks<span class=\\\"token punctuation\\\">,</span> result<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> r <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">all</span><span class=\\\"token punctuation\\\">(</span>promises<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> t2 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`total cost: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>t2 <span class=\\\"token operator\\\">-</span> t1<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">ms.`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> result<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">get10Topics5</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>data <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>运行代码可以看到结果：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  test-js git:<span class=\\\"token punctuation\\\">(</span>master<span class=\\\"token punctuation\\\">)</span> ✗ node p5.js\\n10 1000\\n1 1000\\n2 2000\\n3 3000\\n1 completes at time: 2s, by worker0\\n4 1000\\n2 completes at time: 3s, by worker1\\n5 2000\\n4 completes at time: 3s, by worker0\\n6 3000\\n3 completes at time: 4s, by worker2\\n7 1000\\n5 completes at time: 5s, by worker1\\n8 2000\\n7 completes at time: 5s, by worker2\\n9 3000\\n6 completes at time: 6s, by worker0\\n10 1000\\n8 completes at time: 7s, by worker1\\n10 completes at time: 7s, by worker0\\n9 completes at time: 8s, by worker2\\ntotal cost: 8032ms.\\n<span class=\\\"token punctuation\\\">[</span> 1, 2, 4, 3, 5, 7, 6, 8, 10, 9 <span class=\\\"token punctuation\\\">]</span></code></pre>\\n      </div>\\n<p>我们可以看到，一开始同时开启了<code class=\\\"language-text\\\">worker0, worker1, worker2</code>三个“线程”去做事， <code class=\\\"language-text\\\">worker0</code>在第2s（因为第1s是调用第一个api）完成了task1，它并没有等待， 而是继续开始做task4。然后又过了1s， worker1完成了task2然后去开始做task5， 而此刻worker0完成了task4并开始去做task6， 又过了1s， worker2才完成了task3然后去做task7…可以看到每个worker都在争先恐后地完成任务， 直到所有任务全部完成， 总共花了8s时间。 </p>\\n<h1 id=\\\"重新实现并发访问api\\\"><a href=\\\"#%E9%87%8D%E6%96%B0%E5%AE%9E%E7%8E%B0%E5%B9%B6%E5%8F%91%E8%AE%BF%E9%97%AEapi\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>重新实现并发访问API</h1>\\n<p>这里我将最早串行访问API接口的代码改成并发执行， 没有做限流， 读者可根绝前文分析修改成限流版本，就当留作小练习吧。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> axios <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"axios\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">getFirst10TopicsIncludeFirstReplyAuthor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> axios\\n    <span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"https://cnodejs.org/api/v1/topics?limit=10\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>response<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">const</span> json <span class=\\\"token operator\\\">=</span> response<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">const</span> first10 <span class=\\\"token operator\\\">=</span> json<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>topic <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n          id<span class=\\\"token punctuation\\\">:</span> topic<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span>\\n          title<span class=\\\"token punctuation\\\">:</span> topic<span class=\\\"token punctuation\\\">.</span>title<span class=\\\"token punctuation\\\">,</span>\\n          date<span class=\\\"token punctuation\\\">:</span> topic<span class=\\\"token punctuation\\\">.</span>create_at<span class=\\\"token punctuation\\\">,</span>\\n          author<span class=\\\"token punctuation\\\">:</span> topic<span class=\\\"token punctuation\\\">.</span>author<span class=\\\"token punctuation\\\">.</span>loginname\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n      <span class=\\\"token keyword\\\">const</span> promises <span class=\\\"token operator\\\">=</span> first10<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>data <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> axios\\n          <span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`https://cnodejs.org/api/v1/topic/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>data<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span>\\n          <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>response <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">const</span> json <span class=\\\"token operator\\\">=</span> response<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">const</span> firstReply <span class=\\\"token operator\\\">=</span> json<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span>replies<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n              id<span class=\\\"token punctuation\\\">:</span> json<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span>\\n              firstReplyAuthor<span class=\\\"token punctuation\\\">:</span> firstReply <span class=\\\"token operator\\\">&amp;&amp;</span> firstReply<span class=\\\"token punctuation\\\">.</span>author<span class=\\\"token punctuation\\\">.</span>loginname\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">return</span> Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">all</span><span class=\\\"token punctuation\\\">(</span>promises<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>rs <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">const</span> map <span class=\\\"token operator\\\">=</span> rs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">reduce</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>acc<span class=\\\"token punctuation\\\">,</span> e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n          acc<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">set</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span> e<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token keyword\\\">return</span> acc<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> topic <span class=\\\"token keyword\\\">of</span> first10<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          topic<span class=\\\"token punctuation\\\">.</span>firstReplyAuthor <span class=\\\"token operator\\\">=</span> map<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">(</span>topic<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>firstReplyAuthor<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token keyword\\\">return</span> first10<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">catch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>error<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>error<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">getFirst10TopicsIncludeFirstReplyAuthor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>data <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h1 id=\\\"go语言实现\\\"><a href=\\\"#go%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Go语言实现</h1>\\n<p>其实Go跟Promise没啥关系， 只是最近刚好在用Go语言做东西， 因此拿来对比一下。Go里面很容易实现限流的功能，这里直接贴上代码，不做过多分析。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-go\\\"><code class=\\\"language-go\\\"><span class=\\\"token keyword\\\">package</span> main\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">(</span>\\n\\t<span class=\\\"token string\\\">\\\"fmt\\\"</span>\\n\\t<span class=\\\"token string\\\">\\\"time\\\"</span>\\n<span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">const</span> start <span class=\\\"token operator\\\">=</span> time<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Unix</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">func</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span>result <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">,</span> duration time<span class=\\\"token punctuation\\\">.</span>Duration<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token builtin\\\">int</span> <span class=\\\"token punctuation\\\">{</span>\\n\\tfmt<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Println</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">,</span> duration<span class=\\\"token punctuation\\\">)</span>\\n\\ttime<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Sleep</span><span class=\\\"token punctuation\\\">(</span>duration<span class=\\\"token punctuation\\\">)</span>\\n\\t<span class=\\\"token keyword\\\">return</span> result\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">func</span> <span class=\\\"token function\\\">worker</span><span class=\\\"token punctuation\\\">(</span>id <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">,</span> jobs <span class=\\\"token operator\\\">&lt;-</span><span class=\\\"token keyword\\\">chan</span> <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">,</span> result <span class=\\\"token keyword\\\">chan</span><span class=\\\"token operator\\\">&lt;-</span> <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t<span class=\\\"token keyword\\\">for</span> job <span class=\\\"token operator\\\">:=</span> <span class=\\\"token keyword\\\">range</span> jobs <span class=\\\"token punctuation\\\">{</span>\\n\\t\\tt <span class=\\\"token operator\\\">:=</span> job <span class=\\\"token operator\\\">%</span> <span class=\\\"token number\\\">3</span>\\n\\t\\t<span class=\\\"token keyword\\\">if</span> t <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t\\tt <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span>\\n\\t\\t<span class=\\\"token punctuation\\\">}</span>\\n\\t\\tr <span class=\\\"token operator\\\">:=</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span>job<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>time<span class=\\\"token punctuation\\\">.</span>Duration<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>t<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">*</span>time<span class=\\\"token punctuation\\\">.</span>Second<span class=\\\"token punctuation\\\">)</span>\\n\\t\\tdiff <span class=\\\"token operator\\\">:=</span> time<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Unix</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">-</span> start\\n\\t\\tfmt<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"%d completes at time: %ds, by worker%d\\\\n\\\"</span><span class=\\\"token punctuation\\\">,</span> r<span class=\\\"token punctuation\\\">,</span> diff<span class=\\\"token punctuation\\\">,</span> id<span class=\\\"token punctuation\\\">)</span>\\n\\t\\tresult <span class=\\\"token operator\\\">&lt;-</span> r\\n\\t<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">func</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\tt1 <span class=\\\"token operator\\\">:=</span> time<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Unix</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n\\n\\tjobs <span class=\\\"token operator\\\">:=</span> <span class=\\\"token function\\\">make</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">chan</span> <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span>\\n\\tresult <span class=\\\"token operator\\\">:=</span> <span class=\\\"token function\\\">make</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">chan</span> <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span>\\n\\ttotal <span class=\\\"token operator\\\">:=</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">*</span>time<span class=\\\"token punctuation\\\">.</span>Second<span class=\\\"token punctuation\\\">)</span>\\n\\n\\t<span class=\\\"token keyword\\\">const</span> MaxCurrency <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span>\\n\\t<span class=\\\"token keyword\\\">for</span> i <span class=\\\"token operator\\\">:=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> MaxCurrency<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t<span class=\\\"token keyword\\\">go</span> <span class=\\\"token function\\\">worker</span><span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">,</span> jobs<span class=\\\"token punctuation\\\">,</span> result<span class=\\\"token punctuation\\\">)</span>\\n\\t<span class=\\\"token punctuation\\\">}</span>\\n\\n\\t<span class=\\\"token keyword\\\">for</span> i <span class=\\\"token operator\\\">:=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;=</span> total<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\tjobs <span class=\\\"token operator\\\">&lt;-</span> i\\n\\t<span class=\\\"token punctuation\\\">}</span>\\n\\t<span class=\\\"token function\\\">close</span><span class=\\\"token punctuation\\\">(</span>jobs<span class=\\\"token punctuation\\\">)</span>\\n\\n\\trs <span class=\\\"token operator\\\">:=</span> <span class=\\\"token function\\\">make</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">,</span> total<span class=\\\"token punctuation\\\">)</span>\\n\\t<span class=\\\"token keyword\\\">for</span> i <span class=\\\"token operator\\\">:=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> total<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\tr <span class=\\\"token operator\\\">:=</span> <span class=\\\"token operator\\\">&lt;-</span>result\\n\\t\\trs<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> r\\n\\t<span class=\\\"token punctuation\\\">}</span>\\n\\n\\tt2 <span class=\\\"token operator\\\">:=</span> time<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Unix</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n\\tfmt<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"total cost: %ds.\\\\n\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>t2 <span class=\\\"token operator\\\">-</span> t1<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n\\tfmt<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Println</span><span class=\\\"token punctuation\\\">(</span>rs<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>执行输出如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  chap8 go run currency-rate-limit2.go\\n10 1s\\n1 1s\\n2 2s\\n3 3s\\n1 completes at time: 2s, by worker0\\n4 1s\\n4 completes at time: 3s, by worker0\\n2 completes at time: 3s, by worker2\\n5 2s\\n6 3s\\n3 completes at time: 4s, by worker1\\n7 1s\\n7 completes at time: 5s, by worker1\\n8 2s\\n5 completes at time: 5s, by worker0\\n9 3s\\n6 completes at time: 6s, by worker2\\n10 1s\\n8 completes at time: 7s, by worker1\\n10 completes at time: 7s, by worker2\\n9 completes at time: 8s, by worker0\\ntotal cost: 8s.\\n<span class=\\\"token punctuation\\\">[</span>1 4 2 3 7 5 6 8 10 9<span class=\\\"token punctuation\\\">]</span></code></pre>\\n      </div>\\n<h1 id=\\\"参考资料\\\"><a href=\\\"#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>参考资料</h1>\\n<ul>\\n<li><a href=\\\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\\\">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise</a></li>\\n<li><a href=\\\"https://yar999.gitbooks.io/gopl-zh/content/ch8/ch8-06.html\\\">https://yar999.gitbooks.io/gopl-zh/content/ch8/ch8-06.html</a></li>\\n</ul>\",\"timeToRead\":9,\"excerpt\":\"我们知道Node.js里充满着大量的异步， 后来出现了Promise以及async/await来解决”callback hell”的问题。我们就来看看promise以及async/await如何简化JS并发代码的编写， 最后再给出一份实现相同功能的Go…\",\"fields\":{\"slug\":\"/concurrency-by-promise/\"},\"frontmatter\":{\"title\":\"用Promise实现并发 vs Go goroutine\",\"date\":\"2018-03-24\",\"category\":\"FE\",\"tags\":[\"promise\",\"concurrency\",\"并发\",\"go\",\"goroutine\"]}}},{\"node\":{\"html\":\"<p>最近用Go写代码，在VSCode下安装了vscodego插件， 语法高亮、代码提示、代码跳转、错误提示等都支持， 完美！</p>\\n<p>不知道哪天突然发现没有代码提示了， 只有提示”PANIC”。。。。。</p>\\n<p>经过google， 发现代码提示用的是<a href=\\\"https://github.com/nsf/gocode\\\">gocode</a>，也<a href=\\\"https://tonybai.com/2016/12/23/write-go-code-in-vscode/\\\">有人遇到过</a>，手动重启gocode即可。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">gocode close\\ngocode -s</code></pre>\\n      </div>\\n<p>执行之后还是不行， 有报错：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">panic: unknown <span class=\\\"token function\\\">export</span> <span class=\\\"token function\\\">format</span> version 5 <span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"version 5\\\"</span><span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\\n<p>拿去google， 找到gocode里的<a href=\\\"https://github.com/nsf/gocode/issues/456\\\">issues</a>， 提示说可以升级gocode：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">go get -u -v github.com/nsf/gocode\\n``<span class=\\\"token variable\\\"><span class=\\\"token variable\\\">`</span>\\n再重启， 一起ok了！\\n\\nPS， 发现升级之后其实vscode在遇到go代码并且你需要代码提示（按了.）的时候如果没有检测到gocode daemon进程，会自动帮你启动gocode的。会启动一个进程监听<span class=\\\"token variable\\\">`</span></span>127.0.0.1:37373`端口。</code></pre>\\n      </div>\",\"timeToRead\":1,\"excerpt\":\"最近用Go写代码，在VSCode下安装了vscodego插件， 语法高亮、代码提示、代码跳转、错误提示等都支持， 完美！ 不知道哪天突然发现没有代码提示了， 只有提示”PANIC”。。。。。 经过google， 发现代码提示用的是 gocode…\",\"fields\":{\"slug\":\"/go-vscodego-no-tip/\"},\"frontmatter\":{\"title\":\"VSCode go插件代码提示失效\",\"date\":\"2018-03-22\",\"category\":\"Go\",\"tags\":[\"vscode\",\"go\",\"gocode\"]}}},{\"node\":{\"html\":\"<p>比特币去年大涨，各种新闻、技术论坛甚至身边的大叔大妈都在讨论比特币，火爆程度远超15年年初的股市。甚至直接带动各种山寨币、空气币大涨，似乎只要发个币都是几十、几百倍的增长，简直全民疯狂！</p>\\n<p>这些请大家理智看待，冷静分析，合理投资，我不给其助威，也不泼冷水，仅从技术的角度来探讨一些问题。</p>\\n<p>最早听说比特币是在11年，然后去年下半年才开始系统地了解区块链相关的技术，打算接下来整理一下这方面的知识，希望对大家有所帮助。 市面上也有很多文章书籍甚至课程来讲授比特币或者区块链技术的，所以我不会面面俱到，尽可能挑一些自己感兴趣的话题来写。推荐一些区块链相关的学习资料，<a href=\\\"https://magicly.me/blockchain-materials\\\">https://magicly.me/blockchain-materials</a> 。</p>\\n<!-- more -->\\n<p>可能大部分人都已经知道比特币是通过“挖矿”凭空产生的，挖矿就是不停地做hash计算，当找到某个值刚好满足条件，就算挖出矿了， 就会得到一部分比特币作为奖励。 基本上挖出比特币的概率，等于你自己的算力（用每秒能做多少次hash计算来衡量）占全球参与挖矿的算力的百分比。 简单来说，如果全球每秒能做100次hash运算，你每秒能做1次hash运算，那你挖到比特币的概率就是1%。</p>\\n<p>最早的时候大家用CPU挖矿，后来发现GPU会快很多，最后干脆有人把hash算法集成到了芯片上（即ASIC，Application-specific integrated circuit），算力再次暴涨。下图可以看出这两年算力的增长情况（来源：<a href=\\\"https://blockchain.info/charts/hash-rate?timespan=2years%EF%BC%89%EF%BC%9A\\\">https://blockchain.info/charts/hash-rate?timespan=2years）：</a>\\n<img src=\\\"/blogimgs/blockchain/hash-rate.png\\\" alt=\\\"hash算力增长图标\\\"></p>\\n<p>通过<a href=\\\"https://blockexplorer.com/api/status?q=getDifficulty\\\">https://blockexplorer.com/api/status?q=getDifficulty</a> 这个接口可以获取到当前算力的“难度”，目前为：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"difficulty\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">3290605988755.001</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>根据比特币挖矿机制，每10分钟产生一个区块需要的算力公式为：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\">  difficulty <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">**</span> <span class=\\\"token number\\\">32</span> <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">600</span> <span class=\\\"token comment\\\">// 23555072455973170000， 即20921P/s</span></code></pre>\\n      </div>\\n<p>即当前算力大概在每秒20921P次hash运算才能在10分钟内记账一次，得到12.5个BTC。号称当前最快的蚂蚁矿机S9，算力是13.5T，也就是说全网大概有20921 * 2 ** 10 / 13.5 = 1586896， 相当于全网大概有160万台S9在运行。</p>\\n<p>每10分钟出一次块， 一天能出<code class=\\\"language-text\\\">24 * 6 == 144</code>块，据说一个S9能正常运行两年，如果不考虑这两年的算力增长（基本不可能，16年到现在算力增长了接近20倍），大概在这两年你能有多大的机会挖中一次呢：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token number\\\">13.5</span> <span class=\\\"token operator\\\">/</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">20921</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">**</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">144</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">365</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token comment\\\">//0.0662 </span></code></pre>\\n      </div>\\n<p>而目前一块的奖励是12.5BTC，也就是说你的期望是<code class=\\\"language-text\\\">0.0662 * 12.5 == 0.8280</code>个BTC。刚刚在火币网上查的目前BTC价格是52000rmb不到，也就是期望获得<code class=\\\"language-text\\\">0.8280 * 52000 == 43057</code>的回报。矿机本身15000，S9的功耗是1320w， 两年用电<code class=\\\"language-text\\\">1.32 * 24 * 365 * 2 === 23126.4</code>度，所以能不能赚，基本上取决于你能找到多便宜的电了。</p>\\n<p>注意，我们的计算比较简单，只是给大家一个直观的感受，以及大概计算方式，并没有考虑算力的增长以及BTC价格的增长，所以我们不做建议。网上有很多更复杂的计算，并根据结果建议怎么挖矿的， 大家自行搜索即可，本文不做任何投资建议。</p>\\n<p>另外，根据BTC的协议，目前挖出一块是12.5BTC，也就是说如果你“自己”挖的话，要么挖中一块是12.5BTC，要么不中就啥也没有，根本不存在所谓的<code class=\\\"language-text\\\">在家挖了一个月，挖到0.00001BTC，连电费都不够</code>这种说法。 当然，由于现在算力太多，出现了“矿池”，即大家合作来一起挖，挖中一块，再根据大家贡献的算力百分比来分，这种情况才可能有挖到零点几个BTC的说法。</p>\\n<h1 id=\\\"单位换算\\\"><a href=\\\"#%E5%8D%95%E4%BD%8D%E6%8D%A2%E7%AE%97\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>单位换算</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token number\\\">1</span>P <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">**</span> <span class=\\\"token number\\\">50</span> <span class=\\\"token operator\\\">~</span><span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span> <span class=\\\"token comment\\\">// 千万亿</span>\\n\\n<span class=\\\"token number\\\">1</span>T <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">**</span> <span class=\\\"token number\\\">40</span> <span class=\\\"token operator\\\">~</span><span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span> <span class=\\\"token comment\\\">// 万亿</span>\\n\\n<span class=\\\"token number\\\">1</span>G <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">**</span> <span class=\\\"token number\\\">30</span> <span class=\\\"token operator\\\">~</span><span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span>  <span class=\\\"token comment\\\">// 十亿</span>\\n\\n<span class=\\\"token number\\\">1</span>M <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">**</span> <span class=\\\"token number\\\">20</span> <span class=\\\"token operator\\\">~</span><span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span> <span class=\\\"token comment\\\">// 一百万</span>\\n\\n<span class=\\\"token number\\\">1</span>K <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">**</span> <span class=\\\"token number\\\">10</span> <span class=\\\"token operator\\\">~</span><span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1000</span> <span class=\\\"token comment\\\">// 一千</span></code></pre>\\n      </div>\\n<h1 id=\\\"参考资料\\\"><a href=\\\"#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>参考资料</h1>\\n<ul>\\n<li><a href=\\\"http://shop.bitmain.com/productDetail.htm?pid=00020180301152028259U755GVmt0665\\\">蚂蚁矿机S9 13.5T</a></li>\\n<li><a href=\\\"https://en.bitcoin.it/wiki/Difficulty\\\">https://en.bitcoin.it/wiki/Difficulty</a></li>\\n<li><a href=\\\"https://bitcoin.stackexchange.com/questions/5838/how-is-difficulty-calculated\\\">https://bitcoin.stackexchange.com/questions/5838/how-is-difficulty-calculated</a></li>\\n<li><a href=\\\"https://blockchain.info/charts/hash-rate?timespan=2years\\\">全网Hash算力</a></li>\\n</ul>\",\"timeToRead\":2,\"excerpt\":\"比特币去年大涨，各种新闻、技术论坛甚至身边的大叔大妈都在讨论比特币，火爆程度远超1…\",\"fields\":{\"slug\":\"/blockchain-btc-mining/\"},\"frontmatter\":{\"title\":\"区块链系列一：现在挖比特币有多难\",\"date\":\"2018-03-17\",\"category\":\"Blockchain\",\"tags\":[\"BTC\",\"bitcoin\",\"比特币\"]}}},{\"node\":{\"html\":\"<p>已经太多次听到这样的言论：“XXXX是个伪命题”， 也太多次看到这样的标题：“为什么说XXX是个伪命题？”。 绝大多数时候使用者其实都没明白“伪命题”一词的含义， 一部分是把它跟“假命题”混淆了， 一部分人纯粹就是为了装13。</p>\\n<p>每次听到这样的话， 我都起一身鸡皮疙瘩。最近区块链火的不行，到处都能看到相关文章，似乎一夜之间很多人都成了区块链专家。今天看到一篇，“区块链是个伪命题”， 还有一篇“为什么说区块链的去中心化是个伪命题？”。大哥， 你这就好比说，“鸡蛋是个伪命题”， “为什么说鸡蛋的蛋壳是个伪命题”一样， 听了自己不会觉得奇怪的么？</p>\\n<!-- more -->\\n<p>在我印象中， “伪命题”表示的是“没办法证伪的命题”， 英文是pseudo proposition。 而命题是一个陈述句，用于说明某种事实，如果这事实为真，则叫真命题(True proposition)，如果为假，则为假命题(False proposition)。比如“5 > 3”是真命题，“3 > 5”则是一个假命题。而如果说”X > 5”，因为你不知道X到底是啥，所以这个命题既有可能是真， 也有可能是假，没办法判断，所以是“伪命题”。 所以我们说一个东西是“伪命题”，至少得这个东西是一个完整的陈述句啊！“区块链”是一句陈述句么？“鸡蛋的颜色”是一句陈述句么？</p>\\n<p>上面只是我的想法，为了严谨， 我还是查一下资料吧。发现知乎上早就已经有人受不了，问过<a href=\\\"https://www.zhihu.com/question/20105937\\\">「伪命题」一词是否被滥用了？</a>，我比较赞同下面这条回答：</p>\\n<div style=\\\"background-color:yellow; color: #8590a6\\\">\\n离散数学经典教材<a href=\\\"https://book.douban.com/subject/1786209/\\\">Discrete Mathematics and Its Applications</a>开篇第一章就对命题做出的如下的定义：\\n<blockquote>\\n<p>A proposition is a declarative sentence (that is, a sentence that declares a fact) that is either true or false, but not both.</p>\\n</blockquote>\\n<p>翻译过来就是：命题是一个非真即假的陈述语句，但绝不可能即真又假.</p>\\n<p>然后又举了4个不是命题（也就是伪命题）的例子：</p>\\n<blockquote>\\n<ol>\\n<li>What time is it?</li>\\n<li>Read this carefully.</li>\\n<li>x + 1 = 2.</li>\\n<li>x + y = z.</li>\\n</ol>\\n</blockquote>\\n<p>原因如下：</p>\\n<blockquote>\\n<p>1,2明显不是陈述语句。3,4因为它们既不是真的，也不是假的，也就是说我们无法判断</p>\\n</blockquote>\\n<p>作者：张斌斌\\n链接：<a href=\\\"https://www.zhihu.com/question/20105937/answer/26284295\\\">https://www.zhihu.com/question/20105937/answer/26284295</a>\\n来源：知乎\\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>\\n</div>\\n<p>在wiki上搜了一下， 没有查到“伪命题”，只查到<a href=\\\"https://en.wikipedia.org/wiki/Proposition\\\">Proposition</a>：</p>\\n<blockquote>\\n<p>Often propositions are related to closed sentences to distinguish them from what is expressed by an open sentence. In this sense, propositions are “statements” that are truth-bearers. This conception of a proposition was supported by the philosophical school of logical positivism.</p>\\n</blockquote>\\n<p>也就是说，“命题”得是一句关于事实判断的完整的陈述句。</p>\\n<p>百度百科的关于<a href=\\\"https://baike.baidu.com/item/%E4%BC%AA%E5%91%BD%E9%A2%98/7507754\\\">伪命题</a>的解释：</p>\\n<div style=\\\"background-color:yellow; color: #8590a6\\\">\\n<blockquote>\\n<p>伪命题是指不真实的命题。所谓不真实，有两种情况：其一是不符合客观事实；其二是不符合一般事理和科学道理。 另一种解释是指没有意义的命题，无法断定其真假，既不是先天的分析命题，也不是可以通过经验判断的综合命题。比如，“团结比原子弹还厉害”，”凡事都有例外”这类命题就属于伪命题。</p>\\n</blockquote>\\n<blockquote>\\n<p>外文名 False proposition</p>\\n</blockquote>\\n</div>\\n可以看到，这里百度百科把“伪命题”当做是“假命题(False proposition)”，然后又包含了“无法断定其真假”的那部分。\\n<p>ok， 现在我们来看一下为什么说<code class=\\\"language-text\\\">“XXX是个伪命题”是个伪命题</code>。首先这句话的主语是“XXX是个伪命题”，这是一个完整的陈述句，但是它是命题么？不是！为啥，因为我们不知道<code class=\\\"language-text\\\">XXX</code>是什么，所以这句话既有可能是真，也有可能是假。比如，<code class=\\\"language-text\\\">XXX是&quot;3 &gt; 2&quot;</code>, 则“3 > 2是个伪命题”就是错的，即是“假命题False proposition”，如果<code class=\\\"language-text\\\">XXX是x &gt; 2</code>， 则“x > 2是个伪命题”，就是对的，即是“真命题True proposition”。所以“XXX是个伪命题”，我们既不能判断是真，也不能判断是假，所以是个伪命题。也就是说<code class=\\\"language-text\\\">“XXX是个伪命题”是个伪命题</code>，这句话本身是一个真命题！</p>\\n<p>另外，我们可以看出，由于“伪”在中文里本身有“假”的意思，所以很多人将“伪命题”当成是“假命题”来用，这个我还尚可理解。但即使是这样，我们在说某个东西是“假命题”的时候， 前提也得是这个东西本身是个“命题”或者至少是个完整的陈述句啊。比如某人想说区块链的去中心化不是很NB， 可以说“区块链的去中心化很NB，这是个假命题”。或者你把“伪命题”当“假命题”用，说“区块链的去中心化很NB，这是个伪命题”，那也能勉强接受， 但不能说“区块链的去中心化是个假命题”，或者说“区块链的去中心化是个伪命题”啊。 甚至直接说“区块链是个伪命题”， 这是个啥意思嘛？</p>\\n<p>简单来说，命题就好比是布尔类型，只能是True或False，你非得要把数字或字符串赋值给布尔类型， 那我们只能说不好意思，我们不支持自动类型转化， 编译失败！</p>\\n<p>另外可参考下面的资料：</p>\\n<ul>\\n<li><a href=\\\"https://zh.wikipedia.org/wiki/%E5%8F%AF%E8%AF%81%E4%BC%AA%E6%80%A7\\\">可证伪性</a></li>\\n<li><a href=\\\"https://zh.wikipedia.org/wiki/%E4%BC%AA%E7%A7%91%E5%AD%A6\\\">伪科学</a></li>\\n</ul>\",\"timeToRead\":2,\"excerpt\":\"已经太多次听到这样的言论：“XXXX是个伪命题”， 也太多次看到这样的标题：“为什么说XXX是个伪命题？”。 绝大多数时候使用者其实都没明白“伪命题”一词的含义， 一部分是把它跟“假命题”混淆了， 一部分人纯粹就是为了装1…\",\"fields\":{\"slug\":\"/pseudo-proposition/\"},\"frontmatter\":{\"title\":\"为什么说“XXX是个伪命题”是个伪命题？\",\"date\":\"2018-03-14\",\"category\":\"Others\",\"tags\":[\"伪命题\",\"逻辑\"]}}},{\"node\":{\"html\":\"<p><strong>持续更新，可以保持关注</strong></p>\\n<p>区块链的一些学习资料:</p>\\n<!-- more -->\\n<h1 id=\\\"入门介绍\\\"><a href=\\\"#%E5%85%A5%E9%97%A8%E4%BB%8B%E7%BB%8D\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>入门介绍</h1>\\n<ul>\\n<li><a href=\\\"http://blog.codinglabs.org/articles/bitcoin-mechanism-make-easy.html\\\">一个故事告诉你比特币的原理及运作机制</a></li>\\n</ul>\\n<h1 id=\\\"密码学\\\"><a href=\\\"#%E5%AF%86%E7%A0%81%E5%AD%A6\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>密码学</h1>\\n<ul>\\n<li><a href=\\\"https://www.coursera.org/learn/crypto\\\">https://www.coursera.org/learn/crypto</a></li>\\n</ul>\\n<h1 id=\\\"btc\\\"><a href=\\\"#btc\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>BTC</h1>\\n<ul>\\n<li>中本聪的创世论文<a href=\\\"https://bitcoin.org/bitcoin.pdf\\\">Bitcoin: A Peer-to-Peer Electronic Cash System</a></li>\\n<li><a href=\\\"https://bitcoin.org/en/\\\">Bitcoin官网</a></li>\\n<li><a href=\\\"http://bitcoinbook.cs.princeton.edu/\\\">Bitcoin and Cryptocurrency Technologies</a> <a href=\\\"https://www.coursera.org/learn/cryptocurrency/home/welcome\\\">Coursera上课程</a> <a href=\\\"https://piazza.com/princeton/spring2015/btctech/home\\\">课程资料</a></li>\\n<li><a href=\\\"https://github.com/bitcoinbook/bitcoinbook\\\">Mastering Bitcoin 2nd Edition</a></li>\\n<li><a href=\\\"https://bitcoinbook.info/wp-content/translations/cmn/book.pdf\\\">精通比特币中文版</a>, <a href=\\\"http://book.8btc.com/master_bitcoin\\\">文在线版</a> </li>\\n</ul>\\n<h1 id=\\\"ethereum\\\"><a href=\\\"#ethereum\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Ethereum</h1>\\n<ul>\\n<li><a href=\\\"https://www.ethereum.org/\\\">https://www.ethereum.org/</a></li>\\n<li><a href=\\\"http://www.ethdocs.org/\\\">http://www.ethdocs.org/</a></li>\\n<li><a href=\\\"https://github.com/ethereum/go-ethereum/wiki\\\">https://github.com/ethereum/go-ethereum/wiki</a></li>\\n<li><a href=\\\"https://solidity.readthedocs.io/\\\">https://solidity.readthedocs.io/</a></li>\\n<li><a href=\\\"https://web3js.readthedocs.io\\\">https://web3js.readthedocs.io</a></li>\\n<li><a href=\\\"https://github.com/trufflesuite/truffle\\\">https://github.com/trufflesuite/truffle</a></li>\\n<li><a href=\\\"http://truffle.tryblockchain.org/\\\">http://truffle.tryblockchain.org/</a></li>\\n<li><a href=\\\"http://ethfans.org/topics/227\\\">以太坊代码剖析</a></li>\\n</ul>\\n<h1 id=\\\"hyperledger\\\"><a href=\\\"#hyperledger\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Hyperledger</h1>\\n<ul>\\n<li><a href=\\\"https://www.ibm.com/blockchain/cn-zh/hyperledger.html\\\">基于 Linux 基金会的 Hyperledger Fabric</a></li>\\n</ul>\\n<h1 id=\\\"其他\\\"><a href=\\\"#%E5%85%B6%E4%BB%96\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>其他</h1>\\n<ul>\\n<li><a href=\\\"https://github.com/llSourcell/Learn_Blockchain_in_2_months\\\">“Learn Blockchain in 2 Months” by Siraj Raval</a>, <a href=\\\"https://www.youtube.com/watch?v=wVVGv2bmxow\\\">Youtube视频</a></li>\\n<li><a href=\\\"https://github.com/btcsuite\\\">Bitcoin in Go</a></li>\\n<li><a href=\\\"https://github.com/zcash/zcash\\\">Zcash</a></li>\\n<li><a href=\\\"https://www.youtube.com/watch?v=lUiKpNU2Tx4\\\">Bitcoin NodeJS Part 1 - Hello World</a></li>\\n<li><a href=\\\"https://github.com/chaozh/awesome-blockchain\\\">Awesome Blockchain</a></li>\\n<li>\\n<p>NodeJS Bitcoin</p>\\n<ul>\\n<li><a href=\\\"https://github.com/bitcoinjs/bitcoinjs-lib\\\">https://github.com/bitcoinjs/bitcoinjs-lib</a></li>\\n<li><a href=\\\"https://en.bitcoin.it/wiki/Node.js_Example\\\">https://en.bitcoin.it/wiki/Node.js_Example</a></li>\\n<li><a href=\\\"https://en.bitcoin.it/wiki/Original_Bitcoin_client/API_calls_list\\\">https://en.bitcoin.it/wiki/Original<em>Bitcoin</em>client/API<em>calls</em>list</a></li>\\n<li><a href=\\\"https://bitcore.io/\\\">https://bitcore.io/</a></li>\\n<li><a href=\\\"https://github.com/bitpay/bitcore\\\">https://github.com/bitpay/bitcore</a></li>\\n<li><a href=\\\"https://github.com/ruimarinho/bitcoin-core\\\">https://github.com/ruimarinho/bitcoin-core</a></li>\\n</ul>\\n</li>\\n</ul>\",\"timeToRead\":2,\"excerpt\":\"持续更新，可以保持关注 区块链的一些学习资料: 入门介绍 一个故事告诉你比特币的原理及运作机制 密码学 https://www.coursera.org/learn/crypto BTC 中本聪的创世论文 Bitcoin: A Peer-to-Peer Electronic…\",\"fields\":{\"slug\":\"/blockchain-materials/\"},\"frontmatter\":{\"title\":\"区块链学习资料\",\"date\":\"2018-03-06\",\"category\":\"FE\",\"tags\":[\"typescript\",\"ts\"]}}},{\"node\":{\"html\":\"<p>TS的简介或者说学习笔记吧，主要留给自己查阅。</p>\\n<!-- more -->\\n<h1 id=\\\"在线工具\\\"><a href=\\\"#%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>在线工具</h1>\\n<p><a href=\\\"https://www.typescriptlang.org/play/index.html\\\">https://www.typescriptlang.org/play/index.html</a></p>\\n<h1 id=\\\"基本数据类型basic-types\\\"><a href=\\\"#%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8Bbasic-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>基本数据类型Basic Types</h1>\\n<h2 id=\\\"boolean\\\"><a href=\\\"#boolean\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Boolean</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">let</span> isDone<span class=\\\"token punctuation\\\">:</span> boolean <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2 id=\\\"number\\\"><a href=\\\"#number\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Number</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">let</span> decimal<span class=\\\"token punctuation\\\">:</span> number <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">6</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> hex<span class=\\\"token punctuation\\\">:</span> number <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0xf00d</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> binary<span class=\\\"token punctuation\\\">:</span> number <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0b1010</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> octal<span class=\\\"token punctuation\\\">:</span> number <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0o744</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2 id=\\\"string\\\"><a href=\\\"#string\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>String</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">let</span> color<span class=\\\"token punctuation\\\">:</span> string <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"blue\\\"</span><span class=\\\"token punctuation\\\">;</span>\\ncolor <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'red'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> sentence<span class=\\\"token punctuation\\\">:</span> string <span class=\\\"token operator\\\">=</span> `Hello<span class=\\\"token punctuation\\\">,</span> my name is $<span class=\\\"token punctuation\\\">{</span> fullName <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">.</span></code></pre>\\n      </div>\\n<h2 id=\\\"array\\\"><a href=\\\"#array\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Array</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">let</span> list<span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> list<span class=\\\"token punctuation\\\">:</span> Array<span class=\\\"token operator\\\">&lt;</span>number<span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2 id=\\\"tuple\\\"><a href=\\\"#tuple\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Tuple</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// Declare a tuple type</span>\\n<span class=\\\"token keyword\\\">let</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>string<span class=\\\"token punctuation\\\">,</span> number<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// Initialize it</span>\\nx <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"hello\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// OK</span>\\n<span class=\\\"token comment\\\">// Initialize it incorrectly</span>\\nx <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"hello\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// Error</span>\\n\\n<span class=\\\"token comment\\\">// When accessing an element outside the set of known indices, a union type is used instead:</span>\\nx<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"world\\\"</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// OK, 'string' can be assigned to 'string | number'</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// OK, 'string' and 'number' both have 'toString'</span>\\n\\nx<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">6</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// Error, 'boolean' isn't 'string | number'</span></code></pre>\\n      </div>\\n<h2 id=\\\"enum\\\"><a href=\\\"#enum\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Enum</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">enum</span> Color <span class=\\\"token punctuation\\\">{</span>Red <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> Green <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> Blue <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">let</span> c<span class=\\\"token punctuation\\\">:</span> Color <span class=\\\"token operator\\\">=</span> Color<span class=\\\"token punctuation\\\">.</span>Green<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">let</span> colorName<span class=\\\"token punctuation\\\">:</span> string <span class=\\\"token operator\\\">=</span> Color<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span>colorName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// Displays 'Green' as its value is 2 above</span></code></pre>\\n      </div>\\n<h2 id=\\\"any\\\"><a href=\\\"#any\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Any</h2>\\n<p>任意类型， 兼容JS的动态类型。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">let</span> notSure<span class=\\\"token punctuation\\\">:</span> any <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">;</span>\\nnotSure<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">ifItExists</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// okay, ifItExists might exist at runtime</span>\\nnotSure<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toFixed</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// okay, toFixed exists (but the compiler doesn't check)</span>\\n\\n<span class=\\\"token keyword\\\">let</span> prettySure<span class=\\\"token punctuation\\\">:</span> Object <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">;</span>\\nprettySure<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toFixed</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// Error: Property 'toFixed' doesn't exist on type 'Object'.</span></code></pre>\\n      </div>\\n<h2 id=\\\"void\\\"><a href=\\\"#void\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Void</h2>\\n<p>没有明确的<code class=\\\"language-text\\\">return</code>。 Declaring variables of type void is not useful because you can only assign undefined or null to them.</p>\\n<h2 id=\\\"null-and-undefined\\\"><a href=\\\"#null-and-undefined\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Null and Undefined</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// Not much else we can assign to these variables!</span>\\n<span class=\\\"token keyword\\\">let</span> u<span class=\\\"token punctuation\\\">:</span> undefined <span class=\\\"token operator\\\">=</span> undefined<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> n<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">null</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">--strictNullChecks</code></p>\\n<h2 id=\\\"never\\\"><a href=\\\"#never\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Never</h2>\\n<p>抛异常。</p>\\n<blockquote>\\n<p>The never type is a subtype of, and assignable to, every type; however, no type is a subtype of, or assignable to, never (except never itself). Even any isn’t assignable to never.</p>\\n</blockquote>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// Function returning never must have unreachable end point</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span>message<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span> never <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span>message<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// Inferred return type is never</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">fail</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Something failed\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// Function returning never must have unreachable end point</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">infiniteLoop</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span> never <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h2 id=\\\"type-assertions\\\"><a href=\\\"#type-assertions\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Type assertions</h2>\\n<p>你知道的比编译器多。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">let</span> someValue<span class=\\\"token punctuation\\\">:</span> any <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"this is a string\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">let</span> strLength<span class=\\\"token punctuation\\\">:</span> number <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&lt;</span>string<span class=\\\"token operator\\\">></span>someValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// or</span>\\n<span class=\\\"token keyword\\\">let</span> strLength<span class=\\\"token punctuation\\\">:</span> number <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>someValue <span class=\\\"token keyword\\\">as</span> string<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>在<code class=\\\"language-text\\\">JSX</code>里面只能用<code class=\\\"language-text\\\">as</code>，因为<code class=\\\"language-text\\\">&lt;&gt;</code>在JSX里有特殊含义。</p>\\n<h1 id=\\\"高级类型advanced-types\\\"><a href=\\\"#%E9%AB%98%E7%BA%A7%E7%B1%BB%E5%9E%8Badvanced-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>高级类型Advanced Types</h1>\\n<h2 id=\\\"intersection-types\\\"><a href=\\\"#intersection-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Intersection Types</h2>\\n<h2 id=\\\"union-types\\\"><a href=\\\"#union-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Union Types</h2>\\n<h2 id=\\\"type-guards-and-differentiating-types\\\"><a href=\\\"#type-guards-and-differentiating-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Type Guards and Differentiating Types</h2>\\n<h2 id=\\\"nullable-types\\\"><a href=\\\"#nullable-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Nullable types</h2>\\n<h2 id=\\\"type-aliases\\\"><a href=\\\"#type-aliases\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Type Aliases</h2>\\n<h2 id=\\\"string-literal-types\\\"><a href=\\\"#string-literal-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>String Literal Types</h2>\\n<h2 id=\\\"numeric-literal-types\\\"><a href=\\\"#numeric-literal-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Numeric Literal Types</h2>\\n<h2 id=\\\"enum-member-types\\\"><a href=\\\"#enum-member-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Enum Member Types</h2>\\n<h2 id=\\\"discriminated-unions\\\"><a href=\\\"#discriminated-unions\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Discriminated Unions</h2>\\n<h2 id=\\\"discriminated-unions-1\\\"><a href=\\\"#discriminated-unions-1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Discriminated Unions</h2>\\n<h2 id=\\\"index-types\\\"><a href=\\\"#index-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Index types</h2>\\n<h2 id=\\\"mapped-types\\\"><a href=\\\"#mapped-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Mapped types</h2>\\n<h1 id=\\\"interfaces\\\"><a href=\\\"#interfaces\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Interfaces</h1>\\n<p>TS采用<code class=\\\"language-text\\\">鸭子类型</code>或者叫<code class=\\\"language-text\\\">结构子类型</code>. “duck typing” or “structural subtyping”</p>\\n<h2 id=\\\"optional-properties\\\"><a href=\\\"#optional-properties\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Optional Properties</h2>\\n<h2 id=\\\"readonly-properties\\\"><a href=\\\"#readonly-properties\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Readonly properties</h2>\\n<h2 id=\\\"excess-property-checks\\\"><a href=\\\"#excess-property-checks\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Excess Property Checks</h2>\\n<h2 id=\\\"function-types\\\"><a href=\\\"#function-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Function Types</h2>\\n<h2 id=\\\"indexable-types\\\"><a href=\\\"#indexable-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Indexable Types</h2>\\n<h2 id=\\\"class-types\\\"><a href=\\\"#class-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Class Types</h2>\\n<h2 id=\\\"extending-interfaces\\\"><a href=\\\"#extending-interfaces\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Extending Interfaces</h2>\\n<h2 id=\\\"hybrid-types\\\"><a href=\\\"#hybrid-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Hybrid Types</h2>\\n<h2 id=\\\"interfaces-extending-classes\\\"><a href=\\\"#interfaces-extending-classes\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Interfaces Extending Classes</h2>\\n<h1 id=\\\"classes\\\"><a href=\\\"#classes\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Classes</h1>\\n<h2 id=\\\"inheritance\\\"><a href=\\\"#inheritance\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Inheritance</h2>\\n<h2 id=\\\"public-private-and-protected-modifiers\\\"><a href=\\\"#public-private-and-protected-modifiers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Public, private, and protected modifiers</h2>\\n<p>Public by default</p>\\n<h2 id=\\\"readonly-modifier\\\"><a href=\\\"#readonly-modifier\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Readonly modifier</h2>\\n<h2 id=\\\"accessors\\\"><a href=\\\"#accessors\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Accessors</h2>\\n<h2 id=\\\"static-properties\\\"><a href=\\\"#static-properties\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Static Properties</h2>\\n<h2 id=\\\"abstract-classes\\\"><a href=\\\"#abstract-classes\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Abstract Classes</h2>\\n<h2 id=\\\"advanced-techniques\\\"><a href=\\\"#advanced-techniques\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Advanced Techniques</h2>\\n<h3 id=\\\"constructor-functions\\\"><a href=\\\"#constructor-functions\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Constructor functions</h3>\\n<h3 id=\\\"using-a-class-as-an-interface\\\"><a href=\\\"#using-a-class-as-an-interface\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Using a class as an interface</h3>\\n<h1 id=\\\"functions\\\"><a href=\\\"#functions\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Functions</h1>\\n<h2 id=\\\"function-types-1\\\"><a href=\\\"#function-types-1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Function Types</h2>\\n<h2 id=\\\"optional-and-default-parameters\\\"><a href=\\\"#optional-and-default-parameters\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Optional and Default Parameters</h2>\\n<h2 id=\\\"rest-parameters\\\"><a href=\\\"#rest-parameters\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Rest Parameters</h2>\\n<h2 id=\\\"this\\\"><a href=\\\"#this\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>this</h2>\\n<h2 id=\\\"overloads\\\"><a href=\\\"#overloads\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Overloads</h2>\\n<h1 id=\\\"generics\\\"><a href=\\\"#generics\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Generics</h1>\\n<h2 id=\\\"generic-type-variables\\\"><a href=\\\"#generic-type-variables\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Generic Type Variables</h2>\\n<h2 id=\\\"generic-types\\\"><a href=\\\"#generic-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Generic Types</h2>\\n<h2 id=\\\"generic-classes\\\"><a href=\\\"#generic-classes\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Generic Classes</h2>\\n<h2 id=\\\"generic-constraints\\\"><a href=\\\"#generic-constraints\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Generic Constraints</h2>\\n<h1 id=\\\"enums\\\"><a href=\\\"#enums\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Enums</h1>\\n<h1 id=\\\"type-inference\\\"><a href=\\\"#type-inference\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Type Inference</h1>\\n<h2 id=\\\"best-common-type\\\"><a href=\\\"#best-common-type\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Best common type</h2>\\n<h2 id=\\\"contextual-type\\\"><a href=\\\"#contextual-type\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Contextual Type</h2>\\n<h1 id=\\\"type-compatibility\\\"><a href=\\\"#type-compatibility\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Type Compatibility</h1>\\n<h2 id=\\\"comparing-two-functions\\\"><a href=\\\"#comparing-two-functions\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Comparing two functions</h2>\\n<h2 id=\\\"function-parameter-bivariance\\\"><a href=\\\"#function-parameter-bivariance\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Function Parameter Bivariance</h2>\\n<h2 id=\\\"optional-parameters-and-rest-parameters\\\"><a href=\\\"#optional-parameters-and-rest-parameters\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Optional Parameters and Rest Parameters</h2>\\n<h2 id=\\\"enums-1\\\"><a href=\\\"#enums-1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Enums</h2>\\n<h2 id=\\\"classes-1\\\"><a href=\\\"#classes-1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Classes</h2>\\n<h2 id=\\\"generics-1\\\"><a href=\\\"#generics-1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Generics</h2>\\n<h2 id=\\\"advanced-topics\\\"><a href=\\\"#advanced-topics\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Advanced Topics</h2>\\n<p>Subtype vs Assignment</p>\\n<h1 id=\\\"symbols\\\"><a href=\\\"#symbols\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Symbols</h1>\\n<h1 id=\\\"iterators-and-generators\\\"><a href=\\\"#iterators-and-generators\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Iterators and Generators</h1>\\n<h1 id=\\\"modules\\\"><a href=\\\"#modules\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Modules</h1>\\n<h1 id=\\\"namespaces\\\"><a href=\\\"#namespaces\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Namespaces</h1>\\n<h1 id=\\\"namespaces-and-modules\\\"><a href=\\\"#namespaces-and-modules\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Namespaces and Modules</h1>\\n<h1 id=\\\"module-resolution\\\"><a href=\\\"#module-resolution\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Module Resolution</h1>\\n<h1 id=\\\"declaration-merging\\\"><a href=\\\"#declaration-merging\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Declaration Merging</h1>\\n<h1 id=\\\"jsx\\\"><a href=\\\"#jsx\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>JSX</h1>\\n<h1 id=\\\"decorators\\\"><a href=\\\"#decorators\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Decorators</h1>\\n<h1 id=\\\"mixins\\\"><a href=\\\"#mixins\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Mixins</h1>\\n<h1 id=\\\"triple-slash-directives\\\"><a href=\\\"#triple-slash-directives\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Triple-Slash Directives</h1>\\n<h1 id=\\\"语言规范\\\"><a href=\\\"#%E8%AF%AD%E8%A8%80%E8%A7%84%E8%8C%83\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>语言规范</h1>\\n<p><a href=\\\"https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md\\\">https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md</a></p>\",\"timeToRead\":5,\"excerpt\":\"TS的简介或者说学习笔记吧，主要留给自己查阅。 在线工具 https://www.typescriptlang.org/play/index.html 基本数据类型Basic Types Boolean Number String Array Tuple Enum Any…\",\"fields\":{\"slug\":\"/ts-study/\"},\"frontmatter\":{\"title\":\"TypeScript简介\",\"date\":\"2018-03-06\",\"category\":\"FE\",\"tags\":[\"typescript\",\"ts\"]}}},{\"node\":{\"html\":\"<p><strong>持续更新，可以保持关注</strong></p>\\n<p><a href=\\\"https://www.typescriptlang.org/\\\">TypeScript</a>的一些学习资料:</p>\\n<!-- more -->\\n<h1 id=\\\"语言本身\\\"><a href=\\\"#%E8%AF%AD%E8%A8%80%E6%9C%AC%E8%BA%AB\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>语言本身</h1>\\n<ul>\\n<li>最权威的资料，当然是TS官网： <a href=\\\"https://www.typescriptlang.org/\\\">https://www.typescriptlang.org/</a></li>\\n<li>typescript-book: <a href=\\\"https://github.com/basarat/typescript-book\\\">https://github.com/basarat/typescript-book</a></li>\\n</ul>\\n<h1 id=\\\"脚手架\\\"><a href=\\\"#%E8%84%9A%E6%89%8B%E6%9E%B6\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>脚手架</h1>\\n<ul>\\n<li>TypeScript &#x26; Egg.js: <a href=\\\"https://github.com/magicly/ts-egg-demo\\\">https://github.com/magicly/ts-egg-demo</a></li>\\n<li>TypeScript &#x26; React: <a href=\\\"https://magicly.me/ts-react-starter/\\\">https://magicly.me/ts-react-starter/</a></li>\\n<li>TypeScript &#x26; React Native: <a href=\\\"https://magicly.me/ts-reactnative-starter/\\\">https://magicly.me/ts-reactnative-starter/</a></li>\\n<li>一条命令创建免配置的 React + Antd + Typescript 项目： <a href=\\\"https://zhuanlan.zhihu.com/p/33523384\\\">https://zhuanlan.zhihu.com/p/33523384</a></li>\\n<li>react + typescript 手脚架： <a href=\\\"https://zhuanlan.zhihu.com/p/27771021\\\">https://zhuanlan.zhihu.com/p/27771021</a></li>\\n<li>微信小程序：<a href=\\\"https://github.com/qiu8310/minapp\\\">https://github.com/qiu8310/minapp</a></li>\\n</ul>\\n<h1 id=\\\"其他工具\\\"><a href=\\\"#%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>其他工具</h1>\\n<ul>\\n<li>TypeSearch: <a href=\\\"https://microsoft.github.io/TypeSearch/\\\">https://microsoft.github.io/TypeSearch/</a></li>\\n<li>CSS: <a href=\\\"https://typestyle.github.io\\\">https://typestyle.github.io</a></li>\\n</ul>\",\"timeToRead\":1,\"excerpt\":\"持续更新，可以保持关注 TypeScript 的一些学习资料: 语言本身 最权威的资料，当然是TS官网：  https://www.typescriptlang.org/ typescript-book:  https://github.com/basarat…\",\"fields\":{\"slug\":\"/ts-materials/\"},\"frontmatter\":{\"title\":\"TypeScript学习资料\",\"date\":\"2018-03-06\",\"category\":\"FE\",\"tags\":[\"typescript\",\"ts\"]}}},{\"node\":{\"html\":\"<p><a href=\\\"https://magicly.me/ts-react-starter/\\\">上一篇我们介绍了TypeScript如何跟React搭配使用</a>，这篇我们继续介绍如何在React Native中使用TS。</p>\\n<p>关于React Native，我之前写过一本<a href=\\\"http://gitbook.cn/gitchat/column/5a17c2e113c02f4a35ca5a7d\\\">React Native电子书</a>， 如果不熟悉RN的话可以参考一下。</p>\\n<p>本文涵盖内容如下：</p>\\n<ul>\\n<li>TypeScript &#x26; React Native</li>\\n<li>TSLint</li>\\n<li>Jest</li>\\n</ul>\\n<!-- more -->\\n<h1 id=\\\"准备知识\\\"><a href=\\\"#%E5%87%86%E5%A4%87%E7%9F%A5%E8%AF%86\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>准备知识</h1>\\n<p>本文假设读者已经知道如何用RN进行开发，至少是把开发环境搭建起来，能在模拟器或者手机上运行App了。如果不了解的话， 请参考<a href=\\\"http://gitbook.cn/gitchat/column/5a17c2e113c02f4a35ca5a7d\\\">React Native 移动开发入门与实战</a>。</p>\\n<h1 id=\\\"新建项目\\\"><a href=\\\"#%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>新建项目</h1>\\n<p>用<code class=\\\"language-text\\\">react-native init</code>正常初始化一个RN项目。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">react-native init TSReactNativeDemo</code></pre>\\n      </div>\\n<p>项目初始结构为：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  TSReactNativeDemo tree -L 1\\n<span class=\\\"token keyword\\\">.</span>\\n├── App.js\\n├── __tests__\\n├── android\\n├── app.json\\n├── index.js\\n├── ios\\n├── node_modules\\n├── package.json\\n└── yarn.lock\\n\\n4 directories, 5 files</code></pre>\\n      </div>\\n<h1 id=\\\"运行\\\"><a href=\\\"#%E8%BF%90%E8%A1%8C\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>运行</h1>\\n<p>在手机或者模拟器上运行起来。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">react-native run-android\\nreact-native run-ios</code></pre>\\n      </div>\\n<h1 id=\\\"引入typescript\\\"><a href=\\\"#%E5%BC%95%E5%85%A5typescript\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>引入TypeScript</h1>\\n<p>目前React Native Packager是通过Babel编译<code class=\\\"language-text\\\">.js</code>文件以及打包的，暂时还没有特别好的方法直接使用<code class=\\\"language-text\\\">.tsx</code>。所以基本思路就是， 先用TypeScript的编译器<code class=\\\"language-text\\\">tsc</code>将<code class=\\\"language-text\\\">.ts</code>或<code class=\\\"language-text\\\">.tsx</code>文件编译成<code class=\\\"language-text\\\">.js</code>文件，再用React Native Packager编译打包即可。</p>\\n<p>首先我们安装TS依赖：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">yarn add -D typescript</code></pre>\\n      </div>\\n<p>然后需要安装types：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">yarn add -D @types/react @types/react-native</code></pre>\\n      </div>\\n<p>然后需要配置<code class=\\\"language-text\\\">tsconfig.json</code>，可以用如下命令生成：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">tsc --init --pretty --sourceMap --target es2015 --outDir ./lib --rootDir ./ --module commonjs --jsx react</code></pre>\\n      </div>\\n<p>生成的文件里面有具体每个参数的含义，也可以参考<a href=\\\"http://www.typescriptlang.org/docs/handbook/tsconfig-json.html\\\">TS官网文档</a>。 也可以直接参考上一篇中的<code class=\\\"language-text\\\">tsconfig.json</code>文件，进行少许修改即可。</p>\\n<h1 id=\\\"编写ts组件\\\"><a href=\\\"#%E7%BC%96%E5%86%99ts%E7%BB%84%E4%BB%B6\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>编写TS组件</h1>\\n<p>上面配置好TS后， 我们就可以开始用TS写组件了。还是跟上篇一样， 写一个简单的<code class=\\\"language-text\\\">Counter.tsx</code>。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Button<span class=\\\"token punctuation\\\">,</span> StyleSheet<span class=\\\"token punctuation\\\">,</span> Text<span class=\\\"token punctuation\\\">,</span> View <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-native'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Props</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n  count<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">;</span>\\n  onInc<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n  onDec<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> count <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> onInc<span class=\\\"token punctuation\\\">,</span> onDec <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> Props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>View</span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>styles<span class=\\\"token punctuation\\\">.</span>root<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Text</span><span class=\\\"token punctuation\\\">></span></span>\\n      Counter <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Text</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>View</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Button</span> <span class=\\\"token attr-name\\\">title</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>+<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">onPress</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onInc <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Button</span> <span class=\\\"token attr-name\\\">title</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>-<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">onPress</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onDec <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>View</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>View</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// styles</span>\\n<span class=\\\"token keyword\\\">const</span> styles <span class=\\\"token operator\\\">=</span> StyleSheet<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  root<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    alignItems<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'center'</span><span class=\\\"token punctuation\\\">,</span>\\n    alignSelf<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'center'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  buttons<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    flexDirection<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'row'</span><span class=\\\"token punctuation\\\">,</span>\\n    minHeight<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">70</span><span class=\\\"token punctuation\\\">,</span>\\n    alignItems<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'stretch'</span><span class=\\\"token punctuation\\\">,</span>\\n    alignSelf<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'center'</span><span class=\\\"token punctuation\\\">,</span>\\n    borderWidth<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  button<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    flex<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span>\\n    paddingVertical<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  greeting<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    color<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'#999'</span><span class=\\\"token punctuation\\\">,</span>\\n    fontWeight<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'bold'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>然后我们执行<code class=\\\"language-text\\\">./node_modules/.bin/tsc</code>命令，就会在<code class=\\\"language-text\\\">lib</code>目录下生成相同目录结构的<code class=\\\"language-text\\\">.js</code>文件等。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  TSReactNativeDemo git:<span class=\\\"token punctuation\\\">(</span>master<span class=\\\"token punctuation\\\">)</span> ✗ tree lib -L 3\\nlib\\n└── src\\n    └── components\\n        ├── Counter.js\\n        └── Counter.js.map\\n\\n2 directories, 2 files</code></pre>\\n      </div>\\n<p>然后在<code class=\\\"language-text\\\">App.js</code>中如下使用<code class=\\\"language-text\\\">Counter</code>即可：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> Component <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> StyleSheet<span class=\\\"token punctuation\\\">,</span> Text<span class=\\\"token punctuation\\\">,</span> View <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-native'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">import</span> Counter <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./lib/src/components/Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>View</span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>styles<span class=\\\"token punctuation\\\">.</span>container<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Text</span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>styles<span class=\\\"token punctuation\\\">.</span>welcome<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>Welcome to React Native<span class=\\\"token operator\\\">!</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Text</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Counter</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">count</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>View</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> styles <span class=\\\"token operator\\\">=</span> StyleSheet<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  container<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    flex<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span>\\n    justifyContent<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'center'</span><span class=\\\"token punctuation\\\">,</span>\\n    alignItems<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'center'</span><span class=\\\"token punctuation\\\">,</span>\\n    backgroundColor<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'#F5FCFF'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  welcome<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    fontSize<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">,</span>\\n    textAlign<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'center'</span><span class=\\\"token punctuation\\\">,</span>\\n    margin<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  instructions<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    textAlign<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'center'</span><span class=\\\"token punctuation\\\">,</span>\\n    color<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'#333333'</span><span class=\\\"token punctuation\\\">,</span>\\n    marginBottom<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>由于<code class=\\\"language-text\\\">lib/</code>目录下的文件是编译生成，因此不需要放在git里面， 我们在<code class=\\\"language-text\\\">.gitingore</code>中添加<code class=\\\"language-text\\\">lib/</code>忽略之：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\"># TypeScript\\nlib/</code></pre>\\n      </div>\\n<h1 id=\\\"测试\\\"><a href=\\\"#%E6%B5%8B%E8%AF%95\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>测试</h1>\\n<p><strong>注意</strong>， <a href=\\\"http://airbnb.io/enzyme/docs/guides/react-native.html\\\">enzyme测试ReactNative需要用react-native-mock</a>， 但是<a href=\\\"https://github.com/RealOrangeOne/react-native-mock/issues/139\\\"><code class=\\\"language-text\\\">react-native-mock</code>目前不支持React v16+</a>， 因此暂时不采用enzyme吧。</p>\\n<p>RN还是用Jest做测试，为了支持TS，我们安装<code class=\\\"language-text\\\">ts-jest</code>包。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">yarn add -D ts-jest</code></pre>\\n      </div>\\n<p>同样，我们也添加相应的<code class=\\\"language-text\\\">@types</code>：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">yarn add -D @types/jest @types/react-test-renderer</code></pre>\\n      </div>\\n<p>修改<code class=\\\"language-text\\\">package.json</code>文件里面<code class=\\\"language-text\\\">jest</code>属性：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token property\\\">\\\"jest\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"preset\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"react-native\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"moduleFileExtensions\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n        <span class=\\\"token string\\\">\\\"ts\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"tsx\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"js\\\"</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"transform\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"^.+\\\\\\\\.(js)$\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"&lt;rootDir>/node_modules/babel-jest\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"\\\\\\\\.(ts|tsx)$\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"&lt;rootDir>/node_modules/ts-jest/preprocessor.js\\\"</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"testRegex\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"(/__tests__/.*|\\\\\\\\.(test|spec))\\\\\\\\.(ts|tsx|js)$\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"testPathIgnorePatterns\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n        <span class=\\\"token string\\\">\\\"\\\\\\\\.snap$\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"&lt;rootDir>/node_modules/\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"&lt;rootDir>/lib/\\\"</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"cacheDirectory\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\".jest/cache\\\"</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>然后我们就可以写测试代码了：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// src/components/Counter.test.tsx</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> enzyme <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'enzyme'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Counter <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">it</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'renders the correct text when count is not given'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> hello <span class=\\\"token operator\\\">=</span> enzyme<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">shallow</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Counter</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>hello<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'.counter'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">text</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toEqual</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Counter counter1: 1'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>更多关于Jest测试可以参考<a href=\\\"http://gitbook.cn/gitchat/column/5a17c2e113c02f4a35ca5a7d/topic/5a17de5713c02f4a35ca67af\\\">测试 Jest</a>。</p>\\n<h1 id=\\\"配置tslint\\\"><a href=\\\"#%E9%85%8D%E7%BD%AEtslint\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>配置TSLint</h1>\\n<p>不像上一篇用<code class=\\\"language-text\\\">react-scripts-ts</code>的话TSLint是自动配置好的， 我们需要手动安装TSLint。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">yarn add -D tslint tslint-react</code></pre>\\n      </div>\\n<p>然后把上一章的<code class=\\\"language-text\\\">tslint.json</code>文件复制过来。再在<code class=\\\"language-text\\\">package.json</code>文件中增加如下代码：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code class=\\\"language-json\\\">    <span class=\\\"token property\\\">\\\"lint\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"tslint -c tslint.json 'src/**/*.{ts,tsx}'\\\"</span><span class=\\\"token punctuation\\\">,</span></code></pre>\\n      </div>\\n<p>然后就可以用<code class=\\\"language-text\\\">yarn lint</code>检查代码了。</p>\\n<p>为了在写代码的时候就能在VSCode里面获得错误提示， 可以安装VSCode的TSLint插件。</p>\\n<h1 id=\\\"其他\\\"><a href=\\\"#%E5%85%B6%E4%BB%96\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>其他</h1>\\n<p>最后我们做一些额外工作提高开发效率。首先我们将<code class=\\\"language-text\\\">tsc</code>命令写到<code class=\\\"language-text\\\">package.json</code>里， 同时提供一个选择开启<code class=\\\"language-text\\\">watch</code>模式。这样子执行<code class=\\\"language-text\\\">yarn tsc-watch</code>命令后， TS就能实时编译为JS了，再配合上RN的<code class=\\\"language-text\\\">Live Reload</code>或者<code class=\\\"language-text\\\">Hot Reloading</code>能大大提高开发效率。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code class=\\\"language-json\\\">    <span class=\\\"token property\\\">\\\"tsc\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"tsc\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"tsc-watch\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"tsc --watch\\\"</span><span class=\\\"token punctuation\\\">,</span></code></pre>\\n      </div>\\n<p>Redux在RN中使用跟在React中使用没什么区别，参考<a href=\\\"/ts-react-starter\\\">TypeScript React入门</a>即可。</p>\\n<p>本文代码托管在<a href=\\\"https://github.com/magicly/TSReactNativeDemo\\\">https://github.com/magicly/TSReactNativeDemo</a> ，随意使用~</p>\\n<h1 id=\\\"refers\\\"><a href=\\\"#refers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Refers</h1>\\n<ul>\\n<li><a href=\\\"https://github.com/Microsoft/TypeScript-React-Native-Starter\\\">https://github.com/Microsoft/TypeScript-React-Native-Starter</a></li>\\n<li><a href=\\\"https://github.com/kulshekhar/ts-jest\\\">https://github.com/kulshekhar/ts-jest</a></li>\\n<li><a href=\\\"https://www.typescriptlang.org/docs/home.html\\\">https://www.typescriptlang.org/docs/home.html</a></li>\\n<li><a href=\\\"http://airbnb.io/enzyme/\\\">http://airbnb.io/enzyme/</a></li>\\n<li><a href=\\\"https://palantir.github.io/tslint/rules/no-implicit-dependencies/\\\">https://palantir.github.io/tslint/rules/no-implicit-dependencies/</a></li>\\n<li><a href=\\\"https://palantir.github.io/tslint/usage/rule-flags/\\\">https://palantir.github.io/tslint/usage/rule-flags/</a></li>\\n<li><a href=\\\"https://stackoverflow.com/questions/31605781/why-do-tslint-and-jslint-report-empty-blocks\\\">https://stackoverflow.com/questions/31605781/why-do-tslint-and-jslint-report-empty-blocks</a></li>\\n<li><a href=\\\"https://medium.com/@rintoj/react-native-with-typescript-40355a90a5d7\\\">https://medium.com/@rintoj/react-native-with-typescript-40355a90a5d7</a></li>\\n<li><a href=\\\"http://bbs.reactnative.cn/topic/4483/%E4%BD%BF%E7%94%A8typescript%E7%BC%96%E5%86%99react-native-%E9%AB%98%E6%95%88%E7%89%88\\\">http://bbs.reactnative.cn/topic/4483/使用typescript编写react-native-高效版</a></li>\\n<li><a href=\\\"https://zhuanlan.zhihu.com/p/27029898\\\">https://zhuanlan.zhihu.com/p/27029898</a></li>\\n</ul>\",\"timeToRead\":6,\"excerpt\":\"上一篇我们介绍了TypeScript如何跟React搭配使用 ，这篇我们继续介绍如何在React Native中使用TS。 关于React Native，我之前写过一本 React Native电子书 ， 如果不熟悉RN的话可以参考一下。 本文涵盖内容如下： TypeScript…\",\"fields\":{\"slug\":\"/ts-reactnative-starter/\"},\"frontmatter\":{\"title\":\"TypeScript React Native入门\",\"date\":\"2018-02-25\",\"category\":\"FE\",\"tags\":[\"typescript\",\"ts\",\"react\",\"rn\",\"redux\",\"react native\"]}}},{\"node\":{\"html\":\"<p>Javascript作为一门动态语言， 简单易学，容易上手，非常适合web开发（浏览器也只支持JS啊）。但是随着项目逐渐变大，动态语言的弊端慢慢显露出来，比如没有编译器检查，代码质量不容易保证，IDE支持有限， 不便于重构等等， 而且JS设计之初比较仓促遗留了很多问题，好在ES6等后续版本慢慢修复了很多问题。也有各种尝试将其它语言编译成JS来做web开发，包括GWT、Dart、Java、Scala、Kotlin、Go等，而微软出的TypeScript由于一系列的优点，算是目前最流行的吧。当前Web开发基本是三大框架三分天下：Angular、React、Vue，而Angular本身就是TS开发的，React和Vue也支持TS开发。本文就简单介绍一下如何用TS开发React。</p>\\n<p>另外Facebook自己开发的Flow也可以给JS添加静态类型，我之前写过一篇文章介绍React Native里面如何使用Flow，有兴趣的可以移步<a href=\\\"http://gitbook.cn/gitchat/column/5a17c2e113c02f4a35ca5a7d/topic/5a17de4013c02f4a35ca67a6\\\">Flow使用</a>。</p>\\n<p>本文涵盖内容如下：</p>\\n<ul>\\n<li>TypeScript &#x26; React</li>\\n<li>TSLint</li>\\n<li>Jest &#x26; Enzyme</li>\\n<li>Redux</li>\\n</ul>\\n<!-- more -->\\n<h1 id=\\\"安装create-react-app\\\"><a href=\\\"#%E5%AE%89%E8%A3%85create-react-app\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>安装create-react-app</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> i -g create-react-app</code></pre>\\n      </div>\\n<h1 id=\\\"新建项目\\\"><a href=\\\"#%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>新建项目</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">create-react-app ts-react-demo --scripts-version<span class=\\\"token operator\\\">=</span>react-scripts-ts</code></pre>\\n      </div>\\n<p><a href=\\\"https://github.com/wmonk/create-react-app-typescript\\\">react-scripts-ts</a>是CRA的一个fork，可以很方便的开始使用TS。</p>\\n<p>项目初始结构为：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  ts-react-demo tree -L 1\\n<span class=\\\"token keyword\\\">.</span>\\n├── README.md\\n├── node_modules\\n├── package.json\\n├── public\\n├── src\\n├── tsconfig.json\\n├── tsconfig.test.json\\n├── tslint.json\\n└── yarn.lock\\n\\n3 directories, 6 files</code></pre>\\n      </div>\\n<p>其中：</p>\\n<ul>\\n<li>tsconfig.json是关于TS编译器的一些配置项；</li>\\n<li>tslint.json，是TSLint的配置文件，类似ESLint</li>\\n</ul>\\n<p>其他文件跟普通CRA建的项目一样。</p>\\n<h1 id=\\\"运行\\\"><a href=\\\"#%E8%BF%90%E8%A1%8C\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>运行</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> start</code></pre>\\n      </div>\\n<p>会自动启动浏览器打开<a href=\\\"http://localhost:3000\\\">http://localhost:3000</a> 。</p>\\n<h1 id=\\\"测试\\\"><a href=\\\"#%E6%B5%8B%E8%AF%95\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>测试</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> run <span class=\\\"token function\\\">test</span></code></pre>\\n      </div>\\n<p>会运行Jest做测试， 检查所有以<code class=\\\"language-text\\\">.test.ts</code>或者<code class=\\\"language-text\\\">.spec.ts</code>结尾的文件。</p>\\n<h1 id=\\\"打正式包\\\"><a href=\\\"#%E6%89%93%E6%AD%A3%E5%BC%8F%E5%8C%85\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>打正式包</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> run build</code></pre>\\n      </div>\\n<p>下面， 我们正式开始用TS来写React组件。</p>\\n<h1 id=\\\"创建组件\\\"><a href=\\\"#%E5%88%9B%E5%BB%BA%E7%BB%84%E4%BB%B6\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>创建组件</h1>\\n<p>我们写一个简单的<code class=\\\"language-text\\\">Counter</code>组件，接受<code class=\\\"language-text\\\">name</code>和<code class=\\\"language-text\\\">count</code>参数， 显示<code class=\\\"language-text\\\">Counter {name}: {count}</code>，可以如下调用：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Counter</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">count</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span></code></pre>\\n      </div>\\n<p>React里，最简单的写组件的方式是用函数定义，即所谓的<a href=\\\"https://react-course.magicfun.ai/basics/stateless-component.html\\\">Stateless Component</a>，定义如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// src/components/Counter.tsx</span>\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Props</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n  count<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> count <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> Props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    Counter <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>当然也可以用<code class=\\\"language-text\\\">class</code>的方式定义组件，写作如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Counter</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span><span class=\\\"token operator\\\">&lt;</span>Props<span class=\\\"token punctuation\\\">,</span> object<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> count <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n        Counter <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>这里<code class=\\\"language-text\\\">React.Component&lt;Props, object&gt;</code>第一个是<code class=\\\"language-text\\\">props</code>的参数类型， 第二个是<code class=\\\"language-text\\\">state</code>的类型。因为我们暂时用不到<code class=\\\"language-text\\\">state</code>，所以简单放一个<code class=\\\"language-text\\\">objcet</code>类型即可。</p>\\n<p>然后我们修改<code class=\\\"language-text\\\">index.tsx</code>文件：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-dom'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Hello <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./components/Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> registerServiceWorker <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./registerServiceWorker'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token string\\\">'./index.css'</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Hello</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'root'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> HTMLElement<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">registerServiceWorker</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>最后提一下<code class=\\\"language-text\\\">document.getElementById(&#39;root&#39;) as HTMLElement</code>是TS里的强制类型转化，因为<code class=\\\"language-text\\\">document.getElementById(&#39;root&#39;)</code>返回的类型是<code class=\\\"language-text\\\">HTMLElement | null</code>，即有可能为null。当然了， 如果html里面没有id是root的DOM，返回值就是null了。但是这里我们自己知道肯定有id是root的DOM的， 也就是说我们比TS编译器更清楚事实真相，所以可以用强制类型转化告诉编译器。PS, 其实不做貌似也没问题。</p>\\n<h1 id=\\\"添加样式\\\"><a href=\\\"#%E6%B7%BB%E5%8A%A0%E6%A0%B7%E5%BC%8F\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>添加样式</h1>\\n<p>前端开发，一个很重要的工作就是编写样式。CRA（也就是webpack和一堆loaders）支持直接<code class=\\\"language-text\\\">import css</code>，所以我们可以直接编写<code class=\\\"language-text\\\">src/components/Counter.css</code>，然后在<code class=\\\"language-text\\\">Counter.tsx</code>中<code class=\\\"language-text\\\">import</code>即可。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-css\\\"><code class=\\\"language-css\\\"><span class=\\\"token comment\\\">/* src/components/Counter.css */</span>\\n<span class=\\\"token selector\\\">.counter</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">text-align</span><span class=\\\"token punctuation\\\">:</span> center<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token property\\\">font-size</span><span class=\\\"token punctuation\\\">:</span> 48px<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token string\\\">'./Counter.css'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Props</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n  count<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> count <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> Props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    Counter <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>当然，由于CSS只有全局作用域，很容易出现命名冲突，现在越来越流行用CSSInJS来开发，推荐使用<a href=\\\"https://react-course.magicfun.ai/css/\\\">Styled Components</a>。</p>\\n<h1 id=\\\"测试-1\\\"><a href=\\\"#%E6%B5%8B%E8%AF%95-1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>测试</h1>\\n<p>我们用<a href=\\\"http://airbnb.io/enzyme/\\\">Enzyme</a>来做测试。首先安装依赖：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> i -D enzyme @types/enzyme react-addons-test-utils</code></pre>\\n      </div>\\n<p>其中<code class=\\\"language-text\\\">enzyme</code>是实际运行的代码， <code class=\\\"language-text\\\">@types/enzyme</code>是类型声明文件，类似于C/C++中的<code class=\\\"language-text\\\">.h</code>文件。</p>\\n<p>然后我们就可以写测试代码了：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// src/components/Counter.test.tsx</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> enzyme <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'enzyme'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Counter <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">it</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'renders the correct text when count is not given'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> hello <span class=\\\"token operator\\\">=</span> enzyme<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">shallow</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Counter</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>hello<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'.counter'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">text</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toEqual</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Counter counter1: 1'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><strong>注意！！！</strong>：这里我遇到一些问题， 直接执行<code class=\\\"language-text\\\">npm run test</code>，报错：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">Error: Cannot <span class=\\\"token function\\\">find</span> module <span class=\\\"token string\\\">'./development/fe/ts-react-demo/node_modules/jest-cli'</span></code></pre>\\n      </div>\\n<p>发现<code class=\\\"language-text\\\">jest-cli</code>目录为空：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  ts-react-demo git:<span class=\\\"token punctuation\\\">(</span>master<span class=\\\"token punctuation\\\">)</span> ✗ ll node_modules/jest-cli\\ntotal 0\\ndrwxr-xr-x  3 magicly  staff    96B  2 24 12:12 node_modules</code></pre>\\n      </div>\\n<p>而重新用<code class=\\\"language-text\\\">yarn</code>安装所有依赖， 则正常了：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  ts-react-demo git:<span class=\\\"token punctuation\\\">(</span>master<span class=\\\"token punctuation\\\">)</span> ✗ ll node_modules/jest-cli\\ntotal 16\\n-rw-r--r--   1 magicly  staff   595B  5 12  2017 README.md\\ndrwxr-xr-x   3 magicly  staff    96B  2 24 12:16 bin\\ndrwxr-xr-x  23 magicly  staff   736B  2 24 12:16 build\\ndrwxr-xr-x   3 magicly  staff    96B  2 24 12:16 node_modules\\n-rw-r--r--   1 magicly  staff   1.7K  5 24  2017 package.json</code></pre>\\n      </div>\\n<p>貌似<code class=\\\"language-text\\\">jest</code>跟<code class=\\\"language-text\\\">yarn</code>更适合？\\n然后执行<code class=\\\"language-text\\\">npm run test</code>报错：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">FAIL  src/components/Counter.test.tsx\\n  ● renders the correct text when no count is given\\n\\n\\n          Enzyme Internal Error: Enzyme expects an adapter to be configured, but found none. To\\n          configure an adapter, you should call <span class=\\\"token variable\\\"><span class=\\\"token variable\\\">`</span>Enzyme.configure<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> adapter: new Adapter<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token variable\\\">`</span></span>\\n          before using any of Enzyme<span class=\\\"token string\\\">'s top level APIs, where <span class=\\\"token variable\\\"><span class=\\\"token variable\\\">`</span>Adapter<span class=\\\"token variable\\\">`</span></span> is the adapter\\n          corresponding to the library currently being tested. For example:\\n\\n          import Adapter from '</span>enzyme-adapter-react-15'<span class=\\\"token punctuation\\\">;</span>\\n\\n          To <span class=\\\"token function\\\">find</span> out <span class=\\\"token function\\\">more</span> about this, see http://airbnb.io/enzyme/docs/installation/index.html</code></pre>\\n      </div>\\n<p>因为我们用的Reactv16，安装相应adapter即可：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> i -D enzyme-adapter-react-16</code></pre>\\n      </div>\\n<p>结果，很奇怪，<code class=\\\"language-text\\\">jest-cli</code>又被清空了！又重新用<code class=\\\"language-text\\\">yarn</code>安装了一次，ok了， 看样子以后用CRA的话还是用yarn吧，毕竟都是Facebook的产品。</p>\\n<p>还会报错说没有<code class=\\\"language-text\\\">enzyme-adapter-react-16</code>的类型定义信息， 于是安装之: <code class=\\\"language-text\\\">yarn add -D @types/enzyme-adapter-react-16</code>。 一起正常了！</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"> PASS  src/components/Counter.test.tsx\\n  ✓ renders the correct text when count is not given <span class=\\\"token punctuation\\\">(</span>3ms<span class=\\\"token punctuation\\\">)</span>\\n  ✓ renders the correct text when count is given <span class=\\\"token punctuation\\\">(</span>1ms<span class=\\\"token punctuation\\\">)</span>\\n\\nTest Suites: 1 passed, 1 total\\nTests:       2 passed, 2 total\\nSnapshots:   0 total\\nTime:        0.597s, estimated 2s\\nRan all <span class=\\\"token function\\\">test</span> suites related to changed files.\\n\\nWatch Usage: Press w to show more.</code></pre>\\n      </div>\\n<p>最终测试代码如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// src/components/Counter.test.tsx</span>\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> enzyme <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'enzyme'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> Adapter <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'enzyme-adapter-react-16'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Counter <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n\\nenzyme<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">configure</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> adapter<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Adapter</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">it</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'renders the correct text when count is not given'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> hello <span class=\\\"token operator\\\">=</span> enzyme<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">shallow</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Counter</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>hello<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'.counter'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">text</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toEqual</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Counter counter1: 1'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">it</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'renders the correct text when count is given'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> hello <span class=\\\"token operator\\\">=</span> enzyme<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">shallow</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Counter</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">count</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>hello<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'.counter'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">text</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toEqual</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Counter counter1: 5'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h1 id=\\\"状态管理\\\"><a href=\\\"#%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>状态管理</h1>\\n<p>稍微复杂点的应用都需要专门的状态管理工具， 比较流行的有<a href=\\\"http://redux.js.org/\\\">Redux</a>和<a href=\\\"https://mobx.js.org/\\\">MobX</a>， 这里我们使用<a href=\\\"http://gitbook.cn/gitchat/column/5a17c2e113c02f4a35ca5a7d/topic/5a17ddd313c02f4a35ca676f\\\">更熟悉的Redux</a>, 以前做培训的时候录制过一个<a href=\\\"https://www.bilibili.com/video/av17174653/\\\">redux视频</a>，有兴趣的可以看看。</p>\\n<h2 id=\\\"安装redux\\\"><a href=\\\"#%E5%AE%89%E8%A3%85redux\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>安装redux</h2>\\n<p>首先我们还是安装<code class=\\\"language-text\\\">redux</code>和<code class=\\\"language-text\\\">react-redux</code>。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">yarn add redux react-redux @types/react-redux</code></pre>\\n      </div>\\n<p>这里我们只需要安装<code class=\\\"language-text\\\">react-redux</code>的types，因为<code class=\\\"language-text\\\">redux</code>包里自己包含了类型定义（现在很多流行的包都这样做了，也可以反映出TS的流行程度）。</p>\\n<p>redux有三个重要部分，分别是<code class=\\\"language-text\\\">state</code>, <code class=\\\"language-text\\\">action</code>和<code class=\\\"language-text\\\">reducer</code>，接下来我们分别介绍。</p>\\n<h2 id=\\\"state\\\"><a href=\\\"#state\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>state</h2>\\n<p>redux的设计原则是整个App里就只有一颗状态树，我们的应用比较简单，状态只有两个变量即可：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// src/types/index.tsx</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">StoreState</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n  count<span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h2 id=\\\"actions\\\"><a href=\\\"#actions\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>actions</h2>\\n<p>action就是简单的JS对象，只需要有<code class=\\\"language-text\\\">type</code>属性即可，为了便于重构，我们把用作<code class=\\\"language-text\\\">action.type</code>的字符串作为常量放在单独的文件。 </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// src/constants/index.ts</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">INCX</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'INC'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">DEC</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'DEC'</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>然后定义<code class=\\\"language-text\\\">action</code>文件：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> constants <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../constants'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ActionINC</span> <span class=\\\"token punctuation\\\">{</span>\\n  type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">typeof</span> constants<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">INC</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ActionDEC</span> <span class=\\\"token punctuation\\\">{</span>\\n  type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">typeof</span> constants<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">DEC</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> type ActionCount <span class=\\\"token operator\\\">=</span> ActionINC <span class=\\\"token operator\\\">|</span> ActionDEC<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">inc</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    type<span class=\\\"token punctuation\\\">:</span> constants<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">INC</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">dec</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    type<span class=\\\"token punctuation\\\">:</span> constants<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">DEC</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p><strong>注意</strong>，TS有<a href=\\\"https://www.typescriptlang.org/docs/handbook/advanced-types.html\\\">字符串字面量类型String Literal Types</a>，也就是说<code class=\\\"language-text\\\">typeof &#39;INC&#39;</code>类型也就是<code class=\\\"language-text\\\">&#39;INC&#39;</code>，但是不能把作为<code class=\\\"language-text\\\">type</code>的<code class=\\\"language-text\\\">&#39;INC&#39;</code>跟作为字符串本身的<code class=\\\"language-text\\\">&#39;INC&#39;</code>混淆。这就是为什么在定义<code class=\\\"language-text\\\">ActionINC</code>中，需要使用<code class=\\\"language-text\\\">typeof constants.INC</code>而不能直接使用<code class=\\\"language-text\\\">constants.INC</code>（会报找不到INC）。</p>\\n<p>如果觉得我们为了定义两个action写了太多<strong>boilerplate</strong>代码， 可以看一下<a href=\\\"https://github.com/reduxactions/redux-actions\\\">redux-actions</a>。</p>\\n<h2 id=\\\"reducers\\\"><a href=\\\"#reducers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>reducers</h2>\\n<p>redux中，reducer是一个pure function，接受之前的状态和当前的action，返回下一个状态，即：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token punctuation\\\">(</span>prevState<span class=\\\"token punctuation\\\">,</span> action<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> nextState</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// src/reducers/index.ts</span>\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> ActionCount <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../actions'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> StoreState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../types'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token constant\\\">INC</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">DEC</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../constants'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">reducer</span><span class=\\\"token punctuation\\\">(</span>prevState<span class=\\\"token punctuation\\\">:</span> StoreState<span class=\\\"token punctuation\\\">,</span> action<span class=\\\"token punctuation\\\">:</span> ActionCount<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span> StoreState <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>action<span class=\\\"token punctuation\\\">.</span>type<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token constant\\\">INC</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>prevState<span class=\\\"token punctuation\\\">,</span> count<span class=\\\"token punctuation\\\">:</span> prevState<span class=\\\"token punctuation\\\">.</span>count <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token constant\\\">DEC</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>prevState<span class=\\\"token punctuation\\\">,</span> count<span class=\\\"token punctuation\\\">:</span> prevState<span class=\\\"token punctuation\\\">.</span>count <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token keyword\\\">return</span> prevState<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h2 id=\\\"container-component\\\"><a href=\\\"#container-component\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Container Component</h2>\\n<p>一般在开发React应用时，我们会把控制显示的组件定义成无状态组件（Stateless Functional Component），然后在此基础上包装状态，控制逻辑。可以参考redux作者<a href=\\\"https://twitter.com/dan_abramov\\\">Dan Abramov</a>的这篇文章<a href=\\\"https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0\\\">Presentational and Container Components</a>。</p>\\n<p>我们先给<code class=\\\"language-text\\\">Presentational</code>组件<code class=\\\"language-text\\\">Counter</code>添加一些行为，可以增加和减少count。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// src/components/Counter.tsx</span>\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token string\\\">'./Counter.css'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Props</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n  count<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">;</span>\\n  onInc<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n  onDec<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> count <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> onInc<span class=\\\"token punctuation\\\">,</span> onDec <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> Props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    Counter <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onInc<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token operator\\\">+</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onDec<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token operator\\\">-</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>然后我们用<code class=\\\"language-text\\\">react-redux</code>的<code class=\\\"language-text\\\">connect</code>将<code class=\\\"language-text\\\">redux</code>的状态等跟<code class=\\\"language-text\\\">Counter</code>组件关联起来。<code class=\\\"language-text\\\">connect</code>函数接受两个参数：</p>\\n<ul>\\n<li>mapState2Props： 将state跟props关联起来，redux的state变化的时候自动触发props更新导致组件重新渲染</li>\\n<li>mapDispatch2Props： 将redux的dispatch传递给事件回调函数，用户触发redux的state更新</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// src/containers/Counter.tsx</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> connect<span class=\\\"token punctuation\\\">,</span> Dispatch <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-redux'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Counter <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../components/Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> actions <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../actions'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> StoreState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../types'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">mapState2Props</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> count <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> StoreState<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    name<span class=\\\"token punctuation\\\">,</span>\\n    count<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> mapDispatch2Props <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>dispatch<span class=\\\"token punctuation\\\">:</span> Dispatch<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>actions.ActionCount</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    onInc<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span>actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">inc</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    onDec<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span>actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">dec</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token function\\\">connect</span><span class=\\\"token punctuation\\\">(</span>mapState2Props<span class=\\\"token punctuation\\\">,</span> mapDispatch2Props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>Counter<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2 id=\\\"store\\\"><a href=\\\"#store\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Store</h2>\\n<p>最后，我们在最上层组件（通常是在index.tsx里），初始化redux的store，然后传递下去。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-dom'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> createStore <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'redux'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Provider <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-redux'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> StoreState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./types'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> reducer <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./reducers'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Hello <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./containers/Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> registerServiceWorker <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./registerServiceWorker'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token string\\\">'./index.css'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> store <span class=\\\"token operator\\\">=</span> createStore<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>StoreState</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">(</span>reducer<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'counter1'</span><span class=\\\"token punctuation\\\">,</span> count<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Provider</span> <span class=\\\"token attr-name\\\">store</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>store<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Hello</span> <span class=\\\"token punctuation\\\">/></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Provider</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">,</span>\\n  document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'root'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">registerServiceWorker</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>一切都搞定了。 最后，如果要部署上线的话， 请记得用<code class=\\\"language-text\\\">yarn run build</code>打包压缩代码，然后部署<code class=\\\"language-text\\\">build</code>目录下的文件即可。</p>\\n<p>本文代码托管在<a href=\\\"https://github.com/magicly/ts-react-demo\\\">https://github.com/magicly/ts-react-demo</a> ，随意使用~</p>\\n<h1 id=\\\"refers\\\"><a href=\\\"#refers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Refers</h1>\\n<ul>\\n<li><a href=\\\"https://github.com/Microsoft/TypeScript-React-Starter\\\">https://github.com/Microsoft/TypeScript-React-Starter</a></li>\\n<li><a href=\\\"https://github.com/wmonk/create-react-app-typescript\\\">https://github.com/wmonk/create-react-app-typescript</a></li>\\n<li><a href=\\\"https://www.typescriptlang.org/docs/home.html\\\">https://www.typescriptlang.org/docs/home.html</a></li>\\n<li><a href=\\\"http://airbnb.io/enzyme/\\\">http://airbnb.io/enzyme/</a></li>\\n</ul>\",\"timeToRead\":9,\"excerpt\":\"Javascript作为一门动态语言， 简单易学，容易上手，非常适合web开发（浏览器也只支持JS啊）。但是随着项目逐渐变大，动态语言的弊端慢慢显露出来，比如没有编译器检查，代码质量不容易保证，IDE支持有限， 不便于重构等等， 而且JS设计之初比较仓促遗留了很多问题，好在ES…\",\"fields\":{\"slug\":\"/ts-react-starter/\"},\"frontmatter\":{\"title\":\"TypeScript React入门\",\"date\":\"2018-02-24\",\"category\":\"FE\",\"tags\":[\"typescript\",\"ts\",\"react\"]}}}]}},\"pathContext\":{\"current\":2,\"skip\":10,\"total\":6}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---page-2-8027d2c99fb033e80bc5.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Magicly's Blog\"}},\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"html\":\"<p>在区块链开发中涉及到很多密码学知识， 不懂得相关原理，可能很难理解设计思路更不要说阅读源码了。 我们就花一点时间来了解下区块链开发设计到的密码学知识， 本文简单介绍Hash函数的一些性质， 要想更深入了解请阅读相关专业文献。</p>\\n<!-- more -->\\n<h1 id=\\\"什么是hash函数\\\"><a href=\\\"#%E4%BB%80%E4%B9%88%E6%98%AFhash%E5%87%BD%E6%95%B0\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>什么是Hash函数</h1>\\n<p>这里说的Hash函数不是哈希表这种数据结构， 而是一种密码学概念，具有如下一些性质：</p>\\n<ul>\\n<li>输入是任意长度，输出为固定长度（比如256bits）</li>\\n<li>计算起来很高效</li>\\n<li>输入改动一点点（哪怕只是一个bit），输出结果千差万别</li>\\n<li>…</li>\\n</ul>\\n<p>常用的Hash函数有MD5， SHA1， SHA256等。 有很多在线工具可以计算Hash函数的值， 比如：<a href=\\\"http://tool.oschina.net/encrypt?type=2%EF%BC%8C\\\">http://tool.oschina.net/encrypt?type=2，</a> 我们来看一下<code class=\\\"language-text\\\">hello blockchain!</code>的几种Hash函数值：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\">md5<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">4</span>b7cf9b1f0e3c92c3ca571a5ea4d3fda\\nsha1<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">57</span>bf459d6c142f3427258089e386c43d106a72ab\\nsha256<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">108</span>be1bede687534d56a8229d4deabccfd9ee83358b15e3e95286915b8a4f648</code></pre>\\n      </div>\\n<p>在mac下有相应的命令行可以计算这些Hash函数值，md5和shasum。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  Desktop <span class=\\\"token function\\\">cat</span> helloblockchain.txt\\nhello blockchain<span class=\\\"token operator\\\">!</span>% // 这里的%不是文件内容，而是因为最后一行没有\\\\n导致命令行下显示的问题\\n➜  Desktop md5 helloblockchain.txt\\nMD5 <span class=\\\"token punctuation\\\">(</span>helloblockchain.txt<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span> 4b7cf9b1f0e3c92c3ca571a5ea4d3fda\\n➜  Desktop shasum helloblockchain.txt\\n57bf459d6c142f3427258089e386c43d106a72ab  helloblockchain.txt\\n➜  Desktop shasum -a 256 helloblockchain.txt\\n108be1bede687534d56a8229d4deabccfd9ee83358b15e3e95286915b8a4f648  helloblockchain.txt</code></pre>\\n      </div>\\n<p>在linux下和windows命令可能略有不同， 大家自己查一下即可。 这里有个坑要注意，<a href=\\\"https://www.zhihu.com/question/22808787\\\">linux以及mac下用vim编辑文件， 会在每一行后自动给你加上<code class=\\\"language-text\\\">\\\\n</code></a>，即使只有一行！也就是说你输入的是<code class=\\\"language-text\\\">hello blockchain!</code>， 用vim看上去也是只有一行， 但是其实存储的时候在最后多存储了一个<code class=\\\"language-text\\\">\\\\n</code>， 而用vim你还看不出来。 后来用VSCode打开文件才发现多了一个换行， 我说怎么hash值完全不一样呢。 这也体现了hash函数的一大性质： 任意一点点改动， 最后hash值都差别很大！</p>\\n<p>作为密码学概念， 我们希望Hash函数具有如下三个特征，我们才认为此Hash函数是密码学安全的：</p>\\n<ol>\\n<li>Collision Free</li>\\n<li>Hiding</li>\\n<li>Puzzle Friendly</li>\\n</ol>\\n<h1 id=\\\"collision-free\\\"><a href=\\\"#collision-free\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Collision Free</h1>\\n<p>这个性质说的是没有人能够找到两个不同的输入， 它们的hash输出是相同的， 即不能找到<code class=\\\"language-text\\\">x != y</code>但是<code class=\\\"language-text\\\">H(x) == H(y)</code>。</p>\\n<p>注意， 我们这里说的是“没有人能够找到”，而不是说不存在！大家仔细想想就会知道， 冲突（Collision）肯定是存在的。 为啥呢？因为我们说了输出是固定长度的， 比如256bits，那么输出空间大小就只有<code class=\\\"language-text\\\">Math.pow(2, 256)</code>种可能。而输入可以是任意长度，那输入空间远比输出空间要大，根据小时候学过的<a href=\\\"https://zh.wikipedia.org/wiki/%E9%B4%BF%E5%B7%A2%E5%8E%9F%E7%90%86\\\">鸽巢原理</a>就知道至少有两个<code class=\\\"language-text\\\">x != y</code>使得<code class=\\\"language-text\\\">H(x) == H(y)</code>的。</p>\\n<blockquote>\\n<p>鸽巢原理：若有n个笼子和n+1只鸽子，所有的鸽子都被关在鸽笼里，那么至少有一个笼子有至少2只鸽子。</p>\\n</blockquote>\\n<p>对于输出是256bits的hash函数，不管Hash函数是什么，只要尝试<code class=\\\"language-text\\\">Math.pow(2, 130)</code>个输入， 就有<code class=\\\"language-text\\\">99.8%</code>的概率会找到冲突， 最差也就是找<code class=\\\"language-text\\\">Math.pow(2, 256) + 1</code>次就肯定能找到冲突，平均是<code class=\\\"language-text\\\">Math.pow(2, 128)</code>次。但是问题是，这个需要花太久太久的时间！多久呢？我在自己的Mac Pro上简单测试了一下， 大概每秒计算2000000次hash，则大概需要花<code class=\\\"language-text\\\">Math.pow(2, 128) / (3600 * 24 * 365 * 2000000) ~= 5 * Math.pow(10, 24)</code>年，远比宇宙诞生的时间久。引用普林斯顿的课程<a href=\\\"http://bitcoinbook.cs.princeton.edu/\\\">Bitcoin and Cryptocurrency Technologies</a>里的一段话：</p>\\n<blockquote>\\n<p>For another way of thinking about this, we can say that, if every computer ever made by humanity was computing since the beginning of the entire universe, up to now, the odds that they would have found a collision is still infinitesimally small. So small that it’s way less than the odds that the Earth will be destroyed by a giant meteor in the next two seconds.</p>\\n</blockquote>\\n<p>这段话的大概意思是说把全人类从古自今曾经造出来过的电脑都拿来从宇宙一开始就计算，那么到今天为止找到冲突的概率依然很小很小， 有多小呢？比接下来的两秒钟地球被一块大流星撞毁的概率还小， 而这件事。。。。。。。（2s过去）。。。。并没有发生。</p>\\n<p>不过这段话应该是在2015年说的， 这两年发生了很多事情， 其中一件事情就是比特币大涨， 导致专门用于挖矿的矿机（ASIC）出现， 计算hash的速度大幅度提升。<a href=\\\"https://magicly.me/blockchain-btc-mining/\\\">区块链系列一：现在挖比特币有多难</a>中我们提到，目前比特币矿机全网的算力大概是每秒<code class=\\\"language-text\\\">23555072455973170000</code>次hash计算，我们来看看这么大的算力平均花多久能找到冲突呢。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\">Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pow</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">128</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">/</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3600</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">24</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">365</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">23555072455973170000</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">~</span><span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">4600</span>亿</code></pre>\\n      </div>\\n<p>宇宙年龄目前大概是130亿年， 也就是说如果这些矿机从宇宙诞生就开始计算hash， 则发现冲突的概率大概是<code class=\\\"language-text\\\">130 / 4600 ~= 3%</code>。注意我们还只是说的是挖比特币的矿机，并没有如作者说的<code class=\\\"language-text\\\">把全人类曾经造出来过的电脑都算上</code>, 换句话说仅仅只是挖比特币的矿机，就把一件概率曾经远小于接下来2s地球被流星击中而毁灭的事情的概率提高到了3%！！！想想就觉得可怕！！！</p>\\n<p>这两年hash算力有这么大的提升， 完全是由于比特币大涨， 人们为了在挖矿中占据优势， 开发了大量ASIC。我们之前说一个蚂蚁矿机S9的算力是13.5Thash/s， 而我的mac pro大概是2Mhash/s， 也就是一台S9在计算hash方面，相当于<code class=\\\"language-text\\\">13.5T / 2M ~= 6.7M</code>，670万台Mac Pro！！！</p>\\n<p>那么有没有更快的方法找到冲突呢？答案是，对于有些hash函数，有。 对于其他的hash函数， 我们不知道！注意， 是不知道，而不是没有！没有任何hash函数被“证明”是Collision Free的。只是有些hash函数人们花了大量时间去找， 但是还没有找到，所以暂时认为是collision free的，而有些曾经认为是collision free的hash函数被找到有效构造冲突的方法了，比如MD5，因此在安全性要求较高的场景就建议不再使用MD5了。比特币里使用的是sha256。</p>\\n<p>PS， 破解MD5的是时任山东大学教授的<a href=\\\"https://baike.baidu.com/item/%E7%8E%8B%E5%B0%8F%E4%BA%91/29050\\\">王小云教授</a>。 另外，Google真正找到了一个SHA1的碰撞的实例，因此也被认为是不安全的了。 可以参看： <a href=\\\"https://www.leiphone.com/news/201711/CD1xUXxl8ByzS1nr.html\\\">https://www.leiphone.com/news/201711/CD1xUXxl8ByzS1nr.html</a></p>\\n<h2 id=\\\"应用案例：消息摘要message-digests\\\"><a href=\\\"#%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%B6%88%E6%81%AF%E6%91%98%E8%A6%81message-digests\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>应用案例：消息摘要Message digests</h2>\\n<p>那么hash函数的这条性质有什么用呢？Hash函数的输出， 可以作为信息摘要。 </p>\\n<p>我们说“没有人能够”找到<code class=\\\"language-text\\\">x != y</code>使得<code class=\\\"language-text\\\">H(x) == H(y)</code>， 反过来也就是只要<code class=\\\"language-text\\\">H(x) == H(y)</code>，我们就可以认为<code class=\\\"language-text\\\">x == y</code>的。这样我们要比较两个文件是否一致， 不管这两个文件有多大， 我们只需要比较他们的hash输出即可，而hash输出只有256bits，比较非常快。 </p>\\n<p>有个典型的应用是网盘的“秒传”功能， 用过网盘的都知道， 在上传某些大文件（比如某部电影）的时候， 可能几秒就传完了。一部几个G的电影， 几秒就传到网盘服务器上去了， 你们家网速真的有这么快么？！事实是， 网盘先在本地计算电影的hash值， 然后把输出的256bits发给服务器， 如果服务器上之前已经有某个文件的hash值等于现在的256bits，则认为网盘服务器上已经有这个文件了， 就不需要传了， 只需要在服务器后台加条记录链接过去就可以了。 所以我们会发现越是热门的电影等越是容易秒传。 而如果你自己拍的视频被“秒传”了， 那你就得想想是怎么回事儿了。</p>\\n<p>文件摘要还有一个用处是验证下载的文件是否完整没有被篡改过。一般下载软件都建议大家去官网下载， 但是有时候官网下载速度比较慢（尤其是官网在国外的时候），这时候很多人会选择在其他论坛或者使用p2p软件（比如迅雷）下载， 但是这样其实是有安全问题的。 有可能你下载的软件已经被别人植入了病毒， 大家还记得之前的<a href=\\\"https://zh.wikipedia.org/zh-cn/XcodeGhost%E9%A3%8E%E6%B3%A2\\\">Xcode Ghost风波</a>么？那么我们就可以通过从第三方下载软件， 下载完成之后， 计算软件的hash值， 然后比较这个hash值是否等于官网上的hash值（一般官网都会提供软件的好几种hash值），如果相同，我们就可以放心地使用此软件。这样，既提高了软件下载速度，也保证了安全性。</p>\\n<h1 id=\\\"hiding\\\"><a href=\\\"#hiding\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Hiding</h1>\\n<p>我们希望hash函数满足这样的性质：知道<code class=\\\"language-text\\\">H(x)</code>，不可能推算出<code class=\\\"language-text\\\">x</code>。</p>\\n<p>不过上面这样描述不太准确， 因为如果x的取值范围有限， 比如只是0-9， 则我们可以对0-9求H(x)， 然后直接反查就可以得出x了。准确的描述应该如下：</p>\\n<blockquote>\\n<p>如果我们从一个满足high min-entropy的概率分布中选出一个秘密的值r， 则如果知道H(r || x)的情况下不能推算出x， 则我们说H函数满足Hiding性质。</p>\\n</blockquote>\\n<p>high min-entropy大概意思是从一个很大的空间中随机选择一个值，每个值的概率基本是一样的。比如我们从“所有256bits长的字符串”这个空间中等概率的选择一个字符串，则选到具体某个字符串的概率是<code class=\\\"language-text\\\">1 / Math.pow(2, 256)</code>， 这是一个极小的数字。<code class=\\\"language-text\\\">||</code>表示字符串拼接， 比如<code class=\\\"language-text\\\">hello || blockchain! === hello blochain!</code>。</p>\\n<p>这里拼接一个从很大空间中选出来的secret值r的目的就是为了让<code class=\\\"language-text\\\">r || x</code>的取值范围变得很大， 目的跟密码加盐再做hash差不多。</p>\\n<h2 id=\\\"应用案例：承诺commitments\\\"><a href=\\\"#%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%89%BF%E8%AF%BAcommitments\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>应用案例：承诺Commitments</h2>\\n<p>我们来做一个游戏， 我想一个0-9的数， 你来猜， 猜对算赢。如果我只是“想”一个数的话， 你永远赢不了，因为哪怕你猜对了，我也可以说我想的是另外一个数。如果我们是面对面的话， 可以这样， 我把数字写下来，放在信封里，把信封放在我们面前的桌子上， 你猜了数字之后， 我们打开信封，就能验证有没有猜对， 而我也不能抵赖或者偷偷修改之前写的数字。</p>\\n<p>如果在线上要怎么玩呢？因为我们可以找一个满足Collision Free和Hiding性质的函数H， 我想一个数字x， 然后把H(x)发出来给大家看到， 因为我们说H具有Collision Free性质， 所以我不可能事后说我写的数字其实是x1， 因为我找不到满足<code class=\\\"language-text\\\">x1 != x</code>并且<code class=\\\"language-text\\\">H(x1) == H(x)</code>的数字，所以我不能抵赖。但是你是可以把0-9都用H计算一遍， 然后跟H(x)对比，就能知道我想的x是多少了。</p>\\n<p>所以我还需要随机选择一个256bits的key， 然后把<code class=\\\"language-text\\\">H(key || x)</code>发出来，因为<code class=\\\"language-text\\\">key</code>的选择空间是<code class=\\\"language-text\\\">Math.pow(2, 256)</code>，你不可能去遍历所有可能的key来暴力计算所有的<code class=\\\"language-text\\\">H(key || x)</code>，因此就没办法知道<code class=\\\"language-text\\\">key || x</code>，也就没办法知道<code class=\\\"language-text\\\">x</code>了。同样，我还是不可能找到另一个不同的<code class=\\\"language-text\\\">key1</code>，使得<code class=\\\"language-text\\\">key1 != key</code>但是<code class=\\\"language-text\\\">H(key1 || x) == H(key || x)</code>的。这样就保证了我既不能抵赖，你也不能推算出<code class=\\\"language-text\\\">x</code>，对于你猜的数字y，只要事后我把<code class=\\\"language-text\\\">key</code>发出来，计算<code class=\\\"language-text\\\">H(key || x)</code>和<code class=\\\"language-text\\\">H(key || y)</code>，如果两者相等， 则认为<code class=\\\"language-text\\\">x == y</code>， 反之亦然。</p>\\n<p>除了玩猜数字游戏这个，还有哪些使用场景呢？博彩、在线扑克等使用这个特性， 就能一定程度保证庄家不会作弊。最近在构思用区块链技术解决在线poker的一些问题， 有兴趣私聊。</p>\\n<h1 id=\\\"puzzle-friendly\\\"><a href=\\\"#puzzle-friendly\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Puzzle Friendly</h1>\\n<p>对于n-bit的输出y，如果k是从一个high min-entropy的分布中选出来的，如果不可能在远小于<code class=\\\"language-text\\\">Math.pow(2, n)</code>的时间中找到x使得<code class=\\\"language-text\\\">H(k || x) == y</code>， 则我们说H具有Puzzle friendliness性质。</p>\\n<p>这个性质是说， 要想找到x， 使得<code class=\\\"language-text\\\">H(k || x) == y</code>， 没什么办法比随机乱猜更有效！</p>\\n<h2 id=\\\"应用案例：搜索谜题search-puzzle\\\"><a href=\\\"#%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%90%9C%E7%B4%A2%E8%B0%9C%E9%A2%98search-puzzle\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>应用案例：搜索谜题Search puzzle</h2>\\n<p>搜索谜题包括几个要素：</p>\\n<ul>\\n<li>hash函数H</li>\\n<li>puzzle-ID，需要是从high min-entropy分布中选出来的</li>\\n<li>目标范围Y</li>\\n</ul>\\n<p>这个问题的解x需要满足如下性质：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token constant\\\">H</span><span class=\\\"token punctuation\\\">(</span>id <span class=\\\"token operator\\\">||</span> x<span class=\\\"token punctuation\\\">)</span> ∈ <span class=\\\"token constant\\\">Y</span></code></pre>\\n      </div>\\n<p>假设hash函数H输出是n-bit，则输出空间大小为<code class=\\\"language-text\\\">Math.pow(2, n)</code>。Y的大小决定了问题的求解难度。如果Y的大小等于<code class=\\\"language-text\\\">Math.pow(2, n)</code>，则最容易，随便一个x都满足条件。如果Y的大小只有1， 则问题是最难的。Y范围越小，问题越难。</p>\\n<p>如果H是puzzle-friendly的，则没有什么方法比随机取x去尝试更有效。 事实上， 比特币的挖矿机制就利用了这个性质。</p>\\n<h1 id=\\\"总结\\\"><a href=\\\"#%E6%80%BB%E7%BB%93\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>总结</h1>\\n<p>本文我们讲了密码学领域的hash函数， 以及需要满足几个特征来保证其安全性。 最后要强调的是， 目前没有哪个函数被“数学证明”是满足这三个特征的， 只是有些函数人们在实际中花了大量精力去“破解”而没有成功，因此我们暂时认为其是“安全”的。所以，安全是一个相对以及不断发展变化的问题，就好比以前几十年都认为是安全的MD5， 后来也被发现是不安全的了。那么目前认为还是安全的sha256， 到哪有一天会被发现有问题呢？让我们拭目以待。</p>\\n<p>下一篇讲公钥加密机制。</p>\\n<h1 id=\\\"参考资料\\\"><a href=\\\"#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>参考资料</h1>\\n<ul>\\n<li><a href=\\\"http://bitcoinbook.cs.princeton.edu/\\\">http://bitcoinbook.cs.princeton.edu/</a></li>\\n</ul>\",\"timeToRead\":5,\"excerpt\":\"在区块链开发中涉及到很多密码学知识， 不懂得相关原理，可能很难理解设计思路更不要说阅读源码了。 我们就花一点时间来了解下区块链开发设计到的密码学知识， 本文简单介绍Hash函数的一些性质， 要想更深入了解请阅读相关专业文献。 什么是Hash函数 这里说的Hash…\",\"fields\":{\"slug\":\"/blockchain-crytography-hash/\"},\"frontmatter\":{\"title\":\"区块链系列二：区块链涉及到的密码学知识之Hash\",\"date\":\"2018-03-24\",\"category\":\"Blockchain\",\"tags\":[\"BTC\",\"密码学\",\"crytography\",\"hash\"]}}},{\"node\":{\"html\":\"<p>我们知道Node.js里充满着大量的异步， 后来出现了Promise以及async/await来解决”callback hell”的问题。我们就来看看promise以及async/await如何简化JS并发代码的编写， 最后再给出一份实现相同功能的Go代码。</p>\\n<!-- more -->\\n<h1 id=\\\"问题\\\"><a href=\\\"#%E9%97%AE%E9%A2%98\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>问题</h1>\\n<p>代码开发中经常会做的一件事就是去请求一个api， 并可能进一步根据api返回结果去获取访问新的接口。 这里我们构造一个问题：获取<a href=\\\"https://cnodejs.org/\\\">https://cnodejs.org/</a> 前10个主题的id、title、date、作者昵称以及第一个回复者的昵称。 cnodejs提供了api， <a href=\\\"https://cnodejs.org/api\\\">https://cnodejs.org/api</a> 这里的前两个接口就能满足我们的要求。 首先用<a href=\\\"https://cnodejs.org/api/v1/topics\\\">https://cnodejs.org/api/v1/topics</a> 接口获取到前10个topics， 然后取出每个topic的id去访问<code class=\\\"language-text\\\">get /topic/:id 主题详情</code>接口， 里面可以获取到回复数据。</p>\\n<h1 id=\\\"简单实现\\\"><a href=\\\"#%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>简单实现</h1>\\n<p>发起网络请求有很多方法， 我们这里采用<a href=\\\"https://github.com/axios/axios\\\">axios</a>库， 有几个好处， 其中包括同时支持Node.js和Browser。</p>\\n<p>我们直接用“最先进”的async/await来实现一个版本:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> axios <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"axios\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">getFirst10TopicsIncludeFirstReplyAuthor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> response <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> axios<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token string\\\">\\\"https://cnodejs.org/api/v1/topics?limit=10\\\"</span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> json <span class=\\\"token operator\\\">=</span> response<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> first10 <span class=\\\"token operator\\\">=</span> json<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>topic <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n      id<span class=\\\"token punctuation\\\">:</span> topic<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span>\\n      title<span class=\\\"token punctuation\\\">:</span> topic<span class=\\\"token punctuation\\\">.</span>title<span class=\\\"token punctuation\\\">,</span>\\n      date<span class=\\\"token punctuation\\\">:</span> topic<span class=\\\"token punctuation\\\">.</span>create_at<span class=\\\"token punctuation\\\">,</span>\\n      author<span class=\\\"token punctuation\\\">:</span> topic<span class=\\\"token punctuation\\\">.</span>author<span class=\\\"token punctuation\\\">.</span>loginname\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> topic <span class=\\\"token keyword\\\">of</span> first10<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> response <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> axios<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`https://cnodejs.org/api/v1/topic/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>topic<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> json <span class=\\\"token operator\\\">=</span> response<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> firstReply <span class=\\\"token operator\\\">=</span> json<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span>replies<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    topic<span class=\\\"token punctuation\\\">.</span>firstReplyAuthor <span class=\\\"token operator\\\">=</span> firstReply <span class=\\\"token operator\\\">&amp;&amp;</span> firstReply<span class=\\\"token punctuation\\\">.</span>author<span class=\\\"token punctuation\\\">.</span>loginname<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> first10<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">getFirst10TopicsIncludeFirstReplyAuthor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>data <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h1 id=\\\"并发\\\"><a href=\\\"#%E5%B9%B6%E5%8F%91\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>并发</h1>\\n<p>上述代码简单直接， 用了async/await， 异步代码看上去基本上是同步的， 很直观易懂。 先发起一个请求， 获取10个topics的信息， 然后针对每个topic发起一个请求， 去获取第一条回复数据，最后把数据拼凑在一起返回。 由于后面的请求需要第一个请求返回的id， 因此必须等到第一个请求回来才可以发送后面的请求， 这块没有任何问题。 但是后面的10个请求完全是独立的， 因此可以并发请求，这样能大大缩短时间。比如每个请求需要花费1s， 则上述代码总共需要花费<code class=\\\"language-text\\\">1(第一个请求) + 10(后面10个请求) = 11s</code>， 而如果将第二步的请求完全并发则只需要<code class=\\\"language-text\\\">1(第一个请求) + 1(后面10个请求同时请求) = 2s</code>！！！</p>\\n<p>由于网络请求受网速影响很大不利于我们精确分析问题， 也避免大量的请求给Cnodejs服务造成影响， 我们在本地用<code class=\\\"language-text\\\">setTimout</code>模拟网络请求花费的时间。</p>\\n<p>上述代码在并发性上跟下面代码基本等价：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// 模拟一次api网络请求花费1s</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">,</span> time <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> time<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">get10Topics</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> t1 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> result <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> total <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;=</span> total<span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">+=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> r <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    result<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>r<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">const</span> t2 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`total cost: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>t2 <span class=\\\"token operator\\\">-</span> t1<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">ms.`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> result<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">get10Topics</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>data <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>执行之后发现， 确实在11s左右：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  test-js git:<span class=\\\"token punctuation\\\">(</span>master<span class=\\\"token punctuation\\\">)</span> ✗ node p1.js\\ntotal cost: 11037ms.\\n<span class=\\\"token punctuation\\\">[</span> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 <span class=\\\"token punctuation\\\">]</span></code></pre>\\n      </div>\\n<p><a href=\\\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/all\\\">Promise.all</a>可以同时发起多个Promise，等到所有Promise都完成了之后返回一个数组， 包含每个Promise的结果。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// 模拟一次api网络请求花费1s</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">,</span> time <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> time<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">get10Topics2</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> t1 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> total <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> promises <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;=</span> total<span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">+=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    promises<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">const</span> result <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">all</span><span class=\\\"token punctuation\\\">(</span>promises<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">const</span> t2 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`total cost: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>t2 <span class=\\\"token operator\\\">-</span> t1<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">ms.`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> result<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">get10Topics2</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>data <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>时间正如我们说的， 缩短成了2s！</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  test-js git:<span class=\\\"token punctuation\\\">(</span>master<span class=\\\"token punctuation\\\">)</span> ✗ node p2.js\\ntotal cost: 2005ms.\\n<span class=\\\"token punctuation\\\">[</span> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 <span class=\\\"token punctuation\\\">]</span></code></pre>\\n      </div>\\n<h1 id=\\\"限流\\\"><a href=\\\"#%E9%99%90%E6%B5%81\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>限流</h1>\\n<p>上面第二种方法已经大大提高率效率， 而且请求数越多， 提高的效率越多。 前面的分析可以得出， 如果是获取前100个topics， 第一种串行的方法需要101s， 而第二种还是2s！！！</p>\\n<p>仔细想想你会发现哪里不对， 那就是第二种方法“太并发”了！10个请求可能还好， 如果同时并发100个请求， 那对服务器就会造成一定的影响， 如果是1000个，10000个， 那问题就更大了， 甚至到了一定程度， 会超过操作系统允许打开的连接数， 对客户端本身也会有很大的影响。</p>\\n<p>所以我们需要限制最大并发数，比如我们限制最大并发数为3， 则10个请求大概是3个3个一组， 总共会有4组（最后一组只有1个）， 总共时间是5s， 这也比11s提高了50%多。一种实现方式如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">get10Topics3</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> t1 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> total <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">MAX_CURRENCY</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> result <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;=</span> total<span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">+=</span> <span class=\\\"token constant\\\">MAX_CURRENCY</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> promises <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> j <span class=\\\"token operator\\\">=</span> i<span class=\\\"token punctuation\\\">;</span> j <span class=\\\"token operator\\\">&lt;</span> i <span class=\\\"token operator\\\">+</span> <span class=\\\"token constant\\\">MAX_CURRENCY</span> <span class=\\\"token operator\\\">&amp;&amp;</span> j <span class=\\\"token operator\\\">&lt;=</span> total<span class=\\\"token punctuation\\\">;</span> j <span class=\\\"token operator\\\">+=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      promises<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span>j<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">const</span> r <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">all</span><span class=\\\"token punctuation\\\">(</span>promises<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    result<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">...</span>r<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">const</span> t2 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`total cost: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>t2 <span class=\\\"token operator\\\">-</span> t1<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">ms.`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> result<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">get10Topics3</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>data <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>看一下结果：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  test-js git:<span class=\\\"token punctuation\\\">(</span>master<span class=\\\"token punctuation\\\">)</span> ✗ node p3.js\\ntotal cost: 5012ms.\\n<span class=\\\"token punctuation\\\">[</span> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 <span class=\\\"token punctuation\\\">]</span></code></pre>\\n      </div>\\n<p>还有什么问题么？</p>\\n<h1 id=\\\"one-more-step\\\"><a href=\\\"#one-more-step\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>One More Step</h1>\\n<p>上面的实现方法， 既利用了并发， 又对并发做了一定限制保证不至于把系统资源耗尽，似乎是完美的。 但是如果每个请求所需要的时间不一样呢？<code class=\\\"language-text\\\">get10Topics3</code>的实现方式是每三个一组， 等着三个都完成了， 再进行下一组请求。 那么如果三个任务中， 有一个花费的时间比较多， 另外两个任务完成了之后， 本来可以继续开始新的任务的， 现在必须等着第三个任务完成了才能开始新的任务。甚至如果三个任务需要的时间都不一样， 那么第一个需要等第二个和第三个， 第二个需要等第三个， 整个系统就被最慢的那个任务拖累了。 比如第一个任务需要1s， 第二个任务需要2s， 第三个任务需要3s， 则<code class=\\\"language-text\\\">get10Topics3</code>每组任务需要3s， 三组任务需要<code class=\\\"language-text\\\">3 * 3 = 9s</code>， 最后一组那个任务只需要1s， 总共需要<code class=\\\"language-text\\\">1 + 3 + 3 + 3 + 1 = 11s</code>， 当然这也比完全串行需要的时间<code class=\\\"language-text\\\">1 + 1 + 2 + 3 + 1 + 2 + 3 + 1 + 2 + 3 + 1 = 20s</code>要快不少。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// 模拟一次api网络请求花费特定时间</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">,</span> time <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">,</span> time<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> time<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">get10Topics4</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> t1 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> total <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">MAX_CURRENCY</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> result <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;=</span> total<span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">+=</span> <span class=\\\"token constant\\\">MAX_CURRENCY</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> promises <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> j <span class=\\\"token operator\\\">=</span> i<span class=\\\"token punctuation\\\">;</span> j <span class=\\\"token operator\\\">&lt;</span> i <span class=\\\"token operator\\\">+</span> <span class=\\\"token constant\\\">MAX_CURRENCY</span> <span class=\\\"token operator\\\">&amp;&amp;</span> j <span class=\\\"token operator\\\">&lt;=</span> total<span class=\\\"token punctuation\\\">;</span> j <span class=\\\"token operator\\\">+=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">const</span> costtime <span class=\\\"token operator\\\">=</span> j <span class=\\\"token operator\\\">%</span> <span class=\\\"token number\\\">3</span> <span class=\\\"token operator\\\">===</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token number\\\">3</span> <span class=\\\"token punctuation\\\">:</span> j <span class=\\\"token operator\\\">%</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 第一个任务1s， 第二个2是， 第三个3s...</span>\\n      promises<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span>j<span class=\\\"token punctuation\\\">,</span> costtime <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">const</span> t3 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> r <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">all</span><span class=\\\"token punctuation\\\">(</span>promises<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> t4 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`promise </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>i<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> cost: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>t4 <span class=\\\"token operator\\\">-</span> t3<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">ms`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    result<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">...</span>r<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">const</span> t2 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`total cost: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>t2 <span class=\\\"token operator\\\">-</span> t1<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">ms.`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> result<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">get10Topics4</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>data <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>运行结果：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  test-js git:<span class=\\\"token punctuation\\\">(</span>master<span class=\\\"token punctuation\\\">)</span> ✗ node p4.js\\n10 1000\\n1 1000\\n2 2000\\n3 3000\\npromise 1 cost: 3002ms\\n4 1000\\n5 2000\\n6 3000\\npromise 4 cost: 2999ms\\n7 1000\\n8 2000\\n9 3000\\npromise 7 cost: 3002ms\\n10 1000\\npromise 10 cost: 1005ms\\ntotal cost: 11030ms.\\n<span class=\\\"token punctuation\\\">[</span> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 <span class=\\\"token punctuation\\\">]</span></code></pre>\\n      </div>\\n<p>大家很容易想到， 把所需时间短的任务放一起并发执行， 这样就能减少互相等待的时间。比如把4个1s的放一起， 3个2s的放一起， 3个3s的放一起， 则总共需要时间为：<code class=\\\"language-text\\\">1 + 1 + 2 + 3 + 1 = 8s</code>， 又提高了一些。但是， 一方面我们在实际任务开始并完成之前， 并不知道具体哪个任务需要花多长时间， 另一方面不可能刚好总有花同样时间的任务能凑成一组， 甚至极端情况下， 每个任务所花时间都不一样。</p>\\n<p>仔细想想， 我们只需要这么做： 构建一个任务池， 一开始并发三个任务， 每个任务回来之后不用等其他两个任务， 直接看一下任务池还有任务么， 有的话就直接去做，直到所有任务都完成即可。</p>\\n<p>由于Node.js里面没有信号量来同步各个“线程”之间的工作， 这里用了递归并操作公共变量的方式实现， 如果读者有更好的方式可以给作者留言。注意， “并发地修改共享变量是万恶之源， 有data race的问题， 好在JS里面是单线程， 所以没有这个问题。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// 模拟一次api网络请求花费特定时间</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">,</span> time <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">,</span> time<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> time<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> start <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">worker</span><span class=\\\"token punctuation\\\">(</span>tasks<span class=\\\"token punctuation\\\">,</span> result<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> task <span class=\\\"token operator\\\">=</span> tasks<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">shift</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>task<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 任务结束</span>\\n    <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">const</span> costtime <span class=\\\"token operator\\\">=</span> task <span class=\\\"token operator\\\">%</span> <span class=\\\"token number\\\">3</span> <span class=\\\"token operator\\\">===</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token number\\\">3</span> <span class=\\\"token punctuation\\\">:</span> task <span class=\\\"token operator\\\">%</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 第一个任务1s， 第二个2是， 第三个3s...</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span>task<span class=\\\"token punctuation\\\">,</span> costtime <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>r <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>r<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> completes at time: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">-</span> start<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    result<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>r<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">worker</span><span class=\\\"token punctuation\\\">(</span>tasks<span class=\\\"token punctuation\\\">,</span> result<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">get10Topics5</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> t1 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> total <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">MAX_CURRENCY</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> result <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> tasks <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;=</span> total<span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">+=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    tasks<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> promises <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token constant\\\">MAX_CURRENCY</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">+=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    promises<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">worker</span><span class=\\\"token punctuation\\\">(</span>tasks<span class=\\\"token punctuation\\\">,</span> result<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> r <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">all</span><span class=\\\"token punctuation\\\">(</span>promises<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> t2 <span class=\\\"token operator\\\">=</span> Date<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`total cost: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>t2 <span class=\\\"token operator\\\">-</span> t1<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">ms.`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> result<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">get10Topics5</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>data <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>运行代码可以看到结果：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  test-js git:<span class=\\\"token punctuation\\\">(</span>master<span class=\\\"token punctuation\\\">)</span> ✗ node p5.js\\n10 1000\\n1 1000\\n2 2000\\n3 3000\\n1 completes at time: 2s, by worker0\\n4 1000\\n2 completes at time: 3s, by worker1\\n5 2000\\n4 completes at time: 3s, by worker0\\n6 3000\\n3 completes at time: 4s, by worker2\\n7 1000\\n5 completes at time: 5s, by worker1\\n8 2000\\n7 completes at time: 5s, by worker2\\n9 3000\\n6 completes at time: 6s, by worker0\\n10 1000\\n8 completes at time: 7s, by worker1\\n10 completes at time: 7s, by worker0\\n9 completes at time: 8s, by worker2\\ntotal cost: 8032ms.\\n<span class=\\\"token punctuation\\\">[</span> 1, 2, 4, 3, 5, 7, 6, 8, 10, 9 <span class=\\\"token punctuation\\\">]</span></code></pre>\\n      </div>\\n<p>我们可以看到，一开始同时开启了<code class=\\\"language-text\\\">worker0, worker1, worker2</code>三个“线程”去做事， <code class=\\\"language-text\\\">worker0</code>在第2s（因为第1s是调用第一个api）完成了task1，它并没有等待， 而是继续开始做task4。然后又过了1s， worker1完成了task2然后去开始做task5， 而此刻worker0完成了task4并开始去做task6， 又过了1s， worker2才完成了task3然后去做task7…可以看到每个worker都在争先恐后地完成任务， 直到所有任务全部完成， 总共花了8s时间。 </p>\\n<h1 id=\\\"重新实现并发访问api\\\"><a href=\\\"#%E9%87%8D%E6%96%B0%E5%AE%9E%E7%8E%B0%E5%B9%B6%E5%8F%91%E8%AE%BF%E9%97%AEapi\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>重新实现并发访问API</h1>\\n<p>这里我将最早串行访问API接口的代码改成并发执行， 没有做限流， 读者可根绝前文分析修改成限流版本，就当留作小练习吧。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> axios <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"axios\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">getFirst10TopicsIncludeFirstReplyAuthor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> axios\\n    <span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"https://cnodejs.org/api/v1/topics?limit=10\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>response<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">const</span> json <span class=\\\"token operator\\\">=</span> response<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">const</span> first10 <span class=\\\"token operator\\\">=</span> json<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>topic <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n          id<span class=\\\"token punctuation\\\">:</span> topic<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span>\\n          title<span class=\\\"token punctuation\\\">:</span> topic<span class=\\\"token punctuation\\\">.</span>title<span class=\\\"token punctuation\\\">,</span>\\n          date<span class=\\\"token punctuation\\\">:</span> topic<span class=\\\"token punctuation\\\">.</span>create_at<span class=\\\"token punctuation\\\">,</span>\\n          author<span class=\\\"token punctuation\\\">:</span> topic<span class=\\\"token punctuation\\\">.</span>author<span class=\\\"token punctuation\\\">.</span>loginname\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n      <span class=\\\"token keyword\\\">const</span> promises <span class=\\\"token operator\\\">=</span> first10<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>data <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> axios\\n          <span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`https://cnodejs.org/api/v1/topic/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>data<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span>\\n          <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>response <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">const</span> json <span class=\\\"token operator\\\">=</span> response<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">const</span> firstReply <span class=\\\"token operator\\\">=</span> json<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span>replies<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n              id<span class=\\\"token punctuation\\\">:</span> json<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span>\\n              firstReplyAuthor<span class=\\\"token punctuation\\\">:</span> firstReply <span class=\\\"token operator\\\">&amp;&amp;</span> firstReply<span class=\\\"token punctuation\\\">.</span>author<span class=\\\"token punctuation\\\">.</span>loginname\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">return</span> Promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">all</span><span class=\\\"token punctuation\\\">(</span>promises<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>rs <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">const</span> map <span class=\\\"token operator\\\">=</span> rs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">reduce</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>acc<span class=\\\"token punctuation\\\">,</span> e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n          acc<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">set</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span> e<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token keyword\\\">return</span> acc<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> topic <span class=\\\"token keyword\\\">of</span> first10<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          topic<span class=\\\"token punctuation\\\">.</span>firstReplyAuthor <span class=\\\"token operator\\\">=</span> map<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">(</span>topic<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>firstReplyAuthor<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token keyword\\\">return</span> first10<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">catch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>error<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>error<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">getFirst10TopicsIncludeFirstReplyAuthor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>data <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h1 id=\\\"go语言实现\\\"><a href=\\\"#go%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Go语言实现</h1>\\n<p>其实Go跟Promise没啥关系， 只是最近刚好在用Go语言做东西， 因此拿来对比一下。Go里面很容易实现限流的功能，这里直接贴上代码，不做过多分析。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-go\\\"><code class=\\\"language-go\\\"><span class=\\\"token keyword\\\">package</span> main\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">(</span>\\n\\t<span class=\\\"token string\\\">\\\"fmt\\\"</span>\\n\\t<span class=\\\"token string\\\">\\\"time\\\"</span>\\n<span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">const</span> start <span class=\\\"token operator\\\">=</span> time<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Unix</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">func</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span>result <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">,</span> duration time<span class=\\\"token punctuation\\\">.</span>Duration<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token builtin\\\">int</span> <span class=\\\"token punctuation\\\">{</span>\\n\\tfmt<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Println</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">,</span> duration<span class=\\\"token punctuation\\\">)</span>\\n\\ttime<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Sleep</span><span class=\\\"token punctuation\\\">(</span>duration<span class=\\\"token punctuation\\\">)</span>\\n\\t<span class=\\\"token keyword\\\">return</span> result\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">func</span> <span class=\\\"token function\\\">worker</span><span class=\\\"token punctuation\\\">(</span>id <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">,</span> jobs <span class=\\\"token operator\\\">&lt;-</span><span class=\\\"token keyword\\\">chan</span> <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">,</span> result <span class=\\\"token keyword\\\">chan</span><span class=\\\"token operator\\\">&lt;-</span> <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t<span class=\\\"token keyword\\\">for</span> job <span class=\\\"token operator\\\">:=</span> <span class=\\\"token keyword\\\">range</span> jobs <span class=\\\"token punctuation\\\">{</span>\\n\\t\\tt <span class=\\\"token operator\\\">:=</span> job <span class=\\\"token operator\\\">%</span> <span class=\\\"token number\\\">3</span>\\n\\t\\t<span class=\\\"token keyword\\\">if</span> t <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t\\tt <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span>\\n\\t\\t<span class=\\\"token punctuation\\\">}</span>\\n\\t\\tr <span class=\\\"token operator\\\">:=</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span>job<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>time<span class=\\\"token punctuation\\\">.</span>Duration<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>t<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">*</span>time<span class=\\\"token punctuation\\\">.</span>Second<span class=\\\"token punctuation\\\">)</span>\\n\\t\\tdiff <span class=\\\"token operator\\\">:=</span> time<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Unix</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">-</span> start\\n\\t\\tfmt<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"%d completes at time: %ds, by worker%d\\\\n\\\"</span><span class=\\\"token punctuation\\\">,</span> r<span class=\\\"token punctuation\\\">,</span> diff<span class=\\\"token punctuation\\\">,</span> id<span class=\\\"token punctuation\\\">)</span>\\n\\t\\tresult <span class=\\\"token operator\\\">&lt;-</span> r\\n\\t<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">func</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\tt1 <span class=\\\"token operator\\\">:=</span> time<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Unix</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n\\n\\tjobs <span class=\\\"token operator\\\">:=</span> <span class=\\\"token function\\\">make</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">chan</span> <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span>\\n\\tresult <span class=\\\"token operator\\\">:=</span> <span class=\\\"token function\\\">make</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">chan</span> <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span>\\n\\ttotal <span class=\\\"token operator\\\">:=</span> <span class=\\\"token function\\\">mockAPI</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">*</span>time<span class=\\\"token punctuation\\\">.</span>Second<span class=\\\"token punctuation\\\">)</span>\\n\\n\\t<span class=\\\"token keyword\\\">const</span> MaxCurrency <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span>\\n\\t<span class=\\\"token keyword\\\">for</span> i <span class=\\\"token operator\\\">:=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> MaxCurrency<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\t<span class=\\\"token keyword\\\">go</span> <span class=\\\"token function\\\">worker</span><span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">,</span> jobs<span class=\\\"token punctuation\\\">,</span> result<span class=\\\"token punctuation\\\">)</span>\\n\\t<span class=\\\"token punctuation\\\">}</span>\\n\\n\\t<span class=\\\"token keyword\\\">for</span> i <span class=\\\"token operator\\\">:=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;=</span> total<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\tjobs <span class=\\\"token operator\\\">&lt;-</span> i\\n\\t<span class=\\\"token punctuation\\\">}</span>\\n\\t<span class=\\\"token function\\\">close</span><span class=\\\"token punctuation\\\">(</span>jobs<span class=\\\"token punctuation\\\">)</span>\\n\\n\\trs <span class=\\\"token operator\\\">:=</span> <span class=\\\"token function\\\">make</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">,</span> total<span class=\\\"token punctuation\\\">)</span>\\n\\t<span class=\\\"token keyword\\\">for</span> i <span class=\\\"token operator\\\">:=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> total<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t\\tr <span class=\\\"token operator\\\">:=</span> <span class=\\\"token operator\\\">&lt;-</span>result\\n\\t\\trs<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> r\\n\\t<span class=\\\"token punctuation\\\">}</span>\\n\\n\\tt2 <span class=\\\"token operator\\\">:=</span> time<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Now</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Unix</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n\\tfmt<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"total cost: %ds.\\\\n\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>t2 <span class=\\\"token operator\\\">-</span> t1<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n\\tfmt<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Println</span><span class=\\\"token punctuation\\\">(</span>rs<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>执行输出如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  chap8 go run currency-rate-limit2.go\\n10 1s\\n1 1s\\n2 2s\\n3 3s\\n1 completes at time: 2s, by worker0\\n4 1s\\n4 completes at time: 3s, by worker0\\n2 completes at time: 3s, by worker2\\n5 2s\\n6 3s\\n3 completes at time: 4s, by worker1\\n7 1s\\n7 completes at time: 5s, by worker1\\n8 2s\\n5 completes at time: 5s, by worker0\\n9 3s\\n6 completes at time: 6s, by worker2\\n10 1s\\n8 completes at time: 7s, by worker1\\n10 completes at time: 7s, by worker2\\n9 completes at time: 8s, by worker0\\ntotal cost: 8s.\\n<span class=\\\"token punctuation\\\">[</span>1 4 2 3 7 5 6 8 10 9<span class=\\\"token punctuation\\\">]</span></code></pre>\\n      </div>\\n<h1 id=\\\"参考资料\\\"><a href=\\\"#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>参考资料</h1>\\n<ul>\\n<li><a href=\\\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\\\">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise</a></li>\\n<li><a href=\\\"https://yar999.gitbooks.io/gopl-zh/content/ch8/ch8-06.html\\\">https://yar999.gitbooks.io/gopl-zh/content/ch8/ch8-06.html</a></li>\\n</ul>\",\"timeToRead\":9,\"excerpt\":\"我们知道Node.js里充满着大量的异步， 后来出现了Promise以及async/await来解决”callback hell”的问题。我们就来看看promise以及async/await如何简化JS并发代码的编写， 最后再给出一份实现相同功能的Go…\",\"fields\":{\"slug\":\"/concurrency-by-promise/\"},\"frontmatter\":{\"title\":\"用Promise实现并发 vs Go goroutine\",\"date\":\"2018-03-24\",\"category\":\"FE\",\"tags\":[\"promise\",\"concurrency\",\"并发\",\"go\",\"goroutine\"]}}},{\"node\":{\"html\":\"<p>最近用Go写代码，在VSCode下安装了vscodego插件， 语法高亮、代码提示、代码跳转、错误提示等都支持， 完美！</p>\\n<p>不知道哪天突然发现没有代码提示了， 只有提示”PANIC”。。。。。</p>\\n<p>经过google， 发现代码提示用的是<a href=\\\"https://github.com/nsf/gocode\\\">gocode</a>，也<a href=\\\"https://tonybai.com/2016/12/23/write-go-code-in-vscode/\\\">有人遇到过</a>，手动重启gocode即可。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">gocode close\\ngocode -s</code></pre>\\n      </div>\\n<p>执行之后还是不行， 有报错：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">panic: unknown <span class=\\\"token function\\\">export</span> <span class=\\\"token function\\\">format</span> version 5 <span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"version 5\\\"</span><span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\\n<p>拿去google， 找到gocode里的<a href=\\\"https://github.com/nsf/gocode/issues/456\\\">issues</a>， 提示说可以升级gocode：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">go get -u -v github.com/nsf/gocode\\n``<span class=\\\"token variable\\\"><span class=\\\"token variable\\\">`</span>\\n再重启， 一起ok了！\\n\\nPS， 发现升级之后其实vscode在遇到go代码并且你需要代码提示（按了.）的时候如果没有检测到gocode daemon进程，会自动帮你启动gocode的。会启动一个进程监听<span class=\\\"token variable\\\">`</span></span>127.0.0.1:37373`端口。</code></pre>\\n      </div>\",\"timeToRead\":1,\"excerpt\":\"最近用Go写代码，在VSCode下安装了vscodego插件， 语法高亮、代码提示、代码跳转、错误提示等都支持， 完美！ 不知道哪天突然发现没有代码提示了， 只有提示”PANIC”。。。。。 经过google， 发现代码提示用的是 gocode…\",\"fields\":{\"slug\":\"/go-vscodego-no-tip/\"},\"frontmatter\":{\"title\":\"VSCode go插件代码提示失效\",\"date\":\"2018-03-22\",\"category\":\"Go\",\"tags\":[\"vscode\",\"go\",\"gocode\"]}}},{\"node\":{\"html\":\"<p>比特币去年大涨，各种新闻、技术论坛甚至身边的大叔大妈都在讨论比特币，火爆程度远超15年年初的股市。甚至直接带动各种山寨币、空气币大涨，似乎只要发个币都是几十、几百倍的增长，简直全民疯狂！</p>\\n<p>这些请大家理智看待，冷静分析，合理投资，我不给其助威，也不泼冷水，仅从技术的角度来探讨一些问题。</p>\\n<p>最早听说比特币是在11年，然后去年下半年才开始系统地了解区块链相关的技术，打算接下来整理一下这方面的知识，希望对大家有所帮助。 市面上也有很多文章书籍甚至课程来讲授比特币或者区块链技术的，所以我不会面面俱到，尽可能挑一些自己感兴趣的话题来写。推荐一些区块链相关的学习资料，<a href=\\\"https://magicly.me/blockchain-materials\\\">https://magicly.me/blockchain-materials</a> 。</p>\\n<!-- more -->\\n<p>可能大部分人都已经知道比特币是通过“挖矿”凭空产生的，挖矿就是不停地做hash计算，当找到某个值刚好满足条件，就算挖出矿了， 就会得到一部分比特币作为奖励。 基本上挖出比特币的概率，等于你自己的算力（用每秒能做多少次hash计算来衡量）占全球参与挖矿的算力的百分比。 简单来说，如果全球每秒能做100次hash运算，你每秒能做1次hash运算，那你挖到比特币的概率就是1%。</p>\\n<p>最早的时候大家用CPU挖矿，后来发现GPU会快很多，最后干脆有人把hash算法集成到了芯片上（即ASIC，Application-specific integrated circuit），算力再次暴涨。下图可以看出这两年算力的增长情况（来源：<a href=\\\"https://blockchain.info/charts/hash-rate?timespan=2years%EF%BC%89%EF%BC%9A\\\">https://blockchain.info/charts/hash-rate?timespan=2years）：</a>\\n<img src=\\\"/blogimgs/blockchain/hash-rate.png\\\" alt=\\\"hash算力增长图标\\\"></p>\\n<p>通过<a href=\\\"https://blockexplorer.com/api/status?q=getDifficulty\\\">https://blockexplorer.com/api/status?q=getDifficulty</a> 这个接口可以获取到当前算力的“难度”，目前为：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"difficulty\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">3290605988755.001</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>根据比特币挖矿机制，每10分钟产生一个区块需要的算力公式为：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\">  difficulty <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">**</span> <span class=\\\"token number\\\">32</span> <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">600</span> <span class=\\\"token comment\\\">// 23555072455973170000， 即20921P/s</span></code></pre>\\n      </div>\\n<p>即当前算力大概在每秒20921P次hash运算才能在10分钟内记账一次，得到12.5个BTC。号称当前最快的蚂蚁矿机S9，算力是13.5T，也就是说全网大概有20921 * 2 ** 10 / 13.5 = 1586896， 相当于全网大概有160万台S9在运行。</p>\\n<p>每10分钟出一次块， 一天能出<code class=\\\"language-text\\\">24 * 6 == 144</code>块，据说一个S9能正常运行两年，如果不考虑这两年的算力增长（基本不可能，16年到现在算力增长了接近20倍），大概在这两年你能有多大的机会挖中一次呢：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token number\\\">13.5</span> <span class=\\\"token operator\\\">/</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">20921</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">**</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">144</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">365</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token comment\\\">//0.0662 </span></code></pre>\\n      </div>\\n<p>而目前一块的奖励是12.5BTC，也就是说你的期望是<code class=\\\"language-text\\\">0.0662 * 12.5 == 0.8280</code>个BTC。刚刚在火币网上查的目前BTC价格是52000rmb不到，也就是期望获得<code class=\\\"language-text\\\">0.8280 * 52000 == 43057</code>的回报。矿机本身15000，S9的功耗是1320w， 两年用电<code class=\\\"language-text\\\">1.32 * 24 * 365 * 2 === 23126.4</code>度，所以能不能赚，基本上取决于你能找到多便宜的电了。</p>\\n<p>注意，我们的计算比较简单，只是给大家一个直观的感受，以及大概计算方式，并没有考虑算力的增长以及BTC价格的增长，所以我们不做建议。网上有很多更复杂的计算，并根据结果建议怎么挖矿的， 大家自行搜索即可，本文不做任何投资建议。</p>\\n<p>另外，根据BTC的协议，目前挖出一块是12.5BTC，也就是说如果你“自己”挖的话，要么挖中一块是12.5BTC，要么不中就啥也没有，根本不存在所谓的<code class=\\\"language-text\\\">在家挖了一个月，挖到0.00001BTC，连电费都不够</code>这种说法。 当然，由于现在算力太多，出现了“矿池”，即大家合作来一起挖，挖中一块，再根据大家贡献的算力百分比来分，这种情况才可能有挖到零点几个BTC的说法。</p>\\n<h1 id=\\\"单位换算\\\"><a href=\\\"#%E5%8D%95%E4%BD%8D%E6%8D%A2%E7%AE%97\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>单位换算</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token number\\\">1</span>P <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">**</span> <span class=\\\"token number\\\">50</span> <span class=\\\"token operator\\\">~</span><span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span> <span class=\\\"token comment\\\">// 千万亿</span>\\n\\n<span class=\\\"token number\\\">1</span>T <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">**</span> <span class=\\\"token number\\\">40</span> <span class=\\\"token operator\\\">~</span><span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span> <span class=\\\"token comment\\\">// 万亿</span>\\n\\n<span class=\\\"token number\\\">1</span>G <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">**</span> <span class=\\\"token number\\\">30</span> <span class=\\\"token operator\\\">~</span><span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span>  <span class=\\\"token comment\\\">// 十亿</span>\\n\\n<span class=\\\"token number\\\">1</span>M <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">**</span> <span class=\\\"token number\\\">20</span> <span class=\\\"token operator\\\">~</span><span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">000</span> <span class=\\\"token comment\\\">// 一百万</span>\\n\\n<span class=\\\"token number\\\">1</span>K <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">**</span> <span class=\\\"token number\\\">10</span> <span class=\\\"token operator\\\">~</span><span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1000</span> <span class=\\\"token comment\\\">// 一千</span></code></pre>\\n      </div>\\n<h1 id=\\\"参考资料\\\"><a href=\\\"#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>参考资料</h1>\\n<ul>\\n<li><a href=\\\"http://shop.bitmain.com/productDetail.htm?pid=00020180301152028259U755GVmt0665\\\">蚂蚁矿机S9 13.5T</a></li>\\n<li><a href=\\\"https://en.bitcoin.it/wiki/Difficulty\\\">https://en.bitcoin.it/wiki/Difficulty</a></li>\\n<li><a href=\\\"https://bitcoin.stackexchange.com/questions/5838/how-is-difficulty-calculated\\\">https://bitcoin.stackexchange.com/questions/5838/how-is-difficulty-calculated</a></li>\\n<li><a href=\\\"https://blockchain.info/charts/hash-rate?timespan=2years\\\">全网Hash算力</a></li>\\n</ul>\",\"timeToRead\":2,\"excerpt\":\"比特币去年大涨，各种新闻、技术论坛甚至身边的大叔大妈都在讨论比特币，火爆程度远超1…\",\"fields\":{\"slug\":\"/blockchain-btc-mining/\"},\"frontmatter\":{\"title\":\"区块链系列一：现在挖比特币有多难\",\"date\":\"2018-03-17\",\"category\":\"Blockchain\",\"tags\":[\"BTC\",\"bitcoin\",\"比特币\"]}}},{\"node\":{\"html\":\"<p>已经太多次听到这样的言论：“XXXX是个伪命题”， 也太多次看到这样的标题：“为什么说XXX是个伪命题？”。 绝大多数时候使用者其实都没明白“伪命题”一词的含义， 一部分是把它跟“假命题”混淆了， 一部分人纯粹就是为了装13。</p>\\n<p>每次听到这样的话， 我都起一身鸡皮疙瘩。最近区块链火的不行，到处都能看到相关文章，似乎一夜之间很多人都成了区块链专家。今天看到一篇，“区块链是个伪命题”， 还有一篇“为什么说区块链的去中心化是个伪命题？”。大哥， 你这就好比说，“鸡蛋是个伪命题”， “为什么说鸡蛋的蛋壳是个伪命题”一样， 听了自己不会觉得奇怪的么？</p>\\n<!-- more -->\\n<p>在我印象中， “伪命题”表示的是“没办法证伪的命题”， 英文是pseudo proposition。 而命题是一个陈述句，用于说明某种事实，如果这事实为真，则叫真命题(True proposition)，如果为假，则为假命题(False proposition)。比如“5 > 3”是真命题，“3 > 5”则是一个假命题。而如果说”X > 5”，因为你不知道X到底是啥，所以这个命题既有可能是真， 也有可能是假，没办法判断，所以是“伪命题”。 所以我们说一个东西是“伪命题”，至少得这个东西是一个完整的陈述句啊！“区块链”是一句陈述句么？“鸡蛋的颜色”是一句陈述句么？</p>\\n<p>上面只是我的想法，为了严谨， 我还是查一下资料吧。发现知乎上早就已经有人受不了，问过<a href=\\\"https://www.zhihu.com/question/20105937\\\">「伪命题」一词是否被滥用了？</a>，我比较赞同下面这条回答：</p>\\n<div style=\\\"background-color:yellow; color: #8590a6\\\">\\n离散数学经典教材<a href=\\\"https://book.douban.com/subject/1786209/\\\">Discrete Mathematics and Its Applications</a>开篇第一章就对命题做出的如下的定义：\\n<blockquote>\\n<p>A proposition is a declarative sentence (that is, a sentence that declares a fact) that is either true or false, but not both.</p>\\n</blockquote>\\n<p>翻译过来就是：命题是一个非真即假的陈述语句，但绝不可能即真又假.</p>\\n<p>然后又举了4个不是命题（也就是伪命题）的例子：</p>\\n<blockquote>\\n<ol>\\n<li>What time is it?</li>\\n<li>Read this carefully.</li>\\n<li>x + 1 = 2.</li>\\n<li>x + y = z.</li>\\n</ol>\\n</blockquote>\\n<p>原因如下：</p>\\n<blockquote>\\n<p>1,2明显不是陈述语句。3,4因为它们既不是真的，也不是假的，也就是说我们无法判断</p>\\n</blockquote>\\n<p>作者：张斌斌\\n链接：<a href=\\\"https://www.zhihu.com/question/20105937/answer/26284295\\\">https://www.zhihu.com/question/20105937/answer/26284295</a>\\n来源：知乎\\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>\\n</div>\\n<p>在wiki上搜了一下， 没有查到“伪命题”，只查到<a href=\\\"https://en.wikipedia.org/wiki/Proposition\\\">Proposition</a>：</p>\\n<blockquote>\\n<p>Often propositions are related to closed sentences to distinguish them from what is expressed by an open sentence. In this sense, propositions are “statements” that are truth-bearers. This conception of a proposition was supported by the philosophical school of logical positivism.</p>\\n</blockquote>\\n<p>也就是说，“命题”得是一句关于事实判断的完整的陈述句。</p>\\n<p>百度百科的关于<a href=\\\"https://baike.baidu.com/item/%E4%BC%AA%E5%91%BD%E9%A2%98/7507754\\\">伪命题</a>的解释：</p>\\n<div style=\\\"background-color:yellow; color: #8590a6\\\">\\n<blockquote>\\n<p>伪命题是指不真实的命题。所谓不真实，有两种情况：其一是不符合客观事实；其二是不符合一般事理和科学道理。 另一种解释是指没有意义的命题，无法断定其真假，既不是先天的分析命题，也不是可以通过经验判断的综合命题。比如，“团结比原子弹还厉害”，”凡事都有例外”这类命题就属于伪命题。</p>\\n</blockquote>\\n<blockquote>\\n<p>外文名 False proposition</p>\\n</blockquote>\\n</div>\\n可以看到，这里百度百科把“伪命题”当做是“假命题(False proposition)”，然后又包含了“无法断定其真假”的那部分。\\n<p>ok， 现在我们来看一下为什么说<code class=\\\"language-text\\\">“XXX是个伪命题”是个伪命题</code>。首先这句话的主语是“XXX是个伪命题”，这是一个完整的陈述句，但是它是命题么？不是！为啥，因为我们不知道<code class=\\\"language-text\\\">XXX</code>是什么，所以这句话既有可能是真，也有可能是假。比如，<code class=\\\"language-text\\\">XXX是&quot;3 &gt; 2&quot;</code>, 则“3 > 2是个伪命题”就是错的，即是“假命题False proposition”，如果<code class=\\\"language-text\\\">XXX是x &gt; 2</code>， 则“x > 2是个伪命题”，就是对的，即是“真命题True proposition”。所以“XXX是个伪命题”，我们既不能判断是真，也不能判断是假，所以是个伪命题。也就是说<code class=\\\"language-text\\\">“XXX是个伪命题”是个伪命题</code>，这句话本身是一个真命题！</p>\\n<p>另外，我们可以看出，由于“伪”在中文里本身有“假”的意思，所以很多人将“伪命题”当成是“假命题”来用，这个我还尚可理解。但即使是这样，我们在说某个东西是“假命题”的时候， 前提也得是这个东西本身是个“命题”或者至少是个完整的陈述句啊。比如某人想说区块链的去中心化不是很NB， 可以说“区块链的去中心化很NB，这是个假命题”。或者你把“伪命题”当“假命题”用，说“区块链的去中心化很NB，这是个伪命题”，那也能勉强接受， 但不能说“区块链的去中心化是个假命题”，或者说“区块链的去中心化是个伪命题”啊。 甚至直接说“区块链是个伪命题”， 这是个啥意思嘛？</p>\\n<p>简单来说，命题就好比是布尔类型，只能是True或False，你非得要把数字或字符串赋值给布尔类型， 那我们只能说不好意思，我们不支持自动类型转化， 编译失败！</p>\\n<p>另外可参考下面的资料：</p>\\n<ul>\\n<li><a href=\\\"https://zh.wikipedia.org/wiki/%E5%8F%AF%E8%AF%81%E4%BC%AA%E6%80%A7\\\">可证伪性</a></li>\\n<li><a href=\\\"https://zh.wikipedia.org/wiki/%E4%BC%AA%E7%A7%91%E5%AD%A6\\\">伪科学</a></li>\\n</ul>\",\"timeToRead\":2,\"excerpt\":\"已经太多次听到这样的言论：“XXXX是个伪命题”， 也太多次看到这样的标题：“为什么说XXX是个伪命题？”。 绝大多数时候使用者其实都没明白“伪命题”一词的含义， 一部分是把它跟“假命题”混淆了， 一部分人纯粹就是为了装1…\",\"fields\":{\"slug\":\"/pseudo-proposition/\"},\"frontmatter\":{\"title\":\"为什么说“XXX是个伪命题”是个伪命题？\",\"date\":\"2018-03-14\",\"category\":\"Others\",\"tags\":[\"伪命题\",\"逻辑\"]}}},{\"node\":{\"html\":\"<p><strong>持续更新，可以保持关注</strong></p>\\n<p>区块链的一些学习资料:</p>\\n<!-- more -->\\n<h1 id=\\\"入门介绍\\\"><a href=\\\"#%E5%85%A5%E9%97%A8%E4%BB%8B%E7%BB%8D\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>入门介绍</h1>\\n<ul>\\n<li><a href=\\\"http://blog.codinglabs.org/articles/bitcoin-mechanism-make-easy.html\\\">一个故事告诉你比特币的原理及运作机制</a></li>\\n</ul>\\n<h1 id=\\\"密码学\\\"><a href=\\\"#%E5%AF%86%E7%A0%81%E5%AD%A6\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>密码学</h1>\\n<ul>\\n<li><a href=\\\"https://www.coursera.org/learn/crypto\\\">https://www.coursera.org/learn/crypto</a></li>\\n</ul>\\n<h1 id=\\\"btc\\\"><a href=\\\"#btc\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>BTC</h1>\\n<ul>\\n<li>中本聪的创世论文<a href=\\\"https://bitcoin.org/bitcoin.pdf\\\">Bitcoin: A Peer-to-Peer Electronic Cash System</a></li>\\n<li><a href=\\\"https://bitcoin.org/en/\\\">Bitcoin官网</a></li>\\n<li><a href=\\\"http://bitcoinbook.cs.princeton.edu/\\\">Bitcoin and Cryptocurrency Technologies</a> <a href=\\\"https://www.coursera.org/learn/cryptocurrency/home/welcome\\\">Coursera上课程</a> <a href=\\\"https://piazza.com/princeton/spring2015/btctech/home\\\">课程资料</a></li>\\n<li><a href=\\\"https://github.com/bitcoinbook/bitcoinbook\\\">Mastering Bitcoin 2nd Edition</a></li>\\n<li><a href=\\\"https://bitcoinbook.info/wp-content/translations/cmn/book.pdf\\\">精通比特币中文版</a>, <a href=\\\"http://book.8btc.com/master_bitcoin\\\">文在线版</a> </li>\\n</ul>\\n<h1 id=\\\"ethereum\\\"><a href=\\\"#ethereum\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Ethereum</h1>\\n<ul>\\n<li><a href=\\\"https://www.ethereum.org/\\\">https://www.ethereum.org/</a></li>\\n<li><a href=\\\"http://www.ethdocs.org/\\\">http://www.ethdocs.org/</a></li>\\n<li><a href=\\\"https://github.com/ethereum/go-ethereum/wiki\\\">https://github.com/ethereum/go-ethereum/wiki</a></li>\\n<li><a href=\\\"https://solidity.readthedocs.io/\\\">https://solidity.readthedocs.io/</a></li>\\n<li><a href=\\\"https://web3js.readthedocs.io\\\">https://web3js.readthedocs.io</a></li>\\n<li><a href=\\\"https://github.com/trufflesuite/truffle\\\">https://github.com/trufflesuite/truffle</a></li>\\n<li><a href=\\\"http://truffle.tryblockchain.org/\\\">http://truffle.tryblockchain.org/</a></li>\\n<li><a href=\\\"http://ethfans.org/topics/227\\\">以太坊代码剖析</a></li>\\n</ul>\\n<h1 id=\\\"hyperledger\\\"><a href=\\\"#hyperledger\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Hyperledger</h1>\\n<ul>\\n<li><a href=\\\"https://www.ibm.com/blockchain/cn-zh/hyperledger.html\\\">基于 Linux 基金会的 Hyperledger Fabric</a></li>\\n</ul>\\n<h1 id=\\\"其他\\\"><a href=\\\"#%E5%85%B6%E4%BB%96\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>其他</h1>\\n<ul>\\n<li><a href=\\\"https://github.com/llSourcell/Learn_Blockchain_in_2_months\\\">“Learn Blockchain in 2 Months” by Siraj Raval</a>, <a href=\\\"https://www.youtube.com/watch?v=wVVGv2bmxow\\\">Youtube视频</a></li>\\n<li><a href=\\\"https://github.com/btcsuite\\\">Bitcoin in Go</a></li>\\n<li><a href=\\\"https://github.com/zcash/zcash\\\">Zcash</a></li>\\n<li><a href=\\\"https://www.youtube.com/watch?v=lUiKpNU2Tx4\\\">Bitcoin NodeJS Part 1 - Hello World</a></li>\\n<li><a href=\\\"https://github.com/chaozh/awesome-blockchain\\\">Awesome Blockchain</a></li>\\n<li>\\n<p>NodeJS Bitcoin</p>\\n<ul>\\n<li><a href=\\\"https://github.com/bitcoinjs/bitcoinjs-lib\\\">https://github.com/bitcoinjs/bitcoinjs-lib</a></li>\\n<li><a href=\\\"https://en.bitcoin.it/wiki/Node.js_Example\\\">https://en.bitcoin.it/wiki/Node.js_Example</a></li>\\n<li><a href=\\\"https://en.bitcoin.it/wiki/Original_Bitcoin_client/API_calls_list\\\">https://en.bitcoin.it/wiki/Original<em>Bitcoin</em>client/API<em>calls</em>list</a></li>\\n<li><a href=\\\"https://bitcore.io/\\\">https://bitcore.io/</a></li>\\n<li><a href=\\\"https://github.com/bitpay/bitcore\\\">https://github.com/bitpay/bitcore</a></li>\\n<li><a href=\\\"https://github.com/ruimarinho/bitcoin-core\\\">https://github.com/ruimarinho/bitcoin-core</a></li>\\n</ul>\\n</li>\\n</ul>\",\"timeToRead\":2,\"excerpt\":\"持续更新，可以保持关注 区块链的一些学习资料: 入门介绍 一个故事告诉你比特币的原理及运作机制 密码学 https://www.coursera.org/learn/crypto BTC 中本聪的创世论文 Bitcoin: A Peer-to-Peer Electronic…\",\"fields\":{\"slug\":\"/blockchain-materials/\"},\"frontmatter\":{\"title\":\"区块链学习资料\",\"date\":\"2018-03-06\",\"category\":\"FE\",\"tags\":[\"typescript\",\"ts\"]}}},{\"node\":{\"html\":\"<p>TS的简介或者说学习笔记吧，主要留给自己查阅。</p>\\n<!-- more -->\\n<h1 id=\\\"在线工具\\\"><a href=\\\"#%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>在线工具</h1>\\n<p><a href=\\\"https://www.typescriptlang.org/play/index.html\\\">https://www.typescriptlang.org/play/index.html</a></p>\\n<h1 id=\\\"基本数据类型basic-types\\\"><a href=\\\"#%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8Bbasic-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>基本数据类型Basic Types</h1>\\n<h2 id=\\\"boolean\\\"><a href=\\\"#boolean\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Boolean</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">let</span> isDone<span class=\\\"token punctuation\\\">:</span> boolean <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2 id=\\\"number\\\"><a href=\\\"#number\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Number</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">let</span> decimal<span class=\\\"token punctuation\\\">:</span> number <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">6</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> hex<span class=\\\"token punctuation\\\">:</span> number <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0xf00d</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> binary<span class=\\\"token punctuation\\\">:</span> number <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0b1010</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> octal<span class=\\\"token punctuation\\\">:</span> number <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0o744</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2 id=\\\"string\\\"><a href=\\\"#string\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>String</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">let</span> color<span class=\\\"token punctuation\\\">:</span> string <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"blue\\\"</span><span class=\\\"token punctuation\\\">;</span>\\ncolor <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'red'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> sentence<span class=\\\"token punctuation\\\">:</span> string <span class=\\\"token operator\\\">=</span> `Hello<span class=\\\"token punctuation\\\">,</span> my name is $<span class=\\\"token punctuation\\\">{</span> fullName <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">.</span></code></pre>\\n      </div>\\n<h2 id=\\\"array\\\"><a href=\\\"#array\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Array</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">let</span> list<span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> list<span class=\\\"token punctuation\\\">:</span> Array<span class=\\\"token operator\\\">&lt;</span>number<span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2 id=\\\"tuple\\\"><a href=\\\"#tuple\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Tuple</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// Declare a tuple type</span>\\n<span class=\\\"token keyword\\\">let</span> x<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>string<span class=\\\"token punctuation\\\">,</span> number<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// Initialize it</span>\\nx <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"hello\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// OK</span>\\n<span class=\\\"token comment\\\">// Initialize it incorrectly</span>\\nx <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"hello\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// Error</span>\\n\\n<span class=\\\"token comment\\\">// When accessing an element outside the set of known indices, a union type is used instead:</span>\\nx<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"world\\\"</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// OK, 'string' can be assigned to 'string | number'</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// OK, 'string' and 'number' both have 'toString'</span>\\n\\nx<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">6</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// Error, 'boolean' isn't 'string | number'</span></code></pre>\\n      </div>\\n<h2 id=\\\"enum\\\"><a href=\\\"#enum\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Enum</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">enum</span> Color <span class=\\\"token punctuation\\\">{</span>Red <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> Green <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> Blue <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">let</span> c<span class=\\\"token punctuation\\\">:</span> Color <span class=\\\"token operator\\\">=</span> Color<span class=\\\"token punctuation\\\">.</span>Green<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">let</span> colorName<span class=\\\"token punctuation\\\">:</span> string <span class=\\\"token operator\\\">=</span> Color<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span>colorName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// Displays 'Green' as its value is 2 above</span></code></pre>\\n      </div>\\n<h2 id=\\\"any\\\"><a href=\\\"#any\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Any</h2>\\n<p>任意类型， 兼容JS的动态类型。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">let</span> notSure<span class=\\\"token punctuation\\\">:</span> any <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">;</span>\\nnotSure<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">ifItExists</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// okay, ifItExists might exist at runtime</span>\\nnotSure<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toFixed</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// okay, toFixed exists (but the compiler doesn't check)</span>\\n\\n<span class=\\\"token keyword\\\">let</span> prettySure<span class=\\\"token punctuation\\\">:</span> Object <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">;</span>\\nprettySure<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toFixed</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// Error: Property 'toFixed' doesn't exist on type 'Object'.</span></code></pre>\\n      </div>\\n<h2 id=\\\"void\\\"><a href=\\\"#void\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Void</h2>\\n<p>没有明确的<code class=\\\"language-text\\\">return</code>。 Declaring variables of type void is not useful because you can only assign undefined or null to them.</p>\\n<h2 id=\\\"null-and-undefined\\\"><a href=\\\"#null-and-undefined\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Null and Undefined</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// Not much else we can assign to these variables!</span>\\n<span class=\\\"token keyword\\\">let</span> u<span class=\\\"token punctuation\\\">:</span> undefined <span class=\\\"token operator\\\">=</span> undefined<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> n<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">null</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">--strictNullChecks</code></p>\\n<h2 id=\\\"never\\\"><a href=\\\"#never\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Never</h2>\\n<p>抛异常。</p>\\n<blockquote>\\n<p>The never type is a subtype of, and assignable to, every type; however, no type is a subtype of, or assignable to, never (except never itself). Even any isn’t assignable to never.</p>\\n</blockquote>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// Function returning never must have unreachable end point</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span>message<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span> never <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span>message<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// Inferred return type is never</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">fail</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Something failed\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// Function returning never must have unreachable end point</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">infiniteLoop</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span> never <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h2 id=\\\"type-assertions\\\"><a href=\\\"#type-assertions\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Type assertions</h2>\\n<p>你知道的比编译器多。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">let</span> someValue<span class=\\\"token punctuation\\\">:</span> any <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"this is a string\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">let</span> strLength<span class=\\\"token punctuation\\\">:</span> number <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&lt;</span>string<span class=\\\"token operator\\\">></span>someValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// or</span>\\n<span class=\\\"token keyword\\\">let</span> strLength<span class=\\\"token punctuation\\\">:</span> number <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>someValue <span class=\\\"token keyword\\\">as</span> string<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>在<code class=\\\"language-text\\\">JSX</code>里面只能用<code class=\\\"language-text\\\">as</code>，因为<code class=\\\"language-text\\\">&lt;&gt;</code>在JSX里有特殊含义。</p>\\n<h1 id=\\\"高级类型advanced-types\\\"><a href=\\\"#%E9%AB%98%E7%BA%A7%E7%B1%BB%E5%9E%8Badvanced-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>高级类型Advanced Types</h1>\\n<h2 id=\\\"intersection-types\\\"><a href=\\\"#intersection-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Intersection Types</h2>\\n<h2 id=\\\"union-types\\\"><a href=\\\"#union-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Union Types</h2>\\n<h2 id=\\\"type-guards-and-differentiating-types\\\"><a href=\\\"#type-guards-and-differentiating-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Type Guards and Differentiating Types</h2>\\n<h2 id=\\\"nullable-types\\\"><a href=\\\"#nullable-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Nullable types</h2>\\n<h2 id=\\\"type-aliases\\\"><a href=\\\"#type-aliases\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Type Aliases</h2>\\n<h2 id=\\\"string-literal-types\\\"><a href=\\\"#string-literal-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>String Literal Types</h2>\\n<h2 id=\\\"numeric-literal-types\\\"><a href=\\\"#numeric-literal-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Numeric Literal Types</h2>\\n<h2 id=\\\"enum-member-types\\\"><a href=\\\"#enum-member-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Enum Member Types</h2>\\n<h2 id=\\\"discriminated-unions\\\"><a href=\\\"#discriminated-unions\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Discriminated Unions</h2>\\n<h2 id=\\\"discriminated-unions-1\\\"><a href=\\\"#discriminated-unions-1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Discriminated Unions</h2>\\n<h2 id=\\\"index-types\\\"><a href=\\\"#index-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Index types</h2>\\n<h2 id=\\\"mapped-types\\\"><a href=\\\"#mapped-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Mapped types</h2>\\n<h1 id=\\\"interfaces\\\"><a href=\\\"#interfaces\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Interfaces</h1>\\n<p>TS采用<code class=\\\"language-text\\\">鸭子类型</code>或者叫<code class=\\\"language-text\\\">结构子类型</code>. “duck typing” or “structural subtyping”</p>\\n<h2 id=\\\"optional-properties\\\"><a href=\\\"#optional-properties\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Optional Properties</h2>\\n<h2 id=\\\"readonly-properties\\\"><a href=\\\"#readonly-properties\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Readonly properties</h2>\\n<h2 id=\\\"excess-property-checks\\\"><a href=\\\"#excess-property-checks\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Excess Property Checks</h2>\\n<h2 id=\\\"function-types\\\"><a href=\\\"#function-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Function Types</h2>\\n<h2 id=\\\"indexable-types\\\"><a href=\\\"#indexable-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Indexable Types</h2>\\n<h2 id=\\\"class-types\\\"><a href=\\\"#class-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Class Types</h2>\\n<h2 id=\\\"extending-interfaces\\\"><a href=\\\"#extending-interfaces\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Extending Interfaces</h2>\\n<h2 id=\\\"hybrid-types\\\"><a href=\\\"#hybrid-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Hybrid Types</h2>\\n<h2 id=\\\"interfaces-extending-classes\\\"><a href=\\\"#interfaces-extending-classes\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Interfaces Extending Classes</h2>\\n<h1 id=\\\"classes\\\"><a href=\\\"#classes\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Classes</h1>\\n<h2 id=\\\"inheritance\\\"><a href=\\\"#inheritance\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Inheritance</h2>\\n<h2 id=\\\"public-private-and-protected-modifiers\\\"><a href=\\\"#public-private-and-protected-modifiers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Public, private, and protected modifiers</h2>\\n<p>Public by default</p>\\n<h2 id=\\\"readonly-modifier\\\"><a href=\\\"#readonly-modifier\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Readonly modifier</h2>\\n<h2 id=\\\"accessors\\\"><a href=\\\"#accessors\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Accessors</h2>\\n<h2 id=\\\"static-properties\\\"><a href=\\\"#static-properties\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Static Properties</h2>\\n<h2 id=\\\"abstract-classes\\\"><a href=\\\"#abstract-classes\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Abstract Classes</h2>\\n<h2 id=\\\"advanced-techniques\\\"><a href=\\\"#advanced-techniques\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Advanced Techniques</h2>\\n<h3 id=\\\"constructor-functions\\\"><a href=\\\"#constructor-functions\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Constructor functions</h3>\\n<h3 id=\\\"using-a-class-as-an-interface\\\"><a href=\\\"#using-a-class-as-an-interface\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Using a class as an interface</h3>\\n<h1 id=\\\"functions\\\"><a href=\\\"#functions\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Functions</h1>\\n<h2 id=\\\"function-types-1\\\"><a href=\\\"#function-types-1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Function Types</h2>\\n<h2 id=\\\"optional-and-default-parameters\\\"><a href=\\\"#optional-and-default-parameters\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Optional and Default Parameters</h2>\\n<h2 id=\\\"rest-parameters\\\"><a href=\\\"#rest-parameters\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Rest Parameters</h2>\\n<h2 id=\\\"this\\\"><a href=\\\"#this\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>this</h2>\\n<h2 id=\\\"overloads\\\"><a href=\\\"#overloads\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Overloads</h2>\\n<h1 id=\\\"generics\\\"><a href=\\\"#generics\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Generics</h1>\\n<h2 id=\\\"generic-type-variables\\\"><a href=\\\"#generic-type-variables\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Generic Type Variables</h2>\\n<h2 id=\\\"generic-types\\\"><a href=\\\"#generic-types\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Generic Types</h2>\\n<h2 id=\\\"generic-classes\\\"><a href=\\\"#generic-classes\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Generic Classes</h2>\\n<h2 id=\\\"generic-constraints\\\"><a href=\\\"#generic-constraints\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Generic Constraints</h2>\\n<h1 id=\\\"enums\\\"><a href=\\\"#enums\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Enums</h1>\\n<h1 id=\\\"type-inference\\\"><a href=\\\"#type-inference\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Type Inference</h1>\\n<h2 id=\\\"best-common-type\\\"><a href=\\\"#best-common-type\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Best common type</h2>\\n<h2 id=\\\"contextual-type\\\"><a href=\\\"#contextual-type\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Contextual Type</h2>\\n<h1 id=\\\"type-compatibility\\\"><a href=\\\"#type-compatibility\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Type Compatibility</h1>\\n<h2 id=\\\"comparing-two-functions\\\"><a href=\\\"#comparing-two-functions\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Comparing two functions</h2>\\n<h2 id=\\\"function-parameter-bivariance\\\"><a href=\\\"#function-parameter-bivariance\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Function Parameter Bivariance</h2>\\n<h2 id=\\\"optional-parameters-and-rest-parameters\\\"><a href=\\\"#optional-parameters-and-rest-parameters\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Optional Parameters and Rest Parameters</h2>\\n<h2 id=\\\"enums-1\\\"><a href=\\\"#enums-1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Enums</h2>\\n<h2 id=\\\"classes-1\\\"><a href=\\\"#classes-1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Classes</h2>\\n<h2 id=\\\"generics-1\\\"><a href=\\\"#generics-1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Generics</h2>\\n<h2 id=\\\"advanced-topics\\\"><a href=\\\"#advanced-topics\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Advanced Topics</h2>\\n<p>Subtype vs Assignment</p>\\n<h1 id=\\\"symbols\\\"><a href=\\\"#symbols\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Symbols</h1>\\n<h1 id=\\\"iterators-and-generators\\\"><a href=\\\"#iterators-and-generators\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Iterators and Generators</h1>\\n<h1 id=\\\"modules\\\"><a href=\\\"#modules\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Modules</h1>\\n<h1 id=\\\"namespaces\\\"><a href=\\\"#namespaces\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Namespaces</h1>\\n<h1 id=\\\"namespaces-and-modules\\\"><a href=\\\"#namespaces-and-modules\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Namespaces and Modules</h1>\\n<h1 id=\\\"module-resolution\\\"><a href=\\\"#module-resolution\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Module Resolution</h1>\\n<h1 id=\\\"declaration-merging\\\"><a href=\\\"#declaration-merging\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Declaration Merging</h1>\\n<h1 id=\\\"jsx\\\"><a href=\\\"#jsx\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>JSX</h1>\\n<h1 id=\\\"decorators\\\"><a href=\\\"#decorators\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Decorators</h1>\\n<h1 id=\\\"mixins\\\"><a href=\\\"#mixins\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Mixins</h1>\\n<h1 id=\\\"triple-slash-directives\\\"><a href=\\\"#triple-slash-directives\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Triple-Slash Directives</h1>\\n<h1 id=\\\"语言规范\\\"><a href=\\\"#%E8%AF%AD%E8%A8%80%E8%A7%84%E8%8C%83\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>语言规范</h1>\\n<p><a href=\\\"https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md\\\">https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md</a></p>\",\"timeToRead\":5,\"excerpt\":\"TS的简介或者说学习笔记吧，主要留给自己查阅。 在线工具 https://www.typescriptlang.org/play/index.html 基本数据类型Basic Types Boolean Number String Array Tuple Enum Any…\",\"fields\":{\"slug\":\"/ts-study/\"},\"frontmatter\":{\"title\":\"TypeScript简介\",\"date\":\"2018-03-06\",\"category\":\"FE\",\"tags\":[\"typescript\",\"ts\"]}}},{\"node\":{\"html\":\"<p><strong>持续更新，可以保持关注</strong></p>\\n<p><a href=\\\"https://www.typescriptlang.org/\\\">TypeScript</a>的一些学习资料:</p>\\n<!-- more -->\\n<h1 id=\\\"语言本身\\\"><a href=\\\"#%E8%AF%AD%E8%A8%80%E6%9C%AC%E8%BA%AB\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>语言本身</h1>\\n<ul>\\n<li>最权威的资料，当然是TS官网： <a href=\\\"https://www.typescriptlang.org/\\\">https://www.typescriptlang.org/</a></li>\\n<li>typescript-book: <a href=\\\"https://github.com/basarat/typescript-book\\\">https://github.com/basarat/typescript-book</a></li>\\n</ul>\\n<h1 id=\\\"脚手架\\\"><a href=\\\"#%E8%84%9A%E6%89%8B%E6%9E%B6\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>脚手架</h1>\\n<ul>\\n<li>TypeScript &#x26; Egg.js: <a href=\\\"https://github.com/magicly/ts-egg-demo\\\">https://github.com/magicly/ts-egg-demo</a></li>\\n<li>TypeScript &#x26; React: <a href=\\\"https://magicly.me/ts-react-starter/\\\">https://magicly.me/ts-react-starter/</a></li>\\n<li>TypeScript &#x26; React Native: <a href=\\\"https://magicly.me/ts-reactnative-starter/\\\">https://magicly.me/ts-reactnative-starter/</a></li>\\n<li>一条命令创建免配置的 React + Antd + Typescript 项目： <a href=\\\"https://zhuanlan.zhihu.com/p/33523384\\\">https://zhuanlan.zhihu.com/p/33523384</a></li>\\n<li>react + typescript 手脚架： <a href=\\\"https://zhuanlan.zhihu.com/p/27771021\\\">https://zhuanlan.zhihu.com/p/27771021</a></li>\\n<li>微信小程序：<a href=\\\"https://github.com/qiu8310/minapp\\\">https://github.com/qiu8310/minapp</a></li>\\n</ul>\\n<h1 id=\\\"其他工具\\\"><a href=\\\"#%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>其他工具</h1>\\n<ul>\\n<li>TypeSearch: <a href=\\\"https://microsoft.github.io/TypeSearch/\\\">https://microsoft.github.io/TypeSearch/</a></li>\\n<li>CSS: <a href=\\\"https://typestyle.github.io\\\">https://typestyle.github.io</a></li>\\n</ul>\",\"timeToRead\":1,\"excerpt\":\"持续更新，可以保持关注 TypeScript 的一些学习资料: 语言本身 最权威的资料，当然是TS官网：  https://www.typescriptlang.org/ typescript-book:  https://github.com/basarat…\",\"fields\":{\"slug\":\"/ts-materials/\"},\"frontmatter\":{\"title\":\"TypeScript学习资料\",\"date\":\"2018-03-06\",\"category\":\"FE\",\"tags\":[\"typescript\",\"ts\"]}}},{\"node\":{\"html\":\"<p><a href=\\\"https://magicly.me/ts-react-starter/\\\">上一篇我们介绍了TypeScript如何跟React搭配使用</a>，这篇我们继续介绍如何在React Native中使用TS。</p>\\n<p>关于React Native，我之前写过一本<a href=\\\"http://gitbook.cn/gitchat/column/5a17c2e113c02f4a35ca5a7d\\\">React Native电子书</a>， 如果不熟悉RN的话可以参考一下。</p>\\n<p>本文涵盖内容如下：</p>\\n<ul>\\n<li>TypeScript &#x26; React Native</li>\\n<li>TSLint</li>\\n<li>Jest</li>\\n</ul>\\n<!-- more -->\\n<h1 id=\\\"准备知识\\\"><a href=\\\"#%E5%87%86%E5%A4%87%E7%9F%A5%E8%AF%86\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>准备知识</h1>\\n<p>本文假设读者已经知道如何用RN进行开发，至少是把开发环境搭建起来，能在模拟器或者手机上运行App了。如果不了解的话， 请参考<a href=\\\"http://gitbook.cn/gitchat/column/5a17c2e113c02f4a35ca5a7d\\\">React Native 移动开发入门与实战</a>。</p>\\n<h1 id=\\\"新建项目\\\"><a href=\\\"#%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>新建项目</h1>\\n<p>用<code class=\\\"language-text\\\">react-native init</code>正常初始化一个RN项目。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">react-native init TSReactNativeDemo</code></pre>\\n      </div>\\n<p>项目初始结构为：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  TSReactNativeDemo tree -L 1\\n<span class=\\\"token keyword\\\">.</span>\\n├── App.js\\n├── __tests__\\n├── android\\n├── app.json\\n├── index.js\\n├── ios\\n├── node_modules\\n├── package.json\\n└── yarn.lock\\n\\n4 directories, 5 files</code></pre>\\n      </div>\\n<h1 id=\\\"运行\\\"><a href=\\\"#%E8%BF%90%E8%A1%8C\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>运行</h1>\\n<p>在手机或者模拟器上运行起来。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">react-native run-android\\nreact-native run-ios</code></pre>\\n      </div>\\n<h1 id=\\\"引入typescript\\\"><a href=\\\"#%E5%BC%95%E5%85%A5typescript\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>引入TypeScript</h1>\\n<p>目前React Native Packager是通过Babel编译<code class=\\\"language-text\\\">.js</code>文件以及打包的，暂时还没有特别好的方法直接使用<code class=\\\"language-text\\\">.tsx</code>。所以基本思路就是， 先用TypeScript的编译器<code class=\\\"language-text\\\">tsc</code>将<code class=\\\"language-text\\\">.ts</code>或<code class=\\\"language-text\\\">.tsx</code>文件编译成<code class=\\\"language-text\\\">.js</code>文件，再用React Native Packager编译打包即可。</p>\\n<p>首先我们安装TS依赖：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">yarn add -D typescript</code></pre>\\n      </div>\\n<p>然后需要安装types：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">yarn add -D @types/react @types/react-native</code></pre>\\n      </div>\\n<p>然后需要配置<code class=\\\"language-text\\\">tsconfig.json</code>，可以用如下命令生成：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">tsc --init --pretty --sourceMap --target es2015 --outDir ./lib --rootDir ./ --module commonjs --jsx react</code></pre>\\n      </div>\\n<p>生成的文件里面有具体每个参数的含义，也可以参考<a href=\\\"http://www.typescriptlang.org/docs/handbook/tsconfig-json.html\\\">TS官网文档</a>。 也可以直接参考上一篇中的<code class=\\\"language-text\\\">tsconfig.json</code>文件，进行少许修改即可。</p>\\n<h1 id=\\\"编写ts组件\\\"><a href=\\\"#%E7%BC%96%E5%86%99ts%E7%BB%84%E4%BB%B6\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>编写TS组件</h1>\\n<p>上面配置好TS后， 我们就可以开始用TS写组件了。还是跟上篇一样， 写一个简单的<code class=\\\"language-text\\\">Counter.tsx</code>。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Button<span class=\\\"token punctuation\\\">,</span> StyleSheet<span class=\\\"token punctuation\\\">,</span> Text<span class=\\\"token punctuation\\\">,</span> View <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-native'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Props</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n  count<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">;</span>\\n  onInc<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n  onDec<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> count <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> onInc<span class=\\\"token punctuation\\\">,</span> onDec <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> Props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>View</span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>styles<span class=\\\"token punctuation\\\">.</span>root<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Text</span><span class=\\\"token punctuation\\\">></span></span>\\n      Counter <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Text</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>View</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Button</span> <span class=\\\"token attr-name\\\">title</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>+<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">onPress</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onInc <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Button</span> <span class=\\\"token attr-name\\\">title</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>-<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">onPress</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onDec <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>View</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>View</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// styles</span>\\n<span class=\\\"token keyword\\\">const</span> styles <span class=\\\"token operator\\\">=</span> StyleSheet<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  root<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    alignItems<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'center'</span><span class=\\\"token punctuation\\\">,</span>\\n    alignSelf<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'center'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  buttons<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    flexDirection<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'row'</span><span class=\\\"token punctuation\\\">,</span>\\n    minHeight<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">70</span><span class=\\\"token punctuation\\\">,</span>\\n    alignItems<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'stretch'</span><span class=\\\"token punctuation\\\">,</span>\\n    alignSelf<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'center'</span><span class=\\\"token punctuation\\\">,</span>\\n    borderWidth<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  button<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    flex<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span>\\n    paddingVertical<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  greeting<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    color<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'#999'</span><span class=\\\"token punctuation\\\">,</span>\\n    fontWeight<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'bold'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>然后我们执行<code class=\\\"language-text\\\">./node_modules/.bin/tsc</code>命令，就会在<code class=\\\"language-text\\\">lib</code>目录下生成相同目录结构的<code class=\\\"language-text\\\">.js</code>文件等。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  TSReactNativeDemo git:<span class=\\\"token punctuation\\\">(</span>master<span class=\\\"token punctuation\\\">)</span> ✗ tree lib -L 3\\nlib\\n└── src\\n    └── components\\n        ├── Counter.js\\n        └── Counter.js.map\\n\\n2 directories, 2 files</code></pre>\\n      </div>\\n<p>然后在<code class=\\\"language-text\\\">App.js</code>中如下使用<code class=\\\"language-text\\\">Counter</code>即可：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> Component <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> StyleSheet<span class=\\\"token punctuation\\\">,</span> Text<span class=\\\"token punctuation\\\">,</span> View <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-native'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">import</span> Counter <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./lib/src/components/Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>View</span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>styles<span class=\\\"token punctuation\\\">.</span>container<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Text</span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>styles<span class=\\\"token punctuation\\\">.</span>welcome<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>Welcome to React Native<span class=\\\"token operator\\\">!</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Text</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Counter</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">count</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>View</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> styles <span class=\\\"token operator\\\">=</span> StyleSheet<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  container<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    flex<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span>\\n    justifyContent<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'center'</span><span class=\\\"token punctuation\\\">,</span>\\n    alignItems<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'center'</span><span class=\\\"token punctuation\\\">,</span>\\n    backgroundColor<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'#F5FCFF'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  welcome<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    fontSize<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">,</span>\\n    textAlign<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'center'</span><span class=\\\"token punctuation\\\">,</span>\\n    margin<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  instructions<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    textAlign<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'center'</span><span class=\\\"token punctuation\\\">,</span>\\n    color<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'#333333'</span><span class=\\\"token punctuation\\\">,</span>\\n    marginBottom<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>由于<code class=\\\"language-text\\\">lib/</code>目录下的文件是编译生成，因此不需要放在git里面， 我们在<code class=\\\"language-text\\\">.gitingore</code>中添加<code class=\\\"language-text\\\">lib/</code>忽略之：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\"># TypeScript\\nlib/</code></pre>\\n      </div>\\n<h1 id=\\\"测试\\\"><a href=\\\"#%E6%B5%8B%E8%AF%95\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>测试</h1>\\n<p><strong>注意</strong>， <a href=\\\"http://airbnb.io/enzyme/docs/guides/react-native.html\\\">enzyme测试ReactNative需要用react-native-mock</a>， 但是<a href=\\\"https://github.com/RealOrangeOne/react-native-mock/issues/139\\\"><code class=\\\"language-text\\\">react-native-mock</code>目前不支持React v16+</a>， 因此暂时不采用enzyme吧。</p>\\n<p>RN还是用Jest做测试，为了支持TS，我们安装<code class=\\\"language-text\\\">ts-jest</code>包。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">yarn add -D ts-jest</code></pre>\\n      </div>\\n<p>同样，我们也添加相应的<code class=\\\"language-text\\\">@types</code>：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">yarn add -D @types/jest @types/react-test-renderer</code></pre>\\n      </div>\\n<p>修改<code class=\\\"language-text\\\">package.json</code>文件里面<code class=\\\"language-text\\\">jest</code>属性：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token property\\\">\\\"jest\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"preset\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"react-native\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"moduleFileExtensions\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n        <span class=\\\"token string\\\">\\\"ts\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"tsx\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"js\\\"</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"transform\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"^.+\\\\\\\\.(js)$\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"&lt;rootDir>/node_modules/babel-jest\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"\\\\\\\\.(ts|tsx)$\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"&lt;rootDir>/node_modules/ts-jest/preprocessor.js\\\"</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"testRegex\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"(/__tests__/.*|\\\\\\\\.(test|spec))\\\\\\\\.(ts|tsx|js)$\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"testPathIgnorePatterns\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n        <span class=\\\"token string\\\">\\\"\\\\\\\\.snap$\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"&lt;rootDir>/node_modules/\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"&lt;rootDir>/lib/\\\"</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"cacheDirectory\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\".jest/cache\\\"</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>然后我们就可以写测试代码了：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// src/components/Counter.test.tsx</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> enzyme <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'enzyme'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Counter <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">it</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'renders the correct text when count is not given'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> hello <span class=\\\"token operator\\\">=</span> enzyme<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">shallow</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Counter</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>hello<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'.counter'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">text</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toEqual</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Counter counter1: 1'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>更多关于Jest测试可以参考<a href=\\\"http://gitbook.cn/gitchat/column/5a17c2e113c02f4a35ca5a7d/topic/5a17de5713c02f4a35ca67af\\\">测试 Jest</a>。</p>\\n<h1 id=\\\"配置tslint\\\"><a href=\\\"#%E9%85%8D%E7%BD%AEtslint\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>配置TSLint</h1>\\n<p>不像上一篇用<code class=\\\"language-text\\\">react-scripts-ts</code>的话TSLint是自动配置好的， 我们需要手动安装TSLint。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">yarn add -D tslint tslint-react</code></pre>\\n      </div>\\n<p>然后把上一章的<code class=\\\"language-text\\\">tslint.json</code>文件复制过来。再在<code class=\\\"language-text\\\">package.json</code>文件中增加如下代码：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code class=\\\"language-json\\\">    <span class=\\\"token property\\\">\\\"lint\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"tslint -c tslint.json 'src/**/*.{ts,tsx}'\\\"</span><span class=\\\"token punctuation\\\">,</span></code></pre>\\n      </div>\\n<p>然后就可以用<code class=\\\"language-text\\\">yarn lint</code>检查代码了。</p>\\n<p>为了在写代码的时候就能在VSCode里面获得错误提示， 可以安装VSCode的TSLint插件。</p>\\n<h1 id=\\\"其他\\\"><a href=\\\"#%E5%85%B6%E4%BB%96\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>其他</h1>\\n<p>最后我们做一些额外工作提高开发效率。首先我们将<code class=\\\"language-text\\\">tsc</code>命令写到<code class=\\\"language-text\\\">package.json</code>里， 同时提供一个选择开启<code class=\\\"language-text\\\">watch</code>模式。这样子执行<code class=\\\"language-text\\\">yarn tsc-watch</code>命令后， TS就能实时编译为JS了，再配合上RN的<code class=\\\"language-text\\\">Live Reload</code>或者<code class=\\\"language-text\\\">Hot Reloading</code>能大大提高开发效率。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code class=\\\"language-json\\\">    <span class=\\\"token property\\\">\\\"tsc\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"tsc\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"tsc-watch\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"tsc --watch\\\"</span><span class=\\\"token punctuation\\\">,</span></code></pre>\\n      </div>\\n<p>Redux在RN中使用跟在React中使用没什么区别，参考<a href=\\\"/ts-react-starter\\\">TypeScript React入门</a>即可。</p>\\n<p>本文代码托管在<a href=\\\"https://github.com/magicly/TSReactNativeDemo\\\">https://github.com/magicly/TSReactNativeDemo</a> ，随意使用~</p>\\n<h1 id=\\\"refers\\\"><a href=\\\"#refers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Refers</h1>\\n<ul>\\n<li><a href=\\\"https://github.com/Microsoft/TypeScript-React-Native-Starter\\\">https://github.com/Microsoft/TypeScript-React-Native-Starter</a></li>\\n<li><a href=\\\"https://github.com/kulshekhar/ts-jest\\\">https://github.com/kulshekhar/ts-jest</a></li>\\n<li><a href=\\\"https://www.typescriptlang.org/docs/home.html\\\">https://www.typescriptlang.org/docs/home.html</a></li>\\n<li><a href=\\\"http://airbnb.io/enzyme/\\\">http://airbnb.io/enzyme/</a></li>\\n<li><a href=\\\"https://palantir.github.io/tslint/rules/no-implicit-dependencies/\\\">https://palantir.github.io/tslint/rules/no-implicit-dependencies/</a></li>\\n<li><a href=\\\"https://palantir.github.io/tslint/usage/rule-flags/\\\">https://palantir.github.io/tslint/usage/rule-flags/</a></li>\\n<li><a href=\\\"https://stackoverflow.com/questions/31605781/why-do-tslint-and-jslint-report-empty-blocks\\\">https://stackoverflow.com/questions/31605781/why-do-tslint-and-jslint-report-empty-blocks</a></li>\\n<li><a href=\\\"https://medium.com/@rintoj/react-native-with-typescript-40355a90a5d7\\\">https://medium.com/@rintoj/react-native-with-typescript-40355a90a5d7</a></li>\\n<li><a href=\\\"http://bbs.reactnative.cn/topic/4483/%E4%BD%BF%E7%94%A8typescript%E7%BC%96%E5%86%99react-native-%E9%AB%98%E6%95%88%E7%89%88\\\">http://bbs.reactnative.cn/topic/4483/使用typescript编写react-native-高效版</a></li>\\n<li><a href=\\\"https://zhuanlan.zhihu.com/p/27029898\\\">https://zhuanlan.zhihu.com/p/27029898</a></li>\\n</ul>\",\"timeToRead\":6,\"excerpt\":\"上一篇我们介绍了TypeScript如何跟React搭配使用 ，这篇我们继续介绍如何在React Native中使用TS。 关于React Native，我之前写过一本 React Native电子书 ， 如果不熟悉RN的话可以参考一下。 本文涵盖内容如下： TypeScript…\",\"fields\":{\"slug\":\"/ts-reactnative-starter/\"},\"frontmatter\":{\"title\":\"TypeScript React Native入门\",\"date\":\"2018-02-25\",\"category\":\"FE\",\"tags\":[\"typescript\",\"ts\",\"react\",\"rn\",\"redux\",\"react native\"]}}},{\"node\":{\"html\":\"<p>Javascript作为一门动态语言， 简单易学，容易上手，非常适合web开发（浏览器也只支持JS啊）。但是随着项目逐渐变大，动态语言的弊端慢慢显露出来，比如没有编译器检查，代码质量不容易保证，IDE支持有限， 不便于重构等等， 而且JS设计之初比较仓促遗留了很多问题，好在ES6等后续版本慢慢修复了很多问题。也有各种尝试将其它语言编译成JS来做web开发，包括GWT、Dart、Java、Scala、Kotlin、Go等，而微软出的TypeScript由于一系列的优点，算是目前最流行的吧。当前Web开发基本是三大框架三分天下：Angular、React、Vue，而Angular本身就是TS开发的，React和Vue也支持TS开发。本文就简单介绍一下如何用TS开发React。</p>\\n<p>另外Facebook自己开发的Flow也可以给JS添加静态类型，我之前写过一篇文章介绍React Native里面如何使用Flow，有兴趣的可以移步<a href=\\\"http://gitbook.cn/gitchat/column/5a17c2e113c02f4a35ca5a7d/topic/5a17de4013c02f4a35ca67a6\\\">Flow使用</a>。</p>\\n<p>本文涵盖内容如下：</p>\\n<ul>\\n<li>TypeScript &#x26; React</li>\\n<li>TSLint</li>\\n<li>Jest &#x26; Enzyme</li>\\n<li>Redux</li>\\n</ul>\\n<!-- more -->\\n<h1 id=\\\"安装create-react-app\\\"><a href=\\\"#%E5%AE%89%E8%A3%85create-react-app\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>安装create-react-app</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> i -g create-react-app</code></pre>\\n      </div>\\n<h1 id=\\\"新建项目\\\"><a href=\\\"#%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>新建项目</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">create-react-app ts-react-demo --scripts-version<span class=\\\"token operator\\\">=</span>react-scripts-ts</code></pre>\\n      </div>\\n<p><a href=\\\"https://github.com/wmonk/create-react-app-typescript\\\">react-scripts-ts</a>是CRA的一个fork，可以很方便的开始使用TS。</p>\\n<p>项目初始结构为：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  ts-react-demo tree -L 1\\n<span class=\\\"token keyword\\\">.</span>\\n├── README.md\\n├── node_modules\\n├── package.json\\n├── public\\n├── src\\n├── tsconfig.json\\n├── tsconfig.test.json\\n├── tslint.json\\n└── yarn.lock\\n\\n3 directories, 6 files</code></pre>\\n      </div>\\n<p>其中：</p>\\n<ul>\\n<li>tsconfig.json是关于TS编译器的一些配置项；</li>\\n<li>tslint.json，是TSLint的配置文件，类似ESLint</li>\\n</ul>\\n<p>其他文件跟普通CRA建的项目一样。</p>\\n<h1 id=\\\"运行\\\"><a href=\\\"#%E8%BF%90%E8%A1%8C\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>运行</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> start</code></pre>\\n      </div>\\n<p>会自动启动浏览器打开<a href=\\\"http://localhost:3000\\\">http://localhost:3000</a> 。</p>\\n<h1 id=\\\"测试\\\"><a href=\\\"#%E6%B5%8B%E8%AF%95\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>测试</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> run <span class=\\\"token function\\\">test</span></code></pre>\\n      </div>\\n<p>会运行Jest做测试， 检查所有以<code class=\\\"language-text\\\">.test.ts</code>或者<code class=\\\"language-text\\\">.spec.ts</code>结尾的文件。</p>\\n<h1 id=\\\"打正式包\\\"><a href=\\\"#%E6%89%93%E6%AD%A3%E5%BC%8F%E5%8C%85\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>打正式包</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> run build</code></pre>\\n      </div>\\n<p>下面， 我们正式开始用TS来写React组件。</p>\\n<h1 id=\\\"创建组件\\\"><a href=\\\"#%E5%88%9B%E5%BB%BA%E7%BB%84%E4%BB%B6\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>创建组件</h1>\\n<p>我们写一个简单的<code class=\\\"language-text\\\">Counter</code>组件，接受<code class=\\\"language-text\\\">name</code>和<code class=\\\"language-text\\\">count</code>参数， 显示<code class=\\\"language-text\\\">Counter {name}: {count}</code>，可以如下调用：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Counter</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">count</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span></code></pre>\\n      </div>\\n<p>React里，最简单的写组件的方式是用函数定义，即所谓的<a href=\\\"https://react-course.magicfun.ai/basics/stateless-component.html\\\">Stateless Component</a>，定义如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// src/components/Counter.tsx</span>\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Props</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n  count<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> count <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> Props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    Counter <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>当然也可以用<code class=\\\"language-text\\\">class</code>的方式定义组件，写作如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Counter</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span><span class=\\\"token operator\\\">&lt;</span>Props<span class=\\\"token punctuation\\\">,</span> object<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> count <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n        Counter <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>这里<code class=\\\"language-text\\\">React.Component&lt;Props, object&gt;</code>第一个是<code class=\\\"language-text\\\">props</code>的参数类型， 第二个是<code class=\\\"language-text\\\">state</code>的类型。因为我们暂时用不到<code class=\\\"language-text\\\">state</code>，所以简单放一个<code class=\\\"language-text\\\">objcet</code>类型即可。</p>\\n<p>然后我们修改<code class=\\\"language-text\\\">index.tsx</code>文件：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-dom'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Hello <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./components/Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> registerServiceWorker <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./registerServiceWorker'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token string\\\">'./index.css'</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Hello</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'root'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> HTMLElement<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">registerServiceWorker</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>最后提一下<code class=\\\"language-text\\\">document.getElementById(&#39;root&#39;) as HTMLElement</code>是TS里的强制类型转化，因为<code class=\\\"language-text\\\">document.getElementById(&#39;root&#39;)</code>返回的类型是<code class=\\\"language-text\\\">HTMLElement | null</code>，即有可能为null。当然了， 如果html里面没有id是root的DOM，返回值就是null了。但是这里我们自己知道肯定有id是root的DOM的， 也就是说我们比TS编译器更清楚事实真相，所以可以用强制类型转化告诉编译器。PS, 其实不做貌似也没问题。</p>\\n<h1 id=\\\"添加样式\\\"><a href=\\\"#%E6%B7%BB%E5%8A%A0%E6%A0%B7%E5%BC%8F\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>添加样式</h1>\\n<p>前端开发，一个很重要的工作就是编写样式。CRA（也就是webpack和一堆loaders）支持直接<code class=\\\"language-text\\\">import css</code>，所以我们可以直接编写<code class=\\\"language-text\\\">src/components/Counter.css</code>，然后在<code class=\\\"language-text\\\">Counter.tsx</code>中<code class=\\\"language-text\\\">import</code>即可。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-css\\\"><code class=\\\"language-css\\\"><span class=\\\"token comment\\\">/* src/components/Counter.css */</span>\\n<span class=\\\"token selector\\\">.counter</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">text-align</span><span class=\\\"token punctuation\\\">:</span> center<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token property\\\">font-size</span><span class=\\\"token punctuation\\\">:</span> 48px<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token string\\\">'./Counter.css'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Props</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n  count<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> count <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> Props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    Counter <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>当然，由于CSS只有全局作用域，很容易出现命名冲突，现在越来越流行用CSSInJS来开发，推荐使用<a href=\\\"https://react-course.magicfun.ai/css/\\\">Styled Components</a>。</p>\\n<h1 id=\\\"测试-1\\\"><a href=\\\"#%E6%B5%8B%E8%AF%95-1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>测试</h1>\\n<p>我们用<a href=\\\"http://airbnb.io/enzyme/\\\">Enzyme</a>来做测试。首先安装依赖：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> i -D enzyme @types/enzyme react-addons-test-utils</code></pre>\\n      </div>\\n<p>其中<code class=\\\"language-text\\\">enzyme</code>是实际运行的代码， <code class=\\\"language-text\\\">@types/enzyme</code>是类型声明文件，类似于C/C++中的<code class=\\\"language-text\\\">.h</code>文件。</p>\\n<p>然后我们就可以写测试代码了：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// src/components/Counter.test.tsx</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> enzyme <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'enzyme'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Counter <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">it</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'renders the correct text when count is not given'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> hello <span class=\\\"token operator\\\">=</span> enzyme<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">shallow</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Counter</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>hello<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'.counter'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">text</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toEqual</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Counter counter1: 1'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><strong>注意！！！</strong>：这里我遇到一些问题， 直接执行<code class=\\\"language-text\\\">npm run test</code>，报错：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">Error: Cannot <span class=\\\"token function\\\">find</span> module <span class=\\\"token string\\\">'./development/fe/ts-react-demo/node_modules/jest-cli'</span></code></pre>\\n      </div>\\n<p>发现<code class=\\\"language-text\\\">jest-cli</code>目录为空：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  ts-react-demo git:<span class=\\\"token punctuation\\\">(</span>master<span class=\\\"token punctuation\\\">)</span> ✗ ll node_modules/jest-cli\\ntotal 0\\ndrwxr-xr-x  3 magicly  staff    96B  2 24 12:12 node_modules</code></pre>\\n      </div>\\n<p>而重新用<code class=\\\"language-text\\\">yarn</code>安装所有依赖， 则正常了：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  ts-react-demo git:<span class=\\\"token punctuation\\\">(</span>master<span class=\\\"token punctuation\\\">)</span> ✗ ll node_modules/jest-cli\\ntotal 16\\n-rw-r--r--   1 magicly  staff   595B  5 12  2017 README.md\\ndrwxr-xr-x   3 magicly  staff    96B  2 24 12:16 bin\\ndrwxr-xr-x  23 magicly  staff   736B  2 24 12:16 build\\ndrwxr-xr-x   3 magicly  staff    96B  2 24 12:16 node_modules\\n-rw-r--r--   1 magicly  staff   1.7K  5 24  2017 package.json</code></pre>\\n      </div>\\n<p>貌似<code class=\\\"language-text\\\">jest</code>跟<code class=\\\"language-text\\\">yarn</code>更适合？\\n然后执行<code class=\\\"language-text\\\">npm run test</code>报错：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">FAIL  src/components/Counter.test.tsx\\n  ● renders the correct text when no count is given\\n\\n\\n          Enzyme Internal Error: Enzyme expects an adapter to be configured, but found none. To\\n          configure an adapter, you should call <span class=\\\"token variable\\\"><span class=\\\"token variable\\\">`</span>Enzyme.configure<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> adapter: new Adapter<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token variable\\\">`</span></span>\\n          before using any of Enzyme<span class=\\\"token string\\\">'s top level APIs, where <span class=\\\"token variable\\\"><span class=\\\"token variable\\\">`</span>Adapter<span class=\\\"token variable\\\">`</span></span> is the adapter\\n          corresponding to the library currently being tested. For example:\\n\\n          import Adapter from '</span>enzyme-adapter-react-15'<span class=\\\"token punctuation\\\">;</span>\\n\\n          To <span class=\\\"token function\\\">find</span> out <span class=\\\"token function\\\">more</span> about this, see http://airbnb.io/enzyme/docs/installation/index.html</code></pre>\\n      </div>\\n<p>因为我们用的Reactv16，安装相应adapter即可：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> i -D enzyme-adapter-react-16</code></pre>\\n      </div>\\n<p>结果，很奇怪，<code class=\\\"language-text\\\">jest-cli</code>又被清空了！又重新用<code class=\\\"language-text\\\">yarn</code>安装了一次，ok了， 看样子以后用CRA的话还是用yarn吧，毕竟都是Facebook的产品。</p>\\n<p>还会报错说没有<code class=\\\"language-text\\\">enzyme-adapter-react-16</code>的类型定义信息， 于是安装之: <code class=\\\"language-text\\\">yarn add -D @types/enzyme-adapter-react-16</code>。 一起正常了！</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"> PASS  src/components/Counter.test.tsx\\n  ✓ renders the correct text when count is not given <span class=\\\"token punctuation\\\">(</span>3ms<span class=\\\"token punctuation\\\">)</span>\\n  ✓ renders the correct text when count is given <span class=\\\"token punctuation\\\">(</span>1ms<span class=\\\"token punctuation\\\">)</span>\\n\\nTest Suites: 1 passed, 1 total\\nTests:       2 passed, 2 total\\nSnapshots:   0 total\\nTime:        0.597s, estimated 2s\\nRan all <span class=\\\"token function\\\">test</span> suites related to changed files.\\n\\nWatch Usage: Press w to show more.</code></pre>\\n      </div>\\n<p>最终测试代码如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// src/components/Counter.test.tsx</span>\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> enzyme <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'enzyme'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> Adapter <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'enzyme-adapter-react-16'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Counter <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n\\nenzyme<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">configure</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> adapter<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Adapter</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">it</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'renders the correct text when count is not given'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> hello <span class=\\\"token operator\\\">=</span> enzyme<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">shallow</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Counter</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>hello<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'.counter'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">text</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toEqual</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Counter counter1: 1'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">it</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'renders the correct text when count is given'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> hello <span class=\\\"token operator\\\">=</span> enzyme<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">shallow</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Counter</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">count</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>hello<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'.counter'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">text</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toEqual</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Counter counter1: 5'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h1 id=\\\"状态管理\\\"><a href=\\\"#%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>状态管理</h1>\\n<p>稍微复杂点的应用都需要专门的状态管理工具， 比较流行的有<a href=\\\"http://redux.js.org/\\\">Redux</a>和<a href=\\\"https://mobx.js.org/\\\">MobX</a>， 这里我们使用<a href=\\\"http://gitbook.cn/gitchat/column/5a17c2e113c02f4a35ca5a7d/topic/5a17ddd313c02f4a35ca676f\\\">更熟悉的Redux</a>, 以前做培训的时候录制过一个<a href=\\\"https://www.bilibili.com/video/av17174653/\\\">redux视频</a>，有兴趣的可以看看。</p>\\n<h2 id=\\\"安装redux\\\"><a href=\\\"#%E5%AE%89%E8%A3%85redux\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>安装redux</h2>\\n<p>首先我们还是安装<code class=\\\"language-text\\\">redux</code>和<code class=\\\"language-text\\\">react-redux</code>。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">yarn add redux react-redux @types/react-redux</code></pre>\\n      </div>\\n<p>这里我们只需要安装<code class=\\\"language-text\\\">react-redux</code>的types，因为<code class=\\\"language-text\\\">redux</code>包里自己包含了类型定义（现在很多流行的包都这样做了，也可以反映出TS的流行程度）。</p>\\n<p>redux有三个重要部分，分别是<code class=\\\"language-text\\\">state</code>, <code class=\\\"language-text\\\">action</code>和<code class=\\\"language-text\\\">reducer</code>，接下来我们分别介绍。</p>\\n<h2 id=\\\"state\\\"><a href=\\\"#state\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>state</h2>\\n<p>redux的设计原则是整个App里就只有一颗状态树，我们的应用比较简单，状态只有两个变量即可：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// src/types/index.tsx</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">StoreState</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n  count<span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h2 id=\\\"actions\\\"><a href=\\\"#actions\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>actions</h2>\\n<p>action就是简单的JS对象，只需要有<code class=\\\"language-text\\\">type</code>属性即可，为了便于重构，我们把用作<code class=\\\"language-text\\\">action.type</code>的字符串作为常量放在单独的文件。 </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// src/constants/index.ts</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">INCX</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'INC'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">DEC</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'DEC'</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>然后定义<code class=\\\"language-text\\\">action</code>文件：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> constants <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../constants'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ActionINC</span> <span class=\\\"token punctuation\\\">{</span>\\n  type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">typeof</span> constants<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">INC</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ActionDEC</span> <span class=\\\"token punctuation\\\">{</span>\\n  type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">typeof</span> constants<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">DEC</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> type ActionCount <span class=\\\"token operator\\\">=</span> ActionINC <span class=\\\"token operator\\\">|</span> ActionDEC<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">inc</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    type<span class=\\\"token punctuation\\\">:</span> constants<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">INC</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">dec</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    type<span class=\\\"token punctuation\\\">:</span> constants<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">DEC</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p><strong>注意</strong>，TS有<a href=\\\"https://www.typescriptlang.org/docs/handbook/advanced-types.html\\\">字符串字面量类型String Literal Types</a>，也就是说<code class=\\\"language-text\\\">typeof &#39;INC&#39;</code>类型也就是<code class=\\\"language-text\\\">&#39;INC&#39;</code>，但是不能把作为<code class=\\\"language-text\\\">type</code>的<code class=\\\"language-text\\\">&#39;INC&#39;</code>跟作为字符串本身的<code class=\\\"language-text\\\">&#39;INC&#39;</code>混淆。这就是为什么在定义<code class=\\\"language-text\\\">ActionINC</code>中，需要使用<code class=\\\"language-text\\\">typeof constants.INC</code>而不能直接使用<code class=\\\"language-text\\\">constants.INC</code>（会报找不到INC）。</p>\\n<p>如果觉得我们为了定义两个action写了太多<strong>boilerplate</strong>代码， 可以看一下<a href=\\\"https://github.com/reduxactions/redux-actions\\\">redux-actions</a>。</p>\\n<h2 id=\\\"reducers\\\"><a href=\\\"#reducers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>reducers</h2>\\n<p>redux中，reducer是一个pure function，接受之前的状态和当前的action，返回下一个状态，即：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token punctuation\\\">(</span>prevState<span class=\\\"token punctuation\\\">,</span> action<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> nextState</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// src/reducers/index.ts</span>\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> ActionCount <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../actions'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> StoreState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../types'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token constant\\\">INC</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">DEC</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../constants'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">reducer</span><span class=\\\"token punctuation\\\">(</span>prevState<span class=\\\"token punctuation\\\">:</span> StoreState<span class=\\\"token punctuation\\\">,</span> action<span class=\\\"token punctuation\\\">:</span> ActionCount<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span> StoreState <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>action<span class=\\\"token punctuation\\\">.</span>type<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token constant\\\">INC</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>prevState<span class=\\\"token punctuation\\\">,</span> count<span class=\\\"token punctuation\\\">:</span> prevState<span class=\\\"token punctuation\\\">.</span>count <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token constant\\\">DEC</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>prevState<span class=\\\"token punctuation\\\">,</span> count<span class=\\\"token punctuation\\\">:</span> prevState<span class=\\\"token punctuation\\\">.</span>count <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token keyword\\\">return</span> prevState<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h2 id=\\\"container-component\\\"><a href=\\\"#container-component\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Container Component</h2>\\n<p>一般在开发React应用时，我们会把控制显示的组件定义成无状态组件（Stateless Functional Component），然后在此基础上包装状态，控制逻辑。可以参考redux作者<a href=\\\"https://twitter.com/dan_abramov\\\">Dan Abramov</a>的这篇文章<a href=\\\"https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0\\\">Presentational and Container Components</a>。</p>\\n<p>我们先给<code class=\\\"language-text\\\">Presentational</code>组件<code class=\\\"language-text\\\">Counter</code>添加一些行为，可以增加和减少count。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// src/components/Counter.tsx</span>\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token string\\\">'./Counter.css'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Props</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n  count<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">;</span>\\n  onInc<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n  onDec<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> count <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> onInc<span class=\\\"token punctuation\\\">,</span> onDec <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> Props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    Counter <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onInc<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token operator\\\">+</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onDec<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token operator\\\">-</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>然后我们用<code class=\\\"language-text\\\">react-redux</code>的<code class=\\\"language-text\\\">connect</code>将<code class=\\\"language-text\\\">redux</code>的状态等跟<code class=\\\"language-text\\\">Counter</code>组件关联起来。<code class=\\\"language-text\\\">connect</code>函数接受两个参数：</p>\\n<ul>\\n<li>mapState2Props： 将state跟props关联起来，redux的state变化的时候自动触发props更新导致组件重新渲染</li>\\n<li>mapDispatch2Props： 将redux的dispatch传递给事件回调函数，用户触发redux的state更新</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// src/containers/Counter.tsx</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> connect<span class=\\\"token punctuation\\\">,</span> Dispatch <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-redux'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Counter <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../components/Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> actions <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../actions'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> StoreState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../types'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">mapState2Props</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> count <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> StoreState<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    name<span class=\\\"token punctuation\\\">,</span>\\n    count<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> mapDispatch2Props <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>dispatch<span class=\\\"token punctuation\\\">:</span> Dispatch<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>actions.ActionCount</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    onInc<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span>actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">inc</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    onDec<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span>actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">dec</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token function\\\">connect</span><span class=\\\"token punctuation\\\">(</span>mapState2Props<span class=\\\"token punctuation\\\">,</span> mapDispatch2Props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>Counter<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2 id=\\\"store\\\"><a href=\\\"#store\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Store</h2>\\n<p>最后，我们在最上层组件（通常是在index.tsx里），初始化redux的store，然后传递下去。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-dom'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> createStore <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'redux'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Provider <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-redux'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> StoreState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./types'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> reducer <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./reducers'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Hello <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./containers/Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> registerServiceWorker <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./registerServiceWorker'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token string\\\">'./index.css'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> store <span class=\\\"token operator\\\">=</span> createStore<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>StoreState</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">(</span>reducer<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'counter1'</span><span class=\\\"token punctuation\\\">,</span> count<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Provider</span> <span class=\\\"token attr-name\\\">store</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>store<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Hello</span> <span class=\\\"token punctuation\\\">/></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Provider</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">,</span>\\n  document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'root'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">registerServiceWorker</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>一切都搞定了。 最后，如果要部署上线的话， 请记得用<code class=\\\"language-text\\\">yarn run build</code>打包压缩代码，然后部署<code class=\\\"language-text\\\">build</code>目录下的文件即可。</p>\\n<p>本文代码托管在<a href=\\\"https://github.com/magicly/ts-react-demo\\\">https://github.com/magicly/ts-react-demo</a> ，随意使用~</p>\\n<h1 id=\\\"refers\\\"><a href=\\\"#refers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Refers</h1>\\n<ul>\\n<li><a href=\\\"https://github.com/Microsoft/TypeScript-React-Starter\\\">https://github.com/Microsoft/TypeScript-React-Starter</a></li>\\n<li><a href=\\\"https://github.com/wmonk/create-react-app-typescript\\\">https://github.com/wmonk/create-react-app-typescript</a></li>\\n<li><a href=\\\"https://www.typescriptlang.org/docs/home.html\\\">https://www.typescriptlang.org/docs/home.html</a></li>\\n<li><a href=\\\"http://airbnb.io/enzyme/\\\">http://airbnb.io/enzyme/</a></li>\\n</ul>\",\"timeToRead\":9,\"excerpt\":\"Javascript作为一门动态语言， 简单易学，容易上手，非常适合web开发（浏览器也只支持JS啊）。但是随着项目逐渐变大，动态语言的弊端慢慢显露出来，比如没有编译器检查，代码质量不容易保证，IDE支持有限， 不便于重构等等， 而且JS设计之初比较仓促遗留了很多问题，好在ES…\",\"fields\":{\"slug\":\"/ts-react-starter/\"},\"frontmatter\":{\"title\":\"TypeScript React入门\",\"date\":\"2018-02-24\",\"category\":\"FE\",\"tags\":[\"typescript\",\"ts\",\"react\"]}}}]}},\"pathContext\":{\"current\":2,\"skip\":10,\"total\":6}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/page-2.json\n// module id = 631\n// module chunks = 135728916539164"],"sourceRoot":""}
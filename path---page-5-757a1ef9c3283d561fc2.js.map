{"version":3,"sources":["webpack:///path---page-5-757a1ef9c3283d561fc2.js","webpack:///./.cache/json/page-5.json"],"names":["webpackJsonp","634","module","exports","data","site","siteMetadata","title","allMarkdownRemark","edges","node","html","timeToRead","excerpt","fields","slug","frontmatter","date","category","tags","pathContext","current","skip","total"],"mappings":"AAAAA,cAAc,gBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,mBAA0BC,mBAAsBC,QAAUC,MAAQC,KAAA,+lvBAAkoqBC,WAAA,EAAAC,QAAA,gJAAAC,QAA63GC,KAAA,2BAAiCC,aAAgBT,MAAA,qBAAAU,KAAA,aAAAC,SAAA,KAAAC,MAAA,yCAAkHT,MAAQC,KAAA;AAA60RC,WAAA,EAAAC,QAAA,uHAAAC,QAAo3DC,KAAA,mBAAyBC,aAAgBT,MAAA,oBAAAU,KAAA,aAAAC,SAAA,KAAAC,MAAA,YAAoFT,MAAQC,KAAA,4xFAAAC,WAAA,EAAAC,QAAA,IAAAC,QAAw3FC,KAAA,gBAAsBC,aAAgBT,MAAA,SAAAU,KAAA,aAAAC,SAAA,KAAAC,MAAA,yDAAsHT,MAAQC,KAAA,umaAAu3XC,WAAA,EAAAC,QAAA,sHAAAC,QAA01DC,KAAA,kBAAwBC,aAAgBT,MAAA,eAAAU,KAAA,aAAAC,SAAA,KAAAC,MAAA,2CAA8GT,MAAQC,KAAA;AAAq5iDC,WAAA,EAAAC,QAAA,qIAAAC,QAAoSC,KAAA,uCAA6CC,aAAgBT,MAAA,sCAAAU,KAAA,aAAAC,SAAA,KAAAC,MAAA,aAAuGT,MAAQC,KAAA,gUAA4RC,WAAA,EAAAC,QAAA,sIAAAC,QAAsNC,KAAA,2CAAiDC,aAAgBT,MAAA,+BAAAU,KAAA,aAAAC,SAAA,UAAAC,MAAA,8BAAsHT,MAAQC,KAAA,yLAAAC,WAAA,EAAAC,QAAA,6FAAAC,QAAkUC,KAAA,2BAAiCC,aAAgBT,MAAA,iBAAAU,KAAA,aAAAC,SAAA,KAAAC,MAAA,6BAAkGT,MAAQC,KAAA,qqSAA8vDC,WAAA,EAAAC,QAAA,mIAAAC,QAAotPC,KAAA,iCAAuCC,aAAgBT,MAAA,sBAAAU,KAAA,aAAAC,SAAA,SAAAC,MAAA,yBAAuGT,MAAQC,KAAA,uxPAAAC,WAAA,EAAAC,QAAA,wIAAAC,QAAqtQC,KAAA,wBAA8BC,aAAgBT,MAAA,iBAAAU,KAAA,aAAAC,SAAA,UAAAC,MAAA,mCAA6GT,MAAQC,KAAA,mmUAA2rRC,WAAA,EAAAC,QAAA,yIAAAC,QAA+/DC,KAAA,gBAAsBC,aAAgBT,MAAA,WAAAU,KAAA,aAAAC,SAAA,OAAAC,MAAA,kDAAkHC,aAAgBC,QAAA,EAAAC,KAAA,GAAAC,MAAA","file":"path---page-5-757a1ef9c3283d561fc2.js","sourcesContent":["webpackJsonp([10891958300999],{\n\n/***/ 634:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Magicly's Blog\"}},\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"html\":\"<p>最近需要做一些自然语言处理的工作， 发现google推出的wrod2vec比较有意思，据说可以推算出king + man - woman = queue，感觉很nb啊， 后续可以拿来做文本分类、情绪分析、关键词提取等。本文记录一下在中文wiki语料库上做的实验。</p>\\n<!-- more -->\\n<h1 id=\\\"word2vec下载安装\\\"><a href=\\\"#word2vec%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>word2vec下载安装</h1>\\n<p>自从google推出了<a href=\\\"https://code.google.com/archive/p/word2vec/\\\">word2vec</a>后，网上已经有众多实现，包括：</p>\\n<ul>\\n<li><a href=\\\"https://code.google.com/archive/p/word2vec/\\\">google发布的c++版本</a></li>\\n<li>python版<a href=\\\"https://radimrehurek.com/gensim/models/word2vec.html\\\">Gensim</a></li>\\n<li>java版<a href=\\\"https://deeplearning4j.org/word2vec\\\">DeepLearning4J</a></li>\\n<li><a href=\\\"https://github.com/danielfrg/word2vec\\\">Python interface to Google word2vec</a>。</li>\\n</ul>\\n<p>我选用Gensim版本，python3.5.2。</p>\\n<h1 id=\\\"数据集简介\\\"><a href=\\\"#%E6%95%B0%E6%8D%AE%E9%9B%86%E7%AE%80%E4%BB%8B\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>数据集简介</h1>\\n<p>我们用的是中文wiki语料库，下载链接<a href=\\\"https://dumps.wikimedia.org/zhwiki/latest/zhwiki-latest-pages-articles.xml.bz2%EF%BC%8C%E6%9C%891.3G%EF%BC%8C\\\">https://dumps.wikimedia.org/zhwiki/latest/zhwiki-latest-pages-articles.xml.bz2，有1.3G，</a> 解压之后是一个5.7G左右的xml文档。里面包含了标题、分类、正文部分等。</p>\\n<h1 id=\\\"数据预处理\\\"><a href=\\\"#%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>数据预处理</h1>\\n<p>上一步解压之后的xml文档我们没法直接用， 需要经过一系列的处理， 包括xml标签去除， 编码转换、简繁体转换、分词等。</p>\\n<h2 id=\\\"xml内容提取\\\"><a href=\\\"#xml%E5%86%85%E5%AE%B9%E6%8F%90%E5%8F%96\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>xml内容提取</h2>\\n<p>你可以自己写正则表达式提取内容， 当然这个太费事了。 好在已经有人做了这个事情， Gensim里自带了提取wiki内容的工具，代码如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">from</span> gensim<span class=\\\"token punctuation\\\">.</span>corpora <span class=\\\"token keyword\\\">import</span> WikiCorpus\\n\\nspace <span class=\\\"token operator\\\">=</span> b<span class=\\\"token string\\\">\\\" \\\"</span>\\ni <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span>\\noutput <span class=\\\"token operator\\\">=</span> <span class=\\\"token builtin\\\">open</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'wiki-zh-article.txt'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'wb'</span><span class=\\\"token punctuation\\\">)</span>\\nwiki <span class=\\\"token operator\\\">=</span> WikiCorpus<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'zhwiki-latest-pages-articles.xml.bz2'</span><span class=\\\"token punctuation\\\">,</span> lemmatize <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">False</span><span class=\\\"token punctuation\\\">,</span> dictionary <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">for</span> text <span class=\\\"token keyword\\\">in</span> wiki<span class=\\\"token punctuation\\\">.</span>get_texts<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    output<span class=\\\"token punctuation\\\">.</span>write<span class=\\\"token punctuation\\\">(</span>space<span class=\\\"token punctuation\\\">.</span>join<span class=\\\"token punctuation\\\">(</span>text<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> b<span class=\\\"token string\\\">\\\"\\\\n\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n    i <span class=\\\"token operator\\\">=</span> i <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>i <span class=\\\"token operator\\\">%</span> <span class=\\\"token number\\\">10000</span> <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Saved \\\"</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token builtin\\\">str</span><span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\" articles\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n\\noutput<span class=\\\"token punctuation\\\">.</span>close<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Finished Saved \\\"</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token builtin\\\">str</span><span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\" articles\\\"</span><span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\\n<p>代码在我的macpro上大概了运行了20多分钟， 得到280819行的文本， 每行为一篇文章。有个坑大家要小心， 输入文件是压缩文件bz2，直接传解压缩之后的xml文件是会报错的。</p>\\n<p>另外， 我为了简洁，把不相关代码删除了，因此贴出来的代码，并不符合编程的最佳实践，请自行忽略这个问题。</p>\\n<h2 id=\\\"简繁体换过\\\"><a href=\\\"#%E7%AE%80%E7%B9%81%E4%BD%93%E6%8D%A2%E8%BF%87\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>简繁体换过</h2>\\n<p>由于wiki语料库里简体、繁体都有，不统一的话对后面分词和跑模型准确率有影响， 所以先统一转化为简体。用到的工具是<a href=\\\"https://github.com/BYVoid/OpenCC\\\">opencc</a>。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">opencc -i wiki-zh-article.txt -o wiki-zh-article-zhs.txt -c t2s.json</code></pre>\\n      </div>\\n<p>话说作者BYVoid也是超级大神， 据说小时候玩电脑，出现乱码， 于是自己写了opencc，然后提交给Linus， 被整合到linux kernel里了，那时候应该是小学还是初中吧。后来本科毕业去阿里面试，得到青睐，晚上流传了当时的面试记录。<img src=\\\"http://s12.sinaimg.cn/orignal/001OxbOzzy6EHEbsLWP8b\\\" alt=\\\"http://s12.sinaimg.cn/orignal/001OxbOzzy6EHEbsLWP8b\\\"></p>\\n<h2 id=\\\"编码转化\\\"><a href=\\\"#%E7%BC%96%E7%A0%81%E8%BD%AC%E5%8C%96\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>编码转化</h2>\\n<p>网上说文件中包含非utf-8字符，需要用iconv处理一下。我忘了我之前在全量数据上跑得时候有没有遇到， 反正写文章的时候，我拿了1/10的数据跑没遇到问题。如果遇到了可以用<a href=\\\"https://zh.wikipedia.org/wiki/Iconv\\\">iconv</a>一行命令解决：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">iconv -c -t utf-8 &lt; wiki-zh-article-zhs.txt &gt; wiki-zh-article-zhs-utf8.txt</code></pre>\\n      </div>\\n<h2 id=\\\"分词\\\"><a href=\\\"#%E5%88%86%E8%AF%8D\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>分词</h2>\\n<p>接下来就是做分词，比较好用的工具有<a href=\\\"https://github.com/fxsjy/jieba\\\">结巴分词</a>、<a href=\\\"http://ictclas.nlpir.org/\\\">中科院的ICTCLAS</a>、<a href=\\\"http://thulac.thunlp.org/\\\">清华的THULAC</a>、<a href=\\\"https://github.com/FudanNLP/fnlp\\\">复旦的FudanNLP</a>等。我选用了结巴，代码如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">import</span> codecs\\n<span class=\\\"token keyword\\\">import</span> jieba\\n\\ninfile <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'wiki-zh-article-zhs.txt'</span>\\noutfile <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'wiki-zh-words.txt'</span>\\n\\ndescsFile <span class=\\\"token operator\\\">=</span> codecs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token builtin\\\">open</span><span class=\\\"token punctuation\\\">(</span>infile<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'rb'</span><span class=\\\"token punctuation\\\">,</span> encoding<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">'utf-8'</span><span class=\\\"token punctuation\\\">)</span>\\ni <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span>\\n<span class=\\\"token keyword\\\">with</span> <span class=\\\"token builtin\\\">open</span><span class=\\\"token punctuation\\\">(</span>outfile<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'w'</span><span class=\\\"token punctuation\\\">,</span> encoding<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">'utf-8'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> f<span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token keyword\\\">for</span> line <span class=\\\"token keyword\\\">in</span> descsFile<span class=\\\"token punctuation\\\">:</span>\\n        i <span class=\\\"token operator\\\">+=</span> <span class=\\\"token number\\\">1</span>\\n        <span class=\\\"token keyword\\\">if</span> i <span class=\\\"token operator\\\">%</span> <span class=\\\"token number\\\">10000</span> <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">)</span>\\n        line <span class=\\\"token operator\\\">=</span> line<span class=\\\"token punctuation\\\">.</span>strip<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n        words <span class=\\\"token operator\\\">=</span> jieba<span class=\\\"token punctuation\\\">.</span>cut<span class=\\\"token punctuation\\\">(</span>line<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token keyword\\\">for</span> word <span class=\\\"token keyword\\\">in</span> words<span class=\\\"token punctuation\\\">:</span>\\n            f<span class=\\\"token punctuation\\\">.</span>write<span class=\\\"token punctuation\\\">(</span>word <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">' '</span><span class=\\\"token punctuation\\\">)</span>\\n        f<span class=\\\"token punctuation\\\">.</span>write<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'\\\\n'</span><span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\\n<p>又跑几十分钟， 喝杯茶去。。。</p>\\n<h1 id=\\\"gensim跑模型训练\\\"><a href=\\\"#gensim%E8%B7%91%E6%A8%A1%E5%9E%8B%E8%AE%AD%E7%BB%83\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Gensim跑模型训练</h1>\\n<p>终于可以跑模型了，这次时间会更长，看你的电脑配置了，强烈建议约个妹纸出去看看电影逛逛街再回来等。据同事说，gensim有一个坑，在windows下不能用多核？！！！于是我在我的8核macpro下跑一个多小时的，他在windows下要跑七八个小时，哈哈哈哈。。。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">import</span> multiprocessing\\n\\n<span class=\\\"token keyword\\\">from</span> gensim<span class=\\\"token punctuation\\\">.</span>models <span class=\\\"token keyword\\\">import</span> Word2Vec\\n<span class=\\\"token keyword\\\">from</span> gensim<span class=\\\"token punctuation\\\">.</span>models<span class=\\\"token punctuation\\\">.</span>word2vec <span class=\\\"token keyword\\\">import</span> LineSentence\\n\\ninp <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'wiki-zh-words.txt'</span>\\noutp1 <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'wiki-zh-model'</span>\\noutp2 <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'wiki-zh-vector'</span>\\n\\nmodel <span class=\\\"token operator\\\">=</span> Word2Vec<span class=\\\"token punctuation\\\">(</span>LineSentence<span class=\\\"token punctuation\\\">(</span>inp<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> size <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">400</span><span class=\\\"token punctuation\\\">,</span> window <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span> min_count <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span> workers <span class=\\\"token operator\\\">=</span> multiprocessing<span class=\\\"token punctuation\\\">.</span>cpu_count<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n\\nmodel<span class=\\\"token punctuation\\\">.</span>save<span class=\\\"token punctuation\\\">(</span>outp1<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">## 以二进制格式存储</span>\\nmodel<span class=\\\"token punctuation\\\">.</span>save_word2vec_format<span class=\\\"token punctuation\\\">(</span>outp2<span class=\\\"token punctuation\\\">,</span> binary <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">False</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">## 以文本格式存储， 一行是一个词的vector</span></code></pre>\\n      </div>\\n<p>这里用save<em>word2vec</em>format纯粹是为了看看输出的模型是什么样子的， 这样：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">台湾 0.396402 1.611405 -0.291840 -0.951169 -0.109141 1.918246 0.215038 0.674539 2.335748 -0.757200 -0.290877 2.198100 -0.309420 0.438734 -1.731025 -0.233053 0.150694 2.214514 ......</code></pre>\\n      </div>\\n<p>即每个词一行， 后面是400个数字， 即将每一个词变为一个400维的向量。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">size is the dimensionality of the feature vectors.</code></pre>\\n      </div>\\n<h1 id=\\\"看看效果\\\"><a href=\\\"#%E7%9C%8B%E7%9C%8B%E6%95%88%E6%9E%9C\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>看看效果</h1>\\n<p>看看跟杜甫相关的词呢：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">from</span> gensim<span class=\\\"token punctuation\\\">.</span>models <span class=\\\"token keyword\\\">import</span> Word2Vec\\n\\nmodel <span class=\\\"token operator\\\">=</span> Word2Vec<span class=\\\"token punctuation\\\">.</span>load<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./wiki-zh-model'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\"># model = Word2Vec.load_word2vec_format('./wiki-zh-vector', binary = False) # 如果之前用文本保存话， 用这个方法加载</span>\\nres <span class=\\\"token operator\\\">=</span> model<span class=\\\"token punctuation\\\">.</span>most_similar<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'杜甫'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span>res<span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">[(&#39;白居易&#39;, 0.8842014074325562), (&#39;苏轼&#39;, 0.8444569706916809), (&#39;陆游&#39;, 0.8307716846466064), (&#39;一诗&#39;, 0.8290032148361206), (&#39;韩愈&#39;, 0.8263246417045593), (&#39;王勃&#39;, 0.8244832754135132), (&#39;陶渊明&#39;, 0.8243700861930847), (&#39;赋诗&#39;, 0.8211008906364441), (&#39;吟咏&#39;, 0.82026606798172), (&#39;辛弃疾&#39;, 0.8185226917266846)]</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">&gt;&gt;&gt; model.most_similar(&#39;语言学&#39;)\\n[(&#39;语言学家&#39;, 0.7147563695907593), (&#39;民族学&#39;, 0.6887255907058716), (&#39;历史学&#39;, 0.6869072914123535), (&#39;比较语言学&#39;, 0.6818138360977173), (&#39;语音学&#39;, 0.6741021871566772), (&#39;音韵学&#39;, 0.6673719882965088), (&#39;语言所&#39;, 0.6434118747711182), (&#39;比较文学&#39;, 0.633540153503418), (&#39;人类学&#39;, 0.633027195930481), (&#39;方言学&#39;, 0.6314626336097717)]\\n&gt;&gt;&gt; model.most_similar(&#39;林丹&#39;)\\n[(&#39;谌龙&#39;, 0.9071081280708313), (&#39;鲍春来&#39;, 0.9035789966583252), (&#39;傅海峰&#39;, 0.8911731243133545), (&#39;蔡赟&#39;, 0.8886306285858154), (&#39;汪鑫&#39;, 0.8803133964538574), (&#39;李宗伟&#39;, 0.8767721652984619), (&#39;谢杏芳&#39;, 0.8706355690956116), (&#39;周蜜&#39;, 0.865954577922821), (&#39;李雪芮&#39;, 0.8658450841903687), (&#39;赵芸蕾&#39;, 0.8650676012039185)]\\n&gt;&gt;&gt; model.most_similar(&#39;习近平&#39;)\\n[(&#39;胡锦涛&#39;, 0.8577725291252136), (&#39;江泽民&#39;, 0.8138135075569153), (&#39;赵紫阳&#39;, 0.7295876741409302), (&#39;温家宝&#39;, 0.7284029722213745), (&#39;朱镕基&#39;, 0.7241271734237671), (&#39;邓小平&#39;, 0.7226930856704712), (&#39;李克强&#39;, 0.7181681990623474), (&#39;曾庆红&#39;, 0.6949223279953003), (&#39;周永康&#39;, 0.6847086548805237), (&#39;反腐&#39;, 0.681549072265625)]\\n&gt;&gt;&gt; model.most_similar(positive=[&#39;中国&#39;, &#39;东京&#39;], negative=[&#39;日本&#39;])\\n[(&#39;北京&#39;, 0.35159438848495483), (&#39;中央电视台&#39;, 0.3406861424446106), (&#39;辽艺版&#39;, 0.3394508361816406), (&#39;宗藤&#39;, 0.32839435338974), (&#39;寻奇&#39;, 0.3166041970252991), (&#39;china&#39;, 0.3111165761947632), (&#39;是冈瓦&#39;, 0.3110591471195221), (&#39;北京电视台&#39;, 0.31081947684288025), (&#39;女热&#39;, 0.30060601234436035), (&#39;北京市&#39;, 0.29704713821411133)]\\n&gt;&gt;&gt; model.most_similar(&#39;林志玲&#39;)\\n[(&#39;伊能静&#39;, 0.7900516986846924), (&#39;柯震东&#39;, 0.787365198135376), (&#39;言承旭&#39;, 0.7779808044433594), (&#39;徐熙媛&#39;, 0.7775079607963562), (&#39;林志颖&#39;, 0.7681171894073486), (&#39;谢依霖&#39;, 0.7657250761985779), (&#39;阮经天&#39;, 0.7654315233230591), (&#39;郭书瑶&#39;, 0.7628788948059082), (&#39;张钧宁&#39;, 0.7612718939781189), (&#39;何润东&#39;, 0.7598745822906494)]</code></pre>\\n      </div>\\n<p>还有没有觉得这个可以拿来干点有意思的事情呢？比如：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">&gt;&gt;&gt; model.most_similar(&#39;苍井空&#39;)\\n[(&#39;吉泽明步&#39;, 0.7175988554954529), (&#39;反町隆史&#39;, 0.6755084991455078), (&#39;金城武&#39;, 0.6724058389663696), (&#39;柴崎幸&#39;, 0.6579034924507141), (&#39;藤原纪香&#39;, 0.656890332698822), (&#39;松隆子&#39;, 0.6524500846862793), (&#39;仓田保昭&#39;, 0.6456934809684753), (&#39;柴咲幸&#39;, 0.6456423997879028), (&#39;叶山豪&#39;, 0.6449219584465027), (&#39;濑户朝香&#39;, 0.6442539095878601)]</code></pre>\\n      </div>\\n<p>请尽情发挥想象。。。。。。。。。。。。。。。。</p>\\n<h1 id=\\\"其他\\\"><a href=\\\"#%E5%85%B6%E4%BB%96\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>其他</h1>\\n<p>列几个word2vec的用途。</p>\\n<ul>\\n<li>情感分析 <a href=\\\"http://datartisan.com/article/detail/48.html\\\">http://datartisan.com/article/detail/48.html</a></li>\\n<li>SEO <a href=\\\"https://seofangfa.com/seo-articles/word2vec.html\\\">https://seofangfa.com/seo-articles/word2vec.html</a></li>\\n</ul>\\n<p>另外，如果想深入了解word2vec的原理， 可以看最初的论文<a href=\\\"https://arxiv.org/pdf/1310.4546.pdf\\\">Distributed Representations of Words and Phrases\\nand their Compositionality</a>，以及<a href=\\\"http://techblog.youdao.com/?p=915\\\">有道的这篇分析</a>。</p>\\n<p>如果想自己动手实现word2vec的话， 可以考虑用当前最热的深度学习框架<a href=\\\"https://www.tensorflow.org/\\\">TensorFlow</a>来实现， 官网上有<a href=\\\"https://www.tensorflow.org/tutorials/word2vec\\\">详细地介绍</a>。</p>\\n<h1 id=\\\"refers\\\"><a href=\\\"#refers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Refers</h1>\\n<ul>\\n<li><a href=\\\"http://www.52nlp.cn/%E4%B8%AD%E8%8B%B1%E6%96%87%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91%E8%AF%AD%E6%96%99%E4%B8%8A%E7%9A%84word2vec%E5%AE%9E%E9%AA%8C\\\">http://www.52nlp.cn/%E4%B8%AD%E8%8B%B1%E6%96%87%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91%E8%AF%AD%E6%96%99%E4%B8%8A%E7%9A%84word2vec%E5%AE%9E%E9%AA%8C</a></li>\\n<li><a href=\\\"https://radimrehurek.com/gensim/models/word2vec.html\\\">https://radimrehurek.com/gensim/models/word2vec.html</a></li>\\n<li><a href=\\\"https://code.google.com/archive/p/word2vec/\\\">https://code.google.com/archive/p/word2vec/</a></li>\\n<li><a href=\\\"http://licstar.net/archives/262\\\">http://licstar.net/archives/262</a></li>\\n<li><a href=\\\"https://github.com/fxsjy/jieba\\\">https://github.com/fxsjy/jieba</a></li>\\n<li><a href=\\\"http://thulac.thunlp.org/\\\">http://thulac.thunlp.org/</a></li>\\n<li><a href=\\\"http://arxiv.org/pdf/1310.4546.pdf\\\">http://arxiv.org/pdf/1310.4546.pdf</a></li>\\n<li><a href=\\\"https://www.tensorflow.org/tutorials/word2vec\\\">https://www.tensorflow.org/tutorials/word2vec</a></li>\\n<li><a href=\\\"http://techblog.youdao.com/?p=915\\\">http://techblog.youdao.com/?p=915</a></li>\\n<li><a href=\\\"http://blog.csdn.net/zhaoxinfan/article/details/11069485\\\">http://blog.csdn.net/zhaoxinfan/article/details/11069485</a></li>\\n<li><a href=\\\"http://cikuapi.com/index.php\\\">http://cikuapi.com/index.php</a></li>\\n</ul>\",\"timeToRead\":6,\"excerpt\":\"最近需要做一些自然语言处理的工作， 发现google推出的wrod2vec比较有意思，据说可以推算出king + man - woman = queue，感觉很nb啊， 后续可以拿来做文本分类、情绪分析、关键词提取等。本文记录一下在中文wiki语料库上做的实验。 word2vec…\",\"fields\":{\"slug\":\"/word2vec-first-try-md/\"},\"frontmatter\":{\"title\":\"用word2vec分析中文维基语料库\",\"date\":\"2017-03-03\",\"category\":\"ML\",\"tags\":[\"machine learning\",\"nlp\",\"word2vec\"]}}},{\"node\":{\"html\":\"<p>最近准备写一下机器学习的一些学习笔记， 由于涉及到大量数学公式， 发现不把如何在markdown里写数学公式这个问题解决了会严重影响工作效率。大概而言， 主要有两种方式：</p>\\n<!-- more -->\\n<ol>\\n<li>\\n<p>用图片！\\n也就是编辑好公式，上传，然后在markdown里面引用图片链接的方式。这种方式方便直接，但是显得比较low一点。 有兴趣的可以参考这几篇文章。</p>\\n</li>\\n<li>\\n<p><a href=\\\"http://www.ruanyifeng.com/blog/2011/07/formula_online_generator.html\\\">http://www.ruanyifeng.com/blog/2011/07/formula<em>online</em>generator.html</a>\\n当然， 在某些情况下， 必须使用这种思路。 比如， 微信公众号里。 可以参考<a href=\\\"http://www.52nlp.cn/%E5%9C%A8%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E9%87%8C%E4%BD%BF%E7%94%A8latex%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F\\\">这里</a></p>\\n</li>\\n<li>\\n<p>用Mathjax插件来写LaTex公式。\\n哪怕你是用图片， 那也得写出LaTex公式啊。所以我们今天主要讲第二种方式。推荐<a href=\\\"https://webdemo.myscript.com/views/math.html\\\">这个工具</a>，可以直接在浏览器里手写公式，它会帮你转为LaTex！很好很强大。</p>\\n</li>\\n</ol>\\n<h1 id=\\\"mathjax插件\\\"><a href=\\\"#mathjax%E6%8F%92%E4%BB%B6\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>MathJax插件</h1>\\n<p>著名的Stackoverflow网站上的漂亮公式，就是使用了MathJax插件的效果。添加MathJax插件也非常简单，只需要在markdown文件中，添加MathJax CDN，如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>text/javascript<span class=\\\"token punctuation\\\">\\\"</span></span>\\n   <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\">\\n</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span></code></pre>\\n      </div>\\n<p>就可以在md文件中插入Tex格式的公式了。</p>\\n<p>行间公式的形式为</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">$$ 此处插入公式 $$</code></pre>\\n      </div>\\n<p>而行内公式的形式为</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">\\\\\\\\( 此处插入公式 \\\\\\\\)</code></pre>\\n      </div>\\n<h1 id=\\\"hexo中显示数学公式\\\"><a href=\\\"#hexo%E4%B8%AD%E6%98%BE%E7%A4%BA%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Hexo中显示数学公式</h1>\\n<p>Hexo原生不支持数学公式， 因此需要我们做一些修改。安装<a href=\\\"https://github.com/akfish/hexo-math\\\">hexo-math</a>插件：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">npm install hexo-math --save</code></pre>\\n      </div>\\n<p>在_config.yml中增加</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">plugins:\\n  hexo-math</code></pre>\\n      </div>\\n<p>完事大吉， 你现在可以写LaTex公式了， 我们来写几个看看。</p>\\n<p>这是行内公式根号2这样写: \\\\(\\\\sqrt{2}\\\\)</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">\\\\\\\\(\\\\\\\\sqrt{2}\\\\\\\\)</code></pre>\\n      </div>\\n<p>这是单独一行的公式:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">$$ a ^ 2 + b ^ 2 = c ^ 2 $$\\n$$ \\\\sqrt{2} $$\\n$$ evidence\\\\_{i}=\\\\sum \\\\_{j}W\\\\_{ij}x\\\\_{j}+b\\\\_{i} $$</code></pre>\\n      </div>\\n<p>$$ a ^ 2 + b ^ 2 = c ^ 2 $$\\n$$ \\\\sqrt{2} $$\\n$$ evidence_{i}=\\\\sum _{j}W_{ij}x_{j}+b_{i} $$\\n细心的同学会发现， 里面有很多<strong>\\\\\\\\</strong>, <strong>\\\\_</strong>之类， 原因是<strong>\\\\</strong>本身在markdown和LaTex里都有含义， 因此需要转义。但是LaTex里面， <strong>\\\\</strong>太常用了， 所以每次遇到都转义的话就很痛苦， 而且在hexo里面写的公式，复制到其他地方去就不支持了。</p>\\n<p>网上有改hexo渲染的源码的， 有换用pandoc的， 其实最简单的方式是用hexo-math里的tag。网上搜索到的很多资料都是用的{% math_block %}，我试了发现总是不对， 后来看<a href=\\\"https://github.com/akfish/hexo-math\\\">官网</a>，发现这个方法已经deprecated了， 最新的用{% math %}，如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">这是行内公式：{% math %}\\\\sqrt{2 + 3}{% endmath %}</code></pre>\\n      </div>\\n<p>显示为：这是行内公式：{% math %}\\\\sqrt{2 + 3}{% endmath %}\\n一行公式：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">$$ evidence\\\\_{i}=\\\\sum \\\\_{j}W\\\\_{ij}x\\\\_{j}+b\\\\_{i} $$\\n\\n{% math %}\\n\\\\begin{aligned}\\nevidence_{i}=\\\\sum _{j}W_{ij}x_{j}+b_{i}\\n\\\\end{aligned}\\n{% endmath %}</code></pre>\\n      </div>\\n<p>$$ evidence_{i}=\\\\sum _{j}W_{ij}x_{j}+b_{i} $$\\n{% math %}\\n\\\\begin{aligned}\\nevidence<em>{i}=\\\\sum _{j}W</em>{ij}x<em>{j}+b</em>{i}\\n\\\\end{aligned}\\n{% endmath %}\\n可以看出， 如果有需要转义的字符， 用{% math %}tag这种方式要好很多。</p>\\n<p>再来一个复杂点的公式， 这是<a href=\\\"https://www.tensorflow.org/tutorials/word2vec\\\">word2vec</a>的损失函数公式（选中公式， 右键可以查看LaTex源码）：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">{% math %}\\nJ_\\\\text{NEG} = \\\\log Q_\\\\theta(D=1 |w_t, h) +\\n  k \\\\mathop{\\\\mathbb{E}}_{\\\\tilde w \\\\sim P_\\\\text{noise}}\\n     \\\\left[ \\\\log Q_\\\\theta(D = 0 |\\\\tilde w, h) \\\\right]\\n{% endmath %}</code></pre>\\n      </div>\\n<p>{% math %}\\nJ<em>\\\\text{NEG} = \\\\log Q</em>\\\\theta(D=1 |w<em>t, h) +\\nk \\\\mathop{\\\\mathbb{E}}</em>{\\\\tilde w \\\\sim P<em>\\\\text{noise}}\\n\\\\left[ \\\\log Q</em>\\\\theta(D = 0 |\\\\tilde w, h) \\\\right]\\n{% endmath %}</p>\\n<p>经过简单的配置， 我们的web页面已经可以支持很方便的书写数学公式了，而且由于不用特殊转义， 这里写的LaTex可以在其他markdown环境下使用， 比如<a href=\\\"http://mp.weixin.qq.com/s?__biz=MjM5NjAyNjkwMA==&#x26;mid=2723942529&#x26;idx=1&#x26;sn=3b417dd77b4d5b92231ed59649844eb9&#x26;chksm=81473ffab630b6ec843d77432c487e3e3a272ec26a5b9e0ae4007f5fce3dd826825a7b64a249&#x26;mpshare=1&#x26;scene=1&#x26;srcid=0301zj3JKl85H692JGwUHZzM#rd\\\">有道云笔记</a>。</p>\\n<p>============update===========</p>\\n<p>刚发现由于引用了MathJax.js， 本身又会引用其他一些js、css以及font， 会多增加差不多100k资源， 并且由于都是国外的cdn， 速度受限制（貌似还要翻墙），所以比较影响阅读体验。后续再想办法优化吧。</p>\\n<p>============update===========\\n发现next主题好看一些， 换成了next。 看到next直接<a href=\\\"http://theme-next.iissnan.com/third-party-services.html#others\\\">支持MathJax</a>的，换成了qiniu的cdn。但是next自带的math，不能支持{% math %}，发现还是需要hexo-math， 而且很奇怪的是， 发现不用在_config.yml里面写</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">plugins:\\n  hexo-math</code></pre>\\n      </div>\\n<p>居然也可以， 只要package.json里面有hexo-math就可以了。于是参考<a href=\\\"https://github.com/akfish/hexo-math\\\">hexo-math官网</a>，换成了qiniu的cdn。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">math:\\n  engine: &#39;mathjax&#39; # or &#39;katex&#39;\\n  mathjax:\\n  src: //cdn.staticfile.org/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML</code></pre>\\n      </div>\\n<p>奇怪的是，还是有一个网络请求，不知道从哪里来的。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">https://cdn.mathjax.org/mathjax/contrib/a11y/accessibility-menu.js?V=2.7.0</code></pre>\\n      </div>\\n<p>而且说的</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">Your config will be merged into default config:</code></pre>\\n      </div>\\n<p>似乎也没有。生成的代码为</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>text/x-mathjax-config<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\">\\n  MathJax<span class=\\\"token punctuation\\\">.</span>Hub<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Config</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span></code></pre>\\n      </div>\\n<p>配置目没有了？！！好在似乎没有影响使用，那就先暂时这样用着吧~~</p>\\n<h1 id=\\\"refers\\\"><a href=\\\"#refers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Refers</h1>\\n<ul>\\n<li><a href=\\\"http://jzqt.github.io/2015/06/30/Markdown%E4%B8%AD%E5%86%99%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/\\\">http://jzqt.github.io/2015/06/30/Markdown%E4%B8%AD%E5%86%99%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</a></li>\\n<li><a href=\\\"https://www.zybuluo.com/codeep/note/163962\\\">https://www.zybuluo.com/codeep/note/163962</a></li>\\n<li><a href=\\\"http://oiltang.com/2014/05/04/markdown-and-mathjax/\\\">http://oiltang.com/2014/05/04/markdown-and-mathjax/</a></li>\\n<li><a href=\\\"http://www.jeyzhang.com/how-to-insert-equations-in-markdown.html\\\">http://www.jeyzhang.com/how-to-insert-equations-in-markdown.html</a></li>\\n<li><a href=\\\"http://www.52nlp.cn/%E5%9C%A8%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E9%87%8C%E4%BD%BF%E7%94%A8latex%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F\\\">http://www.52nlp.cn/%E5%9C%A8%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E9%87%8C%E4%BD%BF%E7%94%A8latex%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F</a></li>\\n<li><a href=\\\"https://github.com/mathjax/MathJax-node\\\">https://github.com/mathjax/MathJax-node</a></li>\\n</ul>\",\"timeToRead\":5,\"excerpt\":\"最近准备写一下机器学习的一些学习笔记， 由于涉及到大量数学公式， 发现不把如何在markdown里写数学公式这个问题解决了会严重影响工作效率。大概而言， 主要有两种方式： 用图片！\\n也就是编辑好公式，上传，然后在markdown…\",\"fields\":{\"slug\":\"/markdown-math/\"},\"frontmatter\":{\"title\":\"在markdown里如何写数学公式\",\"date\":\"2017-03-02\",\"category\":\"ML\",\"tags\":[\"math\"]}}},{\"node\":{\"html\":\"<p>机器学习已经影响了我们生活中的每一个地方， 了解一些机器学习知识， 便于提高竞争力， 避免被机器替代。\\n下面是我参考咨询了很多大牛之后搜集整理的一些学习资料， 基本都是该领域世界最顶尖的高手亲自授课，以及一些最流行的工具库， 值得学习。</p>\\n<!-- more -->\\n<ul>\\n<li>台湾大学李宏毅老师的机器学习和深度学习课程，<a href=\\\"http://speech.ee.ntu.edu.tw/~tlkagk/courses.html%EF%BC%8C\\\">http://speech.ee.ntu.edu.tw/~tlkagk/courses.html，</a> bilibili上有视频：<a href=\\\"https://www.bilibili.com/video/av10590361/\\\">https://www.bilibili.com/video/av10590361/</a> , <a href=\\\"https://www.bilibili.com/video/av9770302/\\\">https://www.bilibili.com/video/av9770302/</a> 。 另外有个很好的pdf可以快速了解机器学习内容：<a href=\\\"https://www.slideshare.net/tw_dsconf/ss-62245351\\\">https://www.slideshare.net/tw_dsconf/ss-62245351</a> </li>\\n<li>Fast.ai课程，<a href=\\\"http://course.fast.ai/\\\">http://course.fast.ai/</a> ， 中文版<a href=\\\"http://geek.ai100.com.cn/tag/fast-ai\\\">http://geek.ai100.com.cn/tag/fast-ai</a> ，已完成，这个是我目前觉得最好的课程。</li>\\n<li>Andrew NG <a href=\\\"https://www.coursera.org/learn/machine-learning\\\">https://www.coursera.org/learn/machine-learning</a> （已完成）</li>\\n<li>Andrew NG Unsupervised Feature Learning and Deep Learning <a href=\\\"http://deeplearning.stanford.edu/tutorial/\\\">http://deeplearning.stanford.edu/tutorial/</a> （学习ing）</li>\\n<li><a href=\\\"http://neuralnetworksanddeeplearning.com/\\\">http://neuralnetworksanddeeplearning.com/</a> （已完成）</li>\\n<li>Andrew NG, standford的机器学习课程之一， <a href=\\\"http://cs229.stanford.edu/\\\">http://cs229.stanford.edu/</a></li>\\n<li>Neural Networks for Machine Learning <a href=\\\"https://www.coursera.org/learn/neural-networks\\\">https://www.coursera.org/learn/neural-networks</a> by Geoffrey Hinton, Professor(深度学习创始人) （学习中），有点后悔， 这个课程并不是适合初学者。参考<a href=\\\"https://www.quora.com/Is-it-wise-to-learn-deep-learning-from-Hintons-course-on-Coursera\\\">这里</a></li>\\n<li>李飞飞课程<a href=\\\"http://cs231n.github.io/\\\">http://cs231n.github.io/</a></li>\\n<li>斯坦福自然语言处理 <a href=\\\"http://web.stanford.edu/class/cs224n/\\\">http://web.stanford.edu/class/cs224n/</a></li>\\n<li>Tensorflow for Deep Learning Research <a href=\\\"http://web.stanford.edu/class/cs20si/\\\">http://web.stanford.edu/class/cs20si/</a></li>\\n<li>伯克利人工智能课程 <a href=\\\"http://www-inst.eecs.berkeley.edu/~cs188/archives.html\\\">http://www-inst.eecs.berkeley.edu/~cs188/archives.html</a></li>\\n<li><a href=\\\"http://www.deeplearningbook.org/\\\">http://www.deeplearningbook.org/</a>, by Ian Goodfellow and Yoshua Bengio（深度学习四大金刚之一） and Aaron Courville</li>\\n<li>udacity深度学习课程tensorflow <a href=\\\"https://classroom.udacity.com/courses/ud730/\\\">https://classroom.udacity.com/courses/ud730/</a> （已完成）</li>\\n<li><a href=\\\"https://keras.io\\\">https://keras.io</a></li>\\n<li><a href=\\\"https://scikit-learn.org\\\">https://scikit-learn.org</a></li>\\n<li><a href=\\\"https://www.tensorflow.org\\\">https://www.tensorflow.org</a></li>\\n<li><a href=\\\"http://deeplearning.net/\\\">http://deeplearning.net/</a></li>\\n<li><a href=\\\"https://www.kaggle.com\\\">https://www.kaggle.com</a></li>\\n</ul>\",\"timeToRead\":2,\"excerpt\":\"…\",\"fields\":{\"slug\":\"/ml-content/\"},\"frontmatter\":{\"title\":\"机器学习计划\",\"date\":\"2017-02-12\",\"category\":\"ML\",\"tags\":[\"AI\",\"ML\",\"machine learning\",\"deep learning\",\"深度学习\"]}}},{\"node\":{\"html\":\"<h1 id=\\\"什么是贝塞尔曲线\\\"><a href=\\\"#%E4%BB%80%E4%B9%88%E6%98%AF%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>什么是贝塞尔曲线</h1>\\n<p>最近做一个动画效果时需要将物体做曲线移动， 本来记得css3里的动画是可以指定beizer curve的， 结果用的时候发现css3的beizer curve只用来做easing timing function。简单来说就是拿来控制动画“非线性”移动，比如越来越快（ease-in）， 越来越慢（ease-out），先慢后快再慢（ease-in-out）等， 让动画效果更“灵动”， 避免线性（linear）的死板。</p>\\n<p>可以看看这两个页面， 有一个直观的感受。</p>\\n<!-- more -->\\n<ul>\\n<li><a href=\\\"http://cubic-bezier.com/\\\">http://cubic-bezier.com/</a></li>\\n<li><a href=\\\"http://easings.net/zh-cn\\\">http://easings.net/zh-cn</a></li>\\n</ul>\\n<p>beizer curve在css3中的使用， 可以自己google一下， 或者看下：</p>\\n<ul>\\n<li><a href=\\\"http://www.w3school.com.cn/css3/css3_transition.asp\\\">http://www.w3school.com.cn/css3/css3_transition.asp</a></li>\\n<li><a href=\\\"http://www.ruanyifeng.com/blog/2014/02/css_transition_and_animation.html\\\">http://www.ruanyifeng.com/blog/2014/02/css<em>transition</em>and_animation.html</a></li>\\n</ul>\\n<p>引用wiki上的介绍：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">    在数学的数值分析领域中，贝塞尔曲线（英语：Bézier curve）是计算机图形学中相当重要的参数曲线。更高维度的广泛化贝塞尔曲线就称作贝塞尔曲面，其中贝塞尔三角是一种特殊的实例。\\n    贝塞尔曲线于1962年，由法国工程师皮埃尔·贝塞尔（Pierre Bézier）所广泛发表，他运用贝塞尔曲线来为汽车的主体进行设计。贝塞尔曲线最初由Paul de Casteljau于1959年运用de Casteljau算法开发，以稳定数值的方法求出贝塞尔曲线。</code></pre>\\n      </div>\\n<p>有数学功底或者有兴趣的可以参考下面几篇文章， 我就不赘述了（最讨厌那种什么都要copy过来，弄得好像跟是自己写的样， 别人已经写得很清楚了， 干嘛再重复劳动一遍呢， 又没有自己的新的见解，赠人链接， 手留余香。 😁哈）。</p>\\n<ul>\\n<li><a href=\\\"https://en.wikipedia.org/wiki/B%C3%A9zier_curve\\\">https://en.wikipedia.org/wiki/B%C3%A9zier_curve</a></li>\\n<li><a href=\\\"https://zh.wikipedia.org/wiki/%E8%B2%9D%E8%8C%B2%E6%9B%B2%E7%B7%9A\\\">https://zh.wikipedia.org/wiki/%E8%B2%9D%E8%8C%B2%E6%9B%B2%E7%B7%9A</a></li>\\n<li><a href=\\\"http://www.html-js.com/article/1628\\\">http://www.html-js.com/article/1628</a></li>\\n<li><a href=\\\"http://www.cnblogs.com/hnfxs/p/3148483.html\\\">http://www.cnblogs.com/hnfxs/p/3148483.html</a></li>\\n<li></li>\\n</ul>\\n<h1 id=\\\"在线工具\\\"><a href=\\\"#%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>在线工具</h1>\\n<p>下面是几个比较有用的工具， 方便大家。</p>\\n<ul>\\n<li><a href=\\\"http://blogs.sitepointstatic.com/examples/tech/canvas-curves/quadratic-curve.html\\\">http://blogs.sitepointstatic.com/examples/tech/canvas-curves/quadratic-curve.html</a></li>\\n<li><a href=\\\"http://myst729.github.io/bezier-curve/\\\">http://myst729.github.io/bezier-curve/</a></li>\\n<li><a href=\\\"http://xuanfengge.com/easeing/ceaser/\\\">http://xuanfengge.com/easeing/ceaser/</a></li>\\n<li><a href=\\\"http://yisibl.github.io/cubic-bezier/#.17,.67,.83,.67\\\">http://yisibl.github.io/cubic-bezier/#.17,.67,.83,.67</a></li>\\n<li><a href=\\\"http://cubic-bezier.com/#.17,.67,.83,.67\\\">http://cubic-bezier.com/#.17,.67,.83,.67</a></li>\\n</ul>\\n<h1 id=\\\"实现\\\"><a href=\\\"#%E5%AE%9E%E7%8E%B0\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>实现</h1>\\n<p>前面资料都是把bezier curve拿来当timing function的， 而我的需求是要让物体（某个dom节点）沿着某条beizer curve移动，于是继续google， 找到了几个。</p>\\n<ul>\\n<li>Android实现: <a href=\\\"https://github.com/Yasic/QQBubbleView\\\">https://github.com/Yasic/QQBubbleView</a></li>\\n</ul>\\n<p>Android的我用不到， 放这里主要是里面的gif图很直观，哈哈。</p>\\n<ul>\\n<li>CSS实现：<a href=\\\"http://jinlong.github.io/2016/01/14/moving-along-a-curved-path-in-css-with-layered-animation/%EF%BC%8C\\\">http://jinlong.github.io/2016/01/14/moving-along-a-curved-path-in-css-with-layered-animation/，</a> 原文：<a href=\\\"http://tobiasahlin.com/blog/curved-path-animations-in-css/\\\">http://tobiasahlin.com/blog/curved-path-animations-in-css/</a></li>\\n</ul>\\n<p>CSS的实现真是相当tricky， 我解释一下。CSS里面的animation translate是直接按照直线移动到目的地的， 这是因为沿X轴和Y轴都是匀速运动（linear），所以合成之后的速度必然是斜角45°移动过去的。我们可以把X轴看成时间轴， 这时如果Y轴的移动函数是某个beizer curve，那合成之后的移动曲线就是beizer curve了。具体实现的时候还用到了:after伪元素了。</p>\\n<p>复杂一点的我觉得还是需要用js去控制， 于是自然想到了用js代码去按照beizer curve公式实现。</p>\\n<ul>\\n<li>JS实现： <a href=\\\"http://blog.csdn.net/cuixiping/article/details/6872095\\\">http://blog.csdn.net/cuixiping/article/details/6872095</a></li>\\n</ul>\\n<p>这个用的公式不直观，应该是进行了变换之后的， 我直接照着公式写了一个。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"gatsby-highlight-code-line\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">PointOnCubicBezier2</span><span class=\\\"token punctuation\\\">(</span>cp<span class=\\\"token punctuation\\\">,</span> t<span class=\\\"token punctuation\\\">)</span>  <span class=\\\"token punctuation\\\">{</span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">   <span class=\\\"token comment\\\">// B(t) = P0 * (1-t)^3 + 3 * P1 * t * (1-t)^2 + 3 * P2 * t^2 * (1-t) + P3 * t^3</span>\\n</span>        <span class=\\\"token keyword\\\">const</span> one_t <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1.0</span> <span class=\\\"token operator\\\">-</span> t<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">P0</span> <span class=\\\"token operator\\\">=</span> cp<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">P1</span> <span class=\\\"token operator\\\">=</span> cp<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">P2</span> <span class=\\\"token operator\\\">=</span> cp<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">P3</span> <span class=\\\"token operator\\\">=</span> cp<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> x <span class=\\\"token operator\\\">=</span>  <span class=\\\"token punctuation\\\">(</span><span class=\\\"token constant\\\">P0</span><span class=\\\"token punctuation\\\">.</span>x <span class=\\\"token operator\\\">*</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pow</span><span class=\\\"token punctuation\\\">(</span>one_t<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">3</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token constant\\\">P1</span><span class=\\\"token punctuation\\\">.</span>x <span class=\\\"token operator\\\">*</span> t <span class=\\\"token operator\\\">*</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pow</span><span class=\\\"token punctuation\\\">(</span>one_t<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">3</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token constant\\\">P2</span><span class=\\\"token punctuation\\\">.</span>x <span class=\\\"token operator\\\">*</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pow</span><span class=\\\"token punctuation\\\">(</span>t<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">*</span> one_t <span class=\\\"token operator\\\">+</span> <span class=\\\"token constant\\\">P3</span><span class=\\\"token punctuation\\\">.</span>x <span class=\\\"token operator\\\">*</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pow</span><span class=\\\"token punctuation\\\">(</span>t<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> y <span class=\\\"token operator\\\">=</span>  <span class=\\\"token punctuation\\\">(</span><span class=\\\"token constant\\\">P0</span><span class=\\\"token punctuation\\\">.</span>y <span class=\\\"token operator\\\">*</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pow</span><span class=\\\"token punctuation\\\">(</span>one_t<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">3</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token constant\\\">P1</span><span class=\\\"token punctuation\\\">.</span>y <span class=\\\"token operator\\\">*</span> t <span class=\\\"token operator\\\">*</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pow</span><span class=\\\"token punctuation\\\">(</span>one_t<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">3</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token constant\\\">P2</span><span class=\\\"token punctuation\\\">.</span>y <span class=\\\"token operator\\\">*</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pow</span><span class=\\\"token punctuation\\\">(</span>t<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">*</span> one_t <span class=\\\"token operator\\\">+</span> <span class=\\\"token constant\\\">P3</span><span class=\\\"token punctuation\\\">.</span>y <span class=\\\"token operator\\\">*</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pow</span><span class=\\\"token punctuation\\\">(</span>t<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> pointF <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Point2D</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">return</span> pointF<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>对比了一下两个函数的输出值， 完全是一样的， 应该就是数学变换而已， 我懒得去做推倒了。</p>\\n<p>后来找到一个三阶beizer curve的实现，看这里\\n<a href=\\\"https://github.com/gre/bezier-easing%EF%BC%8C\\\">https://github.com/gre/bezier-easing，</a> 这个实现可能有点NB，以至于<a href=\\\"https://facebook.github.io/react-native/\\\">React Native</a>、<a href=\\\"http://velocityjs.org/\\\">Velocity</a>等项目都使用了，屌屌的。</p>\\n<p>用<a href=\\\"https://github.com/bestiejs/benchmark.js\\\">benchmark</a>跑一下分：<a href=\\\"https://jsperf.com/beizer-curve5\\\">看这里</a>， chrome下我写的方法居然慢了94%！看样子代码可读性是要付出代价的哈。我还是老老实实用<a href=\\\"https://github.com/gre/bezier-easing%E5%90%A7%E3%80%82\\\">https://github.com/gre/bezier-easing吧。</a></p>\\n<p>刚刚又搜到一篇文章， 讲解地更细致深入， 害得我不想继续写了。 直接看这里吧。<a href=\\\"http://www.jianshu.com/p/55c721887568\\\">http://www.jianshu.com/p/55c721887568</a></p>\\n<h1 id=\\\"如何将多个点用贝塞尔曲线连起来\\\"><a href=\\\"#%E5%A6%82%E4%BD%95%E5%B0%86%E5%A4%9A%E4%B8%AA%E7%82%B9%E7%94%A8%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF%E8%BF%9E%E8%B5%B7%E6%9D%A5\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>如何将多个点用贝塞尔曲线连起来</h1>\\n<ul>\\n<li><a href=\\\"http://www.zheng-hang.com/?id=43\\\">http://www.zheng-hang.com/?id=43</a></li>\\n<li><a href=\\\"http://www.cnblogs.com/hnfxs/p/3148743.html\\\">http://www.cnblogs.com/hnfxs/p/3148743.html</a></li>\\n</ul>\",\"timeToRead\":4,\"excerpt\":\"什么是贝塞尔曲线 最近做一个动画效果时需要将物体做曲线移动， 本来记得css3里的动画是可以指定beizer curve的， 结果用的时候发现css3的beizer curve只用来做easing timing function…\",\"fields\":{\"slug\":\"/bezier-curve/\"},\"frontmatter\":{\"title\":\"bezier-curve\",\"date\":\"2016-11-29\",\"category\":\"FE\",\"tags\":[\"js\",\"css\",\"animation\",\"beizer curve\"]}}},{\"node\":{\"html\":\"<p>用了一年多的<a href=\\\"https://facebook.github.io/react/\\\">React</a>，真是爽的不要不要的， 谁用谁知道， 一般人我不告诉他！</p>\\n<p>最近用的过程中发现console里面总是出现这样的警告</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">react.js:20478 Warning: setState(...): Can only update a mounted or mounting component. This usually means you called setState() on an unmounted component. This is a no-op. Please check the code for the Small component.</code></pre>\\n      </div>\\n<p>虽不影响使用， 但是对于一个有代码洁癖的有追求的程序员来说， 怎么受得了呢！</p>\\n<p>react的error或者warning信息还是写得比较好的， 从上面我们可以看出原因是我们在一个unmounted的component上调用setState方法。分析业务代码， 发现是某个弹窗component需要从server加载数据， 有时候网络慢， 还没有加载出来用户就把弹窗关了， 所以对应的component变成了unmounted， 等到fetch请求成功之后， 再调用setState就warning了。</p>\\n<p>为了方便分析问题， 我把问题简化了， 同时为了用户直接能在浏览器打开看到效果， 而不用nodejs、npm、babel、webpack、react等一堆东西install半天， 我直接引用了react cdn上的文件。代码如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\"><span class=\\\"token doctype\\\">&lt;!DOCTYPE html></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>html</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>meta</span> <span class=\\\"token attr-name\\\">charset</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>UTF-8<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>title</span><span class=\\\"token punctuation\\\">></span></span>Hello World<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>title</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://unpkg.com/react@latest/dist/react.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://unpkg.com/react-dom@latest/dist/react-dom.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://unpkg.com/babel-standalone@6.15.0/babel.min.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">id</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>root<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>text/babel<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\">\\n\\n  <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Big</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n        small<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token function-variable function\\\">closeSmall</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'closeSmall'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> small<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>h1<span class=\\\"token operator\\\">></span>hello <span class=\\\"token keyword\\\">from</span> Big Component <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h1<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>h2 onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>closeSmall<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>close small <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h2<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>small <span class=\\\"token operator\\\">?</span> <span class=\\\"token operator\\\">&lt;</span>Small <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Small</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n        data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'init data'</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token function\\\">componentDidMount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'componentDidMount'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fetch data from server succeed...'</span><span class=\\\"token punctuation\\\">)</span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`this._isMounted: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_isMounted<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'data from server'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5000</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>h1<span class=\\\"token operator\\\">></span>hello <span class=\\\"token keyword\\\">from</span> Small Component <span class=\\\"token operator\\\">...</span>  <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h1<span class=\\\"token operator\\\">></span>\\n        data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n      ReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token operator\\\">&lt;</span>Big <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\n        document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'root'</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>html</span><span class=\\\"token punctuation\\\">></span></span></code></pre>\\n      </div>\\n<p>代码里面用setTimeout模拟了从server获取数据， 大家如果在5s内点击close small， 就可以重现这个问题。</p>\\n<p>问题的解决方法很自然地想到，如果可以在setState之前检查一下this component是否还是mounted状态就可以了。查react的文档，发现原来之前确实是有isMounted()这个方法的， 不过已经不推荐使用了， 因为<a href=\\\"https://facebook.github.io/react/blog/2015/12/16/ismounted-antipattern.html\\\">isMounted is an Antipattern</a>。</p>\\n<p>第一种解决方法就是自己模拟实现isMounted这个方法， 虽然已经被贴上Antipattern的标签， 但是有些时候用这种方法还是比较方便的。代码如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\"><span class=\\\"token doctype\\\">&lt;!DOCTYPE html></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>html</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>meta</span> <span class=\\\"token attr-name\\\">charset</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>UTF-8<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>title</span><span class=\\\"token punctuation\\\">></span></span>Hello World<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>title</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://unpkg.com/react@latest/dist/react.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://unpkg.com/react-dom@latest/dist/react-dom.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://unpkg.com/babel-standalone@6.15.0/babel.min.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">id</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>root<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>text/babel<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\">\\n\\n  <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Big</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n        small<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token function-variable function\\\">closeSmall</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'closeSmall'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> small<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>h1<span class=\\\"token operator\\\">></span>hello <span class=\\\"token keyword\\\">from</span> Big Component <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h1<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>h2 onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>closeSmall<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>close small <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h2<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>small <span class=\\\"token operator\\\">?</span> <span class=\\\"token operator\\\">&lt;</span>Small <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Small</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n        data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'init data'</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_isMounted <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token function\\\">componentDidMount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_isMounted <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'componentDidMount'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fetch data from server succeed...'</span><span class=\\\"token punctuation\\\">)</span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`this._isMounted: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_isMounted<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_isMounted<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'data from server'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5000</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token function\\\">componentWillUnmount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_isMounted <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>h1<span class=\\\"token operator\\\">></span>hello <span class=\\\"token keyword\\\">from</span> Small Component <span class=\\\"token operator\\\">...</span>  <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h1<span class=\\\"token operator\\\">></span>\\n        data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n      ReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token operator\\\">&lt;</span>Big <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\n        document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'root'</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>html</span><span class=\\\"token punctuation\\\">></span></span></code></pre>\\n      </div>\\n<p>对于callback现在已经有更好的解决方案， 伟大的<a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\\\">Promise</a>！如果这个promise能在componentWillUnmount()的时候cancel掉就完美了。可惜google之后发现官方Promise实现目前并不支持cancel！<a href=\\\"http://stackoverflow.com/questions/29478751/how-to-cancel-an-emcascript6-vanilla-javascript-promise-chain\\\">看这里</a>， 还有<a href=\\\"http://stackoverflow.com/questions/30233302/promise-is-it-possible-to-force-cancel-a-promise\\\">这里</a>，所以除非你使用第三方Promise库， 比如据说性能比原生还好的<a href=\\\"http://bluebirdjs.com/docs/api/cancellation.html\\\">Bluebird</a>。</p>\\n<p>当然有些时候没必要搞这么复杂， facebook的<a href=\\\"https://facebook.github.io/react/blog/2015/12/16/ismounted-antipattern.html\\\">文档</a>给了一个简易的cancelable的Promise。最好代码如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\"><span class=\\\"token doctype\\\">&lt;!DOCTYPE html></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>html</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>meta</span> <span class=\\\"token attr-name\\\">charset</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>UTF-8<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>title</span><span class=\\\"token punctuation\\\">></span></span>Hello World<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>title</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://unpkg.com/react@latest/dist/react.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://unpkg.com/react-dom@latest/dist/react-dom.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://unpkg.com/babel-standalone@6.15.0/babel.min.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">id</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>root<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>text/babel<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\">\\n\\n  <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Big</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n      small<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function-variable function\\\">closeSmall</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'closeSmall'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> small<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>h1<span class=\\\"token operator\\\">></span>hello <span class=\\\"token keyword\\\">from</span> Component <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h1<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>h2 onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>closeSmall<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>close small <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h2<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>small <span class=\\\"token operator\\\">?</span> <span class=\\\"token operator\\\">&lt;</span>Small <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Small</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n      data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'init data'</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">componentDidMount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'componentDidMount'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>cancelablePromise <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">makeCancelable</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fetch data from server succeed...'</span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'data from server'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5000</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>cancelablePromise\\n      <span class=\\\"token punctuation\\\">.</span>promise\\n      <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>data <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'resolved: '</span><span class=\\\"token punctuation\\\">,</span> data<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> data <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">catch</span><span class=\\\"token punctuation\\\">(</span>reason <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>reason<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">' isCanceled'</span><span class=\\\"token punctuation\\\">,</span> reason<span class=\\\"token punctuation\\\">.</span>isCanceled<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">componentWillUnmount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>cancelablePromise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">cancel</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span><span class=\\\"token comment\\\">// Cancel the promise</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>h1<span class=\\\"token operator\\\">></span>hello <span class=\\\"token keyword\\\">from</span> Small Component <span class=\\\"token operator\\\">...</span>  <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h1<span class=\\\"token operator\\\">></span>\\n      data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">makeCancelable</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>promise<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> hasCanceled_ <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> wrappedPromise <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>val<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n      hasCanceled_ <span class=\\\"token operator\\\">?</span> <span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> isCanceled<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>val<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">catch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>error<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n      hasCanceled_ <span class=\\\"token operator\\\">?</span> <span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> isCanceled<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span>error<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    promise<span class=\\\"token punctuation\\\">:</span> wrappedPromise<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token function\\\">cancel</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      hasCanceled_ <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n      ReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token operator\\\">&lt;</span>Big <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\n        document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'root'</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>html</span><span class=\\\"token punctuation\\\">></span></span></code></pre>\\n      </div>\\n<p>well, it’s ok now!</p>\",\"timeToRead\":4,\"excerpt\":\"用了一年多的 React ，真是爽的不要不要的， 谁用谁知道， 一般人我不告诉他！ 最近用的过程中发现console里面总是出现这样的警告 虽不影响使用， 但是对于一个有代码洁癖的有追求的程序员来说， 怎么受得了呢！ react的error或者warning…\",\"fields\":{\"slug\":\"/react-ismounted-is-an-antipattern/\"},\"frontmatter\":{\"title\":\"react系列之isMounted is an Antipattern\",\"date\":\"2016-11-19\",\"category\":\"FE\",\"tags\":[\"react\"]}}},{\"node\":{\"html\":\"<p><a href=\\\"http://blog.coderzh.com/2015/09/13/use-webhook-automated-deploy-hugo/?hmsr=toutiao.io&#x26;utm_medium=toutiao.io&#x26;utm_source=toutiao.io\\\">http://blog.coderzh.com/2015/09/13/use-webhook-automated-deploy-hugo/?hmsr=toutiao.io&#x26;utm<em>medium=toutiao.io&#x26;utm</em>source=toutiao.io</a></p>\\n<p>…</p>\",\"timeToRead\":1,\"excerpt\":\"http://blog.coderzh.com/2015/09/13/use-webhook-automated-deploy-hugo/?hmsr=toutiao.io&utm medium=toutiao.io&utm source=toutiao.io …\",\"fields\":{\"slug\":\"/auto-deploy-githubPages-by-webhook-md/\"},\"frontmatter\":{\"title\":\"利用webhook实现github pages的自动部署\",\"date\":\"2015-09-16\",\"category\":\"default\",\"tags\":[\"github\",\"webhook\",\"ssh\"]}}},{\"node\":{\"html\":\"<p>javascript es6 arrow function.</p>\\n<!-- more -->\\n<p>开始学习ES6.\\n<a href=\\\"https://hacks.mozilla.org/category/es6-in-depth/\\\">https://hacks.mozilla.org/category/es6-in-depth/</a></p>\",\"timeToRead\":1,\"excerpt\":\"javascript es6 arrow function. 开始学习ES6.\\n https://hacks.mozilla.org/category/es6-in-depth/\",\"fields\":{\"slug\":\"/js-arrow-functions-md/\"},\"frontmatter\":{\"title\":\"javascript箭头函数\",\"date\":\"2015-09-07\",\"category\":\"JS\",\"tags\":[\"js\",\"javascript\",\"es6\"]}}},{\"node\":{\"html\":\"<p>微信公共号现在很火，一些简单的应用，做一个公共号比开发一款app成本要小很多，而且利用朋友圈的转发，相比app去app store里上架等着用户下载，要容易很多。</p>\\n<p>但是微信公共号的调试有点不方便，必须在微信<a href=\\\"https://mp.weixin.qq.com/\\\">管理后台</a>配置一个微信能访问到（公网）的url，然后在公共号里输入内容，微信以xml格式转发给这个url，url回复之后微信再将response回复给使用公共号的微信用户。当然微信也提供了<a href=\\\"http://mp.weixin.qq.com/debug\\\">调试工具</a>， 可以直接构造数据，方便调试各个接口。 但是依然需要一个公网的url作为接口。于是最原始的开发方式就是，修改代码，上传到server，（如果是有些静态语言还需要重启服务器），然后看是否正常work，如果不行的话，在可能错误的地方打出log，然后又是修改代码，上传server，重启。。。。。就这样，每次改一点点，你都可以泡杯咖啡了，老板就会觉得你很闲。参看<a href=\\\"http://www.oschina.net/news/15579/reasons-why-people-who-work-with-computers-seem-to\\\">为什么搞计算机工作的人总是看上去很清闲</a>。</p>\\n<!-- more -->\\n<p>有没有办法可以直接在本地调试呢，简单说，就是微信把数据传到我本地的电脑上，我每次改完代码，不用重新上传server，直接在本地加log等。经过研究，找到几个方法，记录下来，与大家分享，绝对能节约很多很多很多时间，然后就可以去陪妹纸了， 如果你有的话，没有的话<a href=\\\"http://www.zhihu.com/question/20385321\\\">here</a>。</p>\\n<p>第一种方法，你本地电脑有公网ip。比如家里宽带，没用路由，直接把网线插上，应该就是公网IP，吧。 如果家里有多人使用，你可以再路由器里配置NAT地址转换。自行<a href=\\\"https://www.google.com.hk/webhp?sourceid=chrome-instant&#x26;ion=1&#x26;espv=2&#x26;ie=UTF-8#q=NAT%20%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2\\\">Google</a>吧。</p>\\n<p>第二种，也是我搜到的最多的，用ngrok这个神器！网上一堆资料，比如<a href=\\\"http://www.mbnow.tk/2014/12/05/ngrok/\\\">这个</a>，我Google到的最多的也是这个，而且看上去也应该很简单。 <a href=\\\"http://www.oray.com/\\\">花生壳</a>我10年前用过（x，不小心暴露年龄了），应该是一样的。网上说，缺点是</p>\\n<blockquote>\\n<p>不过 ngrok 速度较慢，微信服务器对实时性要求较高，每次通信超过 5 秒便超时，所以此法也不建议使用。</p>\\n</blockquote>\\n<p>我觉得用花生壳的话可能好点，因为是国内的（有兴趣的可以自己去试试哈）。没有用ngrok试一下，因为“无法显示此网页”！网上就是“骗子”多，明明没有的网站，大家都描绘的绘声绘色。</p>\\n<p>第三种，用ssh建立反向通道。对了，使用此种方法，你还是需要一个公网IP的。 作为一名专业工程师，拥有公网 ip 地址的 VPS 服务器基本成了标配，<a href=\\\"http://www.qcloud.com/redirect.php?redirect=1002&#x26;cps_key=0a3641075e434bf76a016a44d2918e4a\\\">腾讯云VPS</a> 最便宜的一款每年也就几百块钱，平时挂挂自己喜欢的服务，做个站长，跑跑自己的开源项目甚爽。</p>\\n<ol>\\n<li>申请<a href=\\\"http://www.qcloud.com/redirect.php?redirect=1001&#x26;cps_key=0a3641075e434bf76a016a44d2918e4a\\\">腾讯云</a></li>\\n<li>本地安装ssh，如果是linux或mac，都是自带的。如果是windows的话，可以安装<a href=\\\"https://www.cygwin.com/\\\">Cygwin</a>，如果你嫌弃它太重了，安装了<a href=\\\"https://git-scm.com/download/gui/win\\\">Git</a>也是可以的。如果你也不想装或者不会装Git，额，(⊙o⊙)…，好吧，那你还是不要写程序了。</li>\\n<li>\\n<p>建立ssh反向通道。\\n这一步里有很多坑，我花了差不多一天才完全搞定。你们可以先参考这几篇文章，了解下原理啥的。</p>\\n<ul>\\n<li><a href=\\\"http://blog.zjutoe.net/?p=95\\\">http://blog.zjutoe.net/?p=95</a></li>\\n<li><a href=\\\"http://my.oschina.net/abcfy2/blog/177094\\\">http://my.oschina.net/abcfy2/blog/177094</a></li>\\n<li><a href=\\\"http://www.zzbaike.com/wiki/PuTTY/Putty%E5%BB%BA%E7%AB%8B%E9%9A%A7%E9%81%93%E7%9A%84%E6%96%B9%E6%B3%95\\\">http://www.zzbaike.com/wiki/PuTTY/Putty%E5%BB%BA%E7%AB%8B%E9%9A%A7%E9%81%93%E7%9A%84%E6%96%B9%E6%B3%95</a></li>\\n<li><a href=\\\"http://www.freeoa.net/osuport/netmanage/linux-ssh-tunneling-proxy_1892.html\\\">http://www.freeoa.net/osuport/netmanage/linux-ssh-tunneling-proxy_1892.html</a></li>\\n<li><a href=\\\"https://qdan.me/list/VOSXmsI4tv7fIciF\\\">https://qdan.me/list/VOSXmsI4tv7fIciF</a></li>\\n</ul>\\n</li>\\n</ol>\\n<p>好吧，来看我的具体一步一步做法。</p>\\n<ol>\\n<li>\\n<p>ssh -R 9999:localhost:9000 ubuntu@myserver<em>ip</em>address，输入密码</p>\\n</li>\\n<li>\\n<p>server上查看一下是否监听了9999端口，netstat -anltp | grep 9999</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">ubuntu@VM-39-45-ubuntu:~$ <span class=\\\"token function\\\">netstat</span> -anltp <span class=\\\"token operator\\\">|</span> <span class=\\\"token function\\\">grep</span> 9999\\n<span class=\\\"token punctuation\\\">(</span>Not all processes could be identified, non-owned process info\\nwill not be shown, you would have to be root to see it all.<span class=\\\"token punctuation\\\">)</span>\\ntcp        0      0 127.0.0.1:9999          0.0.0.0:*               LISTEN      -\\ntcp6       0      0 ::1:9999                :::*                    LISTEN      -</code></pre>\\n      </div>\\n</li>\\n<li>\\n<p>在本地9000（我用的<a href=\\\"https://www.playframework.com/documentation/1.3.x/home\\\">play 1</a>，可以了解下它到底为啥这么好用<a href=\\\"http://segmentfault.com/a/1190000000374033\\\">Play Framework —— Java开发者的梦想框架</a>）上开启web服务</p>\\n</li>\\n<li>\\n<p>在浏览器里输入<a href=\\\"http://myserver_ip_address:9999%EF%BC%8C\\\">http://myserver<em>ip</em>address:9999，</a> 居然是没有响应！奇怪！直接在server上用curl <a href=\\\"http://localhost:9999\\\">http://localhost:9999</a> 是可以的！仔细看netstat输出，发现监听的9999端口是本地的！！！也就是说只能在本地访问，那有xx用啊！！！</p>\\n</li>\\n<li>\\n<p>看看ssh —help， 原来是可以指定bind_address的， man ssh看看</p>\\n<blockquote>\\n<p>By default, the listening socket on the server will be bound to the loopback interface only.  This may be overridden by specifying a bind<em>address. An empty bind</em>address, or the address ‘*’, indicates that the remote socket should listen on all interfaces.  Specifying a remote bind<em>address will only succeed if the server’s GatewayPorts option is enabled (see sshd</em>config(5)).</p>\\n</blockquote>\\n</li>\\n</ol>\\n<p>  继续看看 man sshd_config</p>\\n<blockquote>\\n<p>GatewayPorts\\nSpecifies whether remote hosts are allowed to connect to ports forwarded for the client.  By default, sshd(8) binds remote port forwardings to the\\nloopback address.  This prevents other remote hosts from connecting to forwarded ports.  GatewayPorts can be used to specify that sshd should allow</p>\\n</blockquote>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">remote port forwardings to bind to non-loopback addresses, thus allowing other hosts to connect.  The argument may be “no” to force remote port\\nforwardings to be available to the local host only, “yes” to force remote port forwardings to bind to the wildcard address, or “clientspecified” to\\nallow the client to select the address to which the forwarding is bound.  The default is “no”.</code></pre>\\n      </div>\\n<p> sudo vim /etc/ssh/sshd<em>config，添加GatewayPorts clientspecified，GatewayPorts yes也可以，退出，sudo service sshd restart，重启ssh服务。重新ssh -R :9999:localhost:9000 ubuntu@myserver</em>ip<em>address（仔细看，就9999前多了一个冒号:），输入密码，netstat -anltp | grep 9999，果然\\n<code class=\\\"language-text\\\">tcp        0      0 0.0.0.0:9999            0.0.0.0:*               LISTEN      -\\n\\ttcp6       0      0 :::9999                 :::*                    LISTEN      -</code>\\n浏览器里输入<a href=\\\"http://myserver\\\">http://myserver</a></em>ip_address:9999， 这回可以看到本地打出日志了。</p>\\n<ol start=\\\"6\\\">\\n<li>\\n<p>然后发现微信里面配置的url只能是80端口。简单，直接改成ssh -R :80:localhost:9000 ubuntu@myserver<em>ip</em>address就可以了，吧！奇怪，直接访问<a href=\\\"http://myserver_ip_address%EF%BC%8C\\\">http://myserver<em>ip</em>address，</a> 打不开网页！用netstat -anltp | grep 80，居然什么都没有！说明server没有在80端口监听呀！哦，对了ubuntu低于1024的端口是需要用root权限的。</p>\\n</li>\\n<li>\\n<p>ubuntu里root默认是关闭的。sudo passwd root，设置root密码后，可以打开。还需要在sudo vim /etc/ssh/sshd_config\\t添加</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">#PermitRootLogin without-password\\nPermitRootLogin yes</code></pre>\\n      </div>\\n</li>\\n<li>\\n<p>重启ssh，再重新用root账号连接，ssh -R :80:localhost:9000 root@myserver<em>ip</em>address， 一切ok，<a href=\\\"http://myserver_ip_address%EF%BC%8C\\\">http://myserver<em>ip</em>address，</a> 本地代码打出日志，说明流量已经导入到本地了。</p>\\n</li>\\n<li>\\n<p>最后，就可以在<a href=\\\"http://mp.weixin.qq.com/debug\\\">微信公众平台接口调试工具</a>里调试了，配合<a href=\\\"http://playframework.com/\\\">Play!</a>的hot reload，随时修改代码，加log，然后马上就可以看到效果，不用重新编译，不用上传server，不用重启。。。。生活真是幸福美满啊。。。。</p>\\n</li>\\n<li>\\n<p>几个问题说明：</p>\\n<ol>\\n<li>直接用ssh连接的话，断开之后端口映射就没有了，可以用autossh， 只是我就是临时需要调试用的时候才ssh建立反向隧道，所以我不用autossh。</li>\\n<li>直接用root登陆ssh，开通80端口。应该是有安全隐患的， 吧！对安全不是很了解，但感觉直接用root肯定不是最佳实践。网上有各种方法解决这个问题，比如用iptables端口映射，或者nginx反向代理的，<a href=\\\"http://stackoverflow.com/questions/23281895/node-js-eacces-error-when-listening-on-http-80-port-permission-denied\\\">看这里</a>，参看1的原因，我没有采用。还是一次focus一个点吧，不然光环境就配置几天，有点太慢了。</li>\\n</ol>\\n</li>\\n</ol>\\n<p>通过本文的配置，可以在本地方便的开发调试微信公共号了。但是对于微信提供的<a href=\\\"http://mp.weixin.qq.com/wiki/7/aaa137b55fb2e0456bf8dd9148dd613f.html\\\">JS-SDK</a>，又存在另外的问题，这个我会<a href=\\\"http://my.oschina.net/magicly007/blog/480704\\\">另外写一篇blog来解决</a>。毕竟，我们程序员应该坚持<a href=\\\"https://en.wikipedia.org/wiki/Single_responsibility_principle\\\">Single responsibility principle</a>嘛。</p>\\n<h1 id=\\\"refers\\\"><a href=\\\"#refers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Refers</h1>\\n<ol>\\n<li><a href=\\\"http://www.mbnow.tk/2014/12/05/ngrok/\\\">http://www.mbnow.tk/2014/12/05/ngrok/</a></li>\\n<li><a href=\\\"http://my.oschina.net/jfinal/blog/336861\\\">http://my.oschina.net/jfinal/blog/336861</a></li>\\n<li><a href=\\\"http://www.mbnow.tk/2014/12/05/ngrok/\\\">http://www.mbnow.tk/2014/12/05/ngrok/</a></li>\\n<li><a href=\\\"http://liyaodong.com/2015/07/06/%E5%BE%AE%E4%BF%A1%E8%B0%83%E8%AF%95%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/\\\">http://liyaodong.com/2015/07/06/%E5%BE%AE%E4%BF%A1%E8%B0%83%E8%AF%95%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/</a></li>\\n<li><a href=\\\"http://my.oschina.net/abcfy2/blog/177094\\\">http://my.oschina.net/abcfy2/blog/177094</a></li>\\n<li><a href=\\\"http://www.zhihu.com/question/25456655\\\">http://www.zhihu.com/question/25456655</a></li>\\n<li><a href=\\\"http://my.oschina.net/atanl/blog/391611\\\">http://my.oschina.net/atanl/blog/391611</a></li>\\n</ol>\\n<blockquote>\\n<p>Written with <a href=\\\"https://stackedit.io/\\\">StackEdit</a>.</p>\\n</blockquote>\",\"timeToRead\":5,\"excerpt\":\"微信公共号现在很火，一些简单的应用，做一个公共号比开发一款app成本要小很多，而且利用朋友圈的转发，相比app去app store里上架等着用户下载，要容易很多。 但是微信公共号的调试有点不方便，必须在微信 管理后台 配置一个微信能访问到（公网）的url…\",\"fields\":{\"slug\":\"/ssh-reverse-tunnel-wx-local/\"},\"frontmatter\":{\"title\":\"利用SSH反向通道在本地调试微信公共号\",\"date\":\"2015-07-26\",\"category\":\"weixin\",\"tags\":[\"ssh\",\"weixin\",\"微信\"]}}},{\"node\":{\"html\":\"<p>引用<a href=\\\"http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html\\\">阮老师</a>的话，</p>\\n<blockquote>\\n<p>喜欢写Blog的人，会经历三个阶段。</p>\\n</blockquote>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">第一阶段，刚接触Blog，觉得很新鲜，试着选择一个免费空间来写。\\n第二阶段，发现免费空间限制太多，就自己购买域名和空间，搭建独立博客。\\n第三阶段，觉得独立博客的管理太麻烦，最好在保留控制权的前提下，让别人来管，自己只负责写文章。</code></pre>\\n      </div>\\n<p>自己比较懒惰，也就偶尔在<a href=\\\"http://my.oschina.net/magicly007/blog\\\">OC</a>上写点闲散的笔记，最近觉得还是应该要把自己的知识系统地梳理一下，便决定开一个独立的域名，自己记录Blog。</p>\\n<p>之前就了解Github Pages，也断断续续用MarkDown写过几篇放着，但是没有用<a href=\\\"http://jekyllrb.com/\\\">jekyll</a>，或者<a href=\\\"http://octopress.org/\\\">octpress</a>等串起来，上个月再次想配置好jekyll，结果在mac下始终配置不好（怪我咯）。今天决定一定要配置好，搜集了大量资料（google “jekyll 像黑客一样”），结果意外在<a href=\\\"http://www.douban.com/group/topic/39939196/\\\">http://www.douban.com/group/topic/39939196/</a>的回复中看到“用pelican吧 python的 还有hexo是nodejs的 ”。因为最近刚好在看nodejs，觉得很有兴趣，于是改为尝试<a href=\\\"https://hexo.io/zh-cn/\\\">hexo</a>。</p>\\n<!-- more -->\\n<h1 id=\\\"简介\\\"><a href=\\\"#%E7%AE%80%E4%BB%8B\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>简介</h1>\\n<p><a href=\\\"http://ibruce.info/2013/11/22/hexo-your-blog/\\\">http://ibruce.info/2013/11/22/hexo-your-blog/</a></p>\\n<blockquote>\\n<p>hexo出自台湾大学生<a href=\\\"https://twitter.com/tommy351\\\">tommy351</a>之手，是一个基于<a href=\\\"https://nodejs.org/\\\">Node.js</a>的静态博客程序，其编译上百篇文字只需要几秒。hexo生成的静态网页可以直接放到GitHub Pages，BAE，SAE等平台上。先看看tommy是如何吐槽Octopress的 →＿→ <a href=\\\"http://zespia.tw/blog/2012/10/11/hexo-debut/\\\">Hexo颯爽登場</a>。</p>\\n</blockquote>\\n<h1 id=\\\"安装\\\"><a href=\\\"#%E5%AE%89%E8%A3%85\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>安装</h1>\\n<p>首先安装Node.js，然后运行</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">\\t<span class=\\\"token function\\\">npm</span> <span class=\\\"token function\\\">install</span> -g hexo-cli\\n\\t<span class=\\\"token function\\\">npm</span> <span class=\\\"token function\\\">install</span> hexo --save</code></pre>\\n      </div>\\n<h1 id=\\\"初始化配置\\\"><a href=\\\"#%E5%88%9D%E5%A7%8B%E5%8C%96%E9%85%8D%E7%BD%AE\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>初始化配置</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">\\thexo init\\n\\t<span class=\\\"token function\\\">npm</span> <span class=\\\"token function\\\">install</span></code></pre>\\n      </div>\\n<h1 id=\\\"写blog\\\"><a href=\\\"#%E5%86%99blog\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>写blog</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">\\thexo n</code></pre>\\n      </div>\\n<h1 id=\\\"生成\\\"><a href=\\\"#%E7%94%9F%E6%88%90\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>生成</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">\\thexo g</code></pre>\\n      </div>\\n<h1 id=\\\"本地预览\\\"><a href=\\\"#%E6%9C%AC%E5%9C%B0%E9%A2%84%E8%A7%88\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>本地预览</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">\\thexo s</code></pre>\\n      </div>\\n<h1 id=\\\"发布\\\"><a href=\\\"#%E5%8F%91%E5%B8%83\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>发布</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">\\thexo d</code></pre>\\n      </div>\\n<p>实在觉得没必<a href=\\\"https://en.wikipedia.org/wiki/Reinventing_the_wheel\\\">重复造轮子</a>，重写已经有很详细资料的东西。强烈推荐<a href=\\\"http://ibruce.info/2013/11/22/hexo-your-blog/\\\">这篇</a>。 我觉得基本涵盖了方方面面，如果以后有新东西这里面没有的，我再写吧~</p>\\n<h1 id=\\\"refers\\\"><a href=\\\"#refers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Refers</h1>\\n<ol>\\n<li><a href=\\\"http://ibruce.info/2013/11/22/hexo-your-blog/\\\">http://ibruce.info/2013/11/22/hexo-your-blog/</a></li>\\n<li><a href=\\\"http://wsgzao.github.io/post/hexo-guide/\\\">http://wsgzao.github.io/post/hexo-guide/</a></li>\\n<li><a href=\\\"http://www.jianshu.com/p/05289a4bc8b2\\\">http://www.jianshu.com/p/05289a4bc8b2</a></li>\\n<li><a href=\\\"http://yangjian.me/workspace/building-blog-with-hexo/\\\">http://yangjian.me/workspace/building-blog-with-hexo/</a></li>\\n<li><a href=\\\"http://yangjian.me/workspace/building-blog-with-hexo/\\\">http://yangjian.me/workspace/building-blog-with-hexo/</a></li>\\n<li><a href=\\\"http://blog.csdn.net/jackystudio/article/details/16117585\\\">http://blog.csdn.net/jackystudio/article/details/16117585</a></li>\\n</ol>\\n<blockquote>\\n<p>Written with <a href=\\\"https://stackedit.io/\\\">StackEdit</a>.</p>\\n</blockquote>\",\"timeToRead\":2,\"excerpt\":\"引用 阮老师 的话， 喜欢写Blog的人，会经历三个阶段。 自己比较懒惰，也就偶尔在 OC 上写点闲散的笔记，最近觉得还是应该要把自己的知识系统地梳理一下，便决定开一个独立的域名，自己记录Blog。 之前就了解Github Pages，也断断续续用MarkDown…\",\"fields\":{\"slug\":\"/my-first-hexo-blog/\"},\"frontmatter\":{\"title\":\"我的第一个hexo Blog\",\"date\":\"2015-07-26\",\"category\":\"default\",\"tags\":[\"hexo\",\"github\",\"githubPages\"]}}},{\"node\":{\"html\":\"<p>需要在代码里面发邮件是很经常的事情，包括找回密码，通知用户领奖，监控报警等。</p>\\n<p>在Java里面实现比较简单，Oracle自己提供了<a href=\\\"http://www.oracle.com/technetwork/java/javasebusiness/downloads/java-archive-downloads-eeplat-419426.html#javamail-1.4.7-oth-JPR\\\">JavaMail</a>， 不过API比较底层，用起来不方便，可以自己封装下，也可以直接使用Apache的开源项目<a href=\\\"https://commons.apache.org/proper/commons-email/\\\">Commons Email</a>。 下面的代码，可以以小马哥的名义给自己发邮件，该功能仅用于测试，请谨慎使用，产生的问题，本人概不负责。 /微笑</p>\\n<!-- more -->\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code class=\\\"language-java\\\"><span class=\\\"token keyword\\\">import</span> org<span class=\\\"token punctuation\\\">.</span>apache<span class=\\\"token punctuation\\\">.</span>commons<span class=\\\"token punctuation\\\">.</span>mail<span class=\\\"token punctuation\\\">.</span>EmailAttachment<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> org<span class=\\\"token punctuation\\\">.</span>apache<span class=\\\"token punctuation\\\">.</span>commons<span class=\\\"token punctuation\\\">.</span>mail<span class=\\\"token punctuation\\\">.</span>EmailException<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> org<span class=\\\"token punctuation\\\">.</span>apache<span class=\\\"token punctuation\\\">.</span>commons<span class=\\\"token punctuation\\\">.</span>mail<span class=\\\"token punctuation\\\">.</span>MultiPartEmail<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">import</span> java<span class=\\\"token punctuation\\\">.</span>net<span class=\\\"token punctuation\\\">.</span>MalformedURLException<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> java<span class=\\\"token punctuation\\\">.</span>net<span class=\\\"token punctuation\\\">.</span>URL<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/**\\n * Created by magicalli on 2015/7/6.\\n */</span>\\n<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">MultiPartEmailTest</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">static</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span>String<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> args<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throws</span> EmailException<span class=\\\"token punctuation\\\">,</span> MalformedURLException <span class=\\\"token punctuation\\\">{</span>\\n        MultiPartEmail email <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">MultiPartEmail</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        email<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setHostName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"smtp.tencent.com\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">//        email.setAuthentication(\\\"youremail@tencent.com\\\", \\\"***\\\");//邮件服务器验证：用户名/密码</span>\\n        email<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setCharset</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"UTF-8\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        email<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setFrom</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"pony@qq.com\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"马化腾\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        email<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">addTo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"magicalli@tencent.com\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        email<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setSubject</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"加油奋斗！\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        email<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setMsg</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"come on! 加油奋斗吧，早晚有一天你会出任CEO，迎娶白富美，走上人生巅峰！ http://www.qq.com\\\\n\\\\n\\\\n pony\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        EmailAttachment attachment <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">EmailAttachment</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        attachment<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setPath</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"d:/lzl.jpg\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span><span class=\\\"token comment\\\">// 本地文件</span>\\n        attachment<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setDisposition</span><span class=\\\"token punctuation\\\">(</span>EmailAttachment<span class=\\\"token punctuation\\\">.</span>ATTACHMENT<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        attachment<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setDescription</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"林志玲1\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        attachment<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"lzl_1\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        email<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">attach</span><span class=\\\"token punctuation\\\">(</span>attachment<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        EmailAttachment attachment2 <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">EmailAttachment</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        attachment2<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setURL</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">URL</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"http://mat1.qq.com/datalib_img/star/pic/lib/2007-01-15/2007011511104716122311.jpg\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span><span class=\\\"token comment\\\">//远程文件, 如果不是qq.com域名下，内网是访问不了的哈</span>\\n        attachment2<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setDisposition</span><span class=\\\"token punctuation\\\">(</span>EmailAttachment<span class=\\\"token punctuation\\\">.</span>ATTACHMENT<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        attachment2<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setDescription</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"林志玲2\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        attachment2<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"lzl_2\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        email<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">attach</span><span class=\\\"token punctuation\\\">(</span>attachment2<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        email<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">send</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p><a href=\\\"https://commons.apache.org/proper/commons-email/\\\">Commons Email</a>支持好几种格式，包括简单文本，html，带附件等。需要的可以自己查看文档。</p>\\n<p>基于smtp的协议邮件协议很简单，大家甚至可以直接用telnet来发送，可以参考这边文章<a href=\\\"http://blog.csdn.net/ghsau/article/details/8602076\\\">Java Mail(一)：telnet实现发送收取邮件</a>. </p>\\n<p>一般公司内网没有验证发送方，你可以冒充公司任何一个员工发送邮件（包括你们老板），一般外面的邮件服务器，比如qq, 126, 163等，是需要验证密码的。</p>\\n<p>重申一遍，别用这个代码干坏事，后果自负， 与本人无关！</p>\\n<h1 id=\\\"refers\\\"><a href=\\\"#refers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Refers</h1>\\n<ol>\\n<li><a href=\\\"http://blog.csdn.net/ghsau/article/details/8602076\\\">http://blog.csdn.net/ghsau/article/details/8602076</a></li>\\n<li><a href=\\\"http://blog.csdn.net/ghsau/article/details/17839983\\\">http://blog.csdn.net/ghsau/article/details/17839983</a></li>\\n<li><a href=\\\"http://haolloyin.blog.51cto.com/1177454/354320\\\">http://haolloyin.blog.51cto.com/1177454/354320</a></li>\\n<li><a href=\\\"http://www.runoob.com/java/java-sending-email.html\\\">http://www.runoob.com/java/java-sending-email.html</a></li>\\n<li><a href=\\\"https://commons.apache.org/proper/commons-email/\\\">https://commons.apache.org/proper/commons-email/</a></li>\\n<li><a href=\\\"http://blog.csdn.net/qiaqia609/article/details/11580589\\\">http://blog.csdn.net/qiaqia609/article/details/11580589</a></li>\\n</ol>\\n<blockquote>\\n<p>Written with <a href=\\\"https://stackedit.io/\\\">StackEdit</a>.</p>\\n</blockquote>\",\"timeToRead\":2,\"excerpt\":\"需要在代码里面发邮件是很经常的事情，包括找回密码，通知用户领奖，监控报警等。 在Java里面实现比较简单，Oracle自己提供了 JavaMail ， 不过API比较底层，用起来不方便，可以自己封装下，也可以直接使用Apache的开源项目 Commons Email…\",\"fields\":{\"slug\":\"/java-email/\"},\"frontmatter\":{\"title\":\"Java发送邮件\",\"date\":\"2015-07-13\",\"category\":\"Java\",\"tags\":[\"Java\",\"Email\",\"JavaMail\",\"Apache Commons\"]}}}]}},\"pathContext\":{\"current\":5,\"skip\":40,\"total\":6}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---page-5-757a1ef9c3283d561fc2.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Magicly's Blog\"}},\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"html\":\"<p>最近需要做一些自然语言处理的工作， 发现google推出的wrod2vec比较有意思，据说可以推算出king + man - woman = queue，感觉很nb啊， 后续可以拿来做文本分类、情绪分析、关键词提取等。本文记录一下在中文wiki语料库上做的实验。</p>\\n<!-- more -->\\n<h1 id=\\\"word2vec下载安装\\\"><a href=\\\"#word2vec%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>word2vec下载安装</h1>\\n<p>自从google推出了<a href=\\\"https://code.google.com/archive/p/word2vec/\\\">word2vec</a>后，网上已经有众多实现，包括：</p>\\n<ul>\\n<li><a href=\\\"https://code.google.com/archive/p/word2vec/\\\">google发布的c++版本</a></li>\\n<li>python版<a href=\\\"https://radimrehurek.com/gensim/models/word2vec.html\\\">Gensim</a></li>\\n<li>java版<a href=\\\"https://deeplearning4j.org/word2vec\\\">DeepLearning4J</a></li>\\n<li><a href=\\\"https://github.com/danielfrg/word2vec\\\">Python interface to Google word2vec</a>。</li>\\n</ul>\\n<p>我选用Gensim版本，python3.5.2。</p>\\n<h1 id=\\\"数据集简介\\\"><a href=\\\"#%E6%95%B0%E6%8D%AE%E9%9B%86%E7%AE%80%E4%BB%8B\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>数据集简介</h1>\\n<p>我们用的是中文wiki语料库，下载链接<a href=\\\"https://dumps.wikimedia.org/zhwiki/latest/zhwiki-latest-pages-articles.xml.bz2%EF%BC%8C%E6%9C%891.3G%EF%BC%8C\\\">https://dumps.wikimedia.org/zhwiki/latest/zhwiki-latest-pages-articles.xml.bz2，有1.3G，</a> 解压之后是一个5.7G左右的xml文档。里面包含了标题、分类、正文部分等。</p>\\n<h1 id=\\\"数据预处理\\\"><a href=\\\"#%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>数据预处理</h1>\\n<p>上一步解压之后的xml文档我们没法直接用， 需要经过一系列的处理， 包括xml标签去除， 编码转换、简繁体转换、分词等。</p>\\n<h2 id=\\\"xml内容提取\\\"><a href=\\\"#xml%E5%86%85%E5%AE%B9%E6%8F%90%E5%8F%96\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>xml内容提取</h2>\\n<p>你可以自己写正则表达式提取内容， 当然这个太费事了。 好在已经有人做了这个事情， Gensim里自带了提取wiki内容的工具，代码如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">from</span> gensim<span class=\\\"token punctuation\\\">.</span>corpora <span class=\\\"token keyword\\\">import</span> WikiCorpus\\n\\nspace <span class=\\\"token operator\\\">=</span> b<span class=\\\"token string\\\">\\\" \\\"</span>\\ni <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span>\\noutput <span class=\\\"token operator\\\">=</span> <span class=\\\"token builtin\\\">open</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'wiki-zh-article.txt'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'wb'</span><span class=\\\"token punctuation\\\">)</span>\\nwiki <span class=\\\"token operator\\\">=</span> WikiCorpus<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'zhwiki-latest-pages-articles.xml.bz2'</span><span class=\\\"token punctuation\\\">,</span> lemmatize <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">False</span><span class=\\\"token punctuation\\\">,</span> dictionary <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">for</span> text <span class=\\\"token keyword\\\">in</span> wiki<span class=\\\"token punctuation\\\">.</span>get_texts<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    output<span class=\\\"token punctuation\\\">.</span>write<span class=\\\"token punctuation\\\">(</span>space<span class=\\\"token punctuation\\\">.</span>join<span class=\\\"token punctuation\\\">(</span>text<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> b<span class=\\\"token string\\\">\\\"\\\\n\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n    i <span class=\\\"token operator\\\">=</span> i <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>i <span class=\\\"token operator\\\">%</span> <span class=\\\"token number\\\">10000</span> <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Saved \\\"</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token builtin\\\">str</span><span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\" articles\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n\\noutput<span class=\\\"token punctuation\\\">.</span>close<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Finished Saved \\\"</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token builtin\\\">str</span><span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\" articles\\\"</span><span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\\n<p>代码在我的macpro上大概了运行了20多分钟， 得到280819行的文本， 每行为一篇文章。有个坑大家要小心， 输入文件是压缩文件bz2，直接传解压缩之后的xml文件是会报错的。</p>\\n<p>另外， 我为了简洁，把不相关代码删除了，因此贴出来的代码，并不符合编程的最佳实践，请自行忽略这个问题。</p>\\n<h2 id=\\\"简繁体换过\\\"><a href=\\\"#%E7%AE%80%E7%B9%81%E4%BD%93%E6%8D%A2%E8%BF%87\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>简繁体换过</h2>\\n<p>由于wiki语料库里简体、繁体都有，不统一的话对后面分词和跑模型准确率有影响， 所以先统一转化为简体。用到的工具是<a href=\\\"https://github.com/BYVoid/OpenCC\\\">opencc</a>。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">opencc -i wiki-zh-article.txt -o wiki-zh-article-zhs.txt -c t2s.json</code></pre>\\n      </div>\\n<p>话说作者BYVoid也是超级大神， 据说小时候玩电脑，出现乱码， 于是自己写了opencc，然后提交给Linus， 被整合到linux kernel里了，那时候应该是小学还是初中吧。后来本科毕业去阿里面试，得到青睐，晚上流传了当时的面试记录。<img src=\\\"http://s12.sinaimg.cn/orignal/001OxbOzzy6EHEbsLWP8b\\\" alt=\\\"http://s12.sinaimg.cn/orignal/001OxbOzzy6EHEbsLWP8b\\\"></p>\\n<h2 id=\\\"编码转化\\\"><a href=\\\"#%E7%BC%96%E7%A0%81%E8%BD%AC%E5%8C%96\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>编码转化</h2>\\n<p>网上说文件中包含非utf-8字符，需要用iconv处理一下。我忘了我之前在全量数据上跑得时候有没有遇到， 反正写文章的时候，我拿了1/10的数据跑没遇到问题。如果遇到了可以用<a href=\\\"https://zh.wikipedia.org/wiki/Iconv\\\">iconv</a>一行命令解决：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">iconv -c -t utf-8 &lt; wiki-zh-article-zhs.txt &gt; wiki-zh-article-zhs-utf8.txt</code></pre>\\n      </div>\\n<h2 id=\\\"分词\\\"><a href=\\\"#%E5%88%86%E8%AF%8D\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>分词</h2>\\n<p>接下来就是做分词，比较好用的工具有<a href=\\\"https://github.com/fxsjy/jieba\\\">结巴分词</a>、<a href=\\\"http://ictclas.nlpir.org/\\\">中科院的ICTCLAS</a>、<a href=\\\"http://thulac.thunlp.org/\\\">清华的THULAC</a>、<a href=\\\"https://github.com/FudanNLP/fnlp\\\">复旦的FudanNLP</a>等。我选用了结巴，代码如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">import</span> codecs\\n<span class=\\\"token keyword\\\">import</span> jieba\\n\\ninfile <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'wiki-zh-article-zhs.txt'</span>\\noutfile <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'wiki-zh-words.txt'</span>\\n\\ndescsFile <span class=\\\"token operator\\\">=</span> codecs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token builtin\\\">open</span><span class=\\\"token punctuation\\\">(</span>infile<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'rb'</span><span class=\\\"token punctuation\\\">,</span> encoding<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">'utf-8'</span><span class=\\\"token punctuation\\\">)</span>\\ni <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span>\\n<span class=\\\"token keyword\\\">with</span> <span class=\\\"token builtin\\\">open</span><span class=\\\"token punctuation\\\">(</span>outfile<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'w'</span><span class=\\\"token punctuation\\\">,</span> encoding<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">'utf-8'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> f<span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token keyword\\\">for</span> line <span class=\\\"token keyword\\\">in</span> descsFile<span class=\\\"token punctuation\\\">:</span>\\n        i <span class=\\\"token operator\\\">+=</span> <span class=\\\"token number\\\">1</span>\\n        <span class=\\\"token keyword\\\">if</span> i <span class=\\\"token operator\\\">%</span> <span class=\\\"token number\\\">10000</span> <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">)</span>\\n        line <span class=\\\"token operator\\\">=</span> line<span class=\\\"token punctuation\\\">.</span>strip<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n        words <span class=\\\"token operator\\\">=</span> jieba<span class=\\\"token punctuation\\\">.</span>cut<span class=\\\"token punctuation\\\">(</span>line<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token keyword\\\">for</span> word <span class=\\\"token keyword\\\">in</span> words<span class=\\\"token punctuation\\\">:</span>\\n            f<span class=\\\"token punctuation\\\">.</span>write<span class=\\\"token punctuation\\\">(</span>word <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">' '</span><span class=\\\"token punctuation\\\">)</span>\\n        f<span class=\\\"token punctuation\\\">.</span>write<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'\\\\n'</span><span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\\n<p>又跑几十分钟， 喝杯茶去。。。</p>\\n<h1 id=\\\"gensim跑模型训练\\\"><a href=\\\"#gensim%E8%B7%91%E6%A8%A1%E5%9E%8B%E8%AE%AD%E7%BB%83\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Gensim跑模型训练</h1>\\n<p>终于可以跑模型了，这次时间会更长，看你的电脑配置了，强烈建议约个妹纸出去看看电影逛逛街再回来等。据同事说，gensim有一个坑，在windows下不能用多核？！！！于是我在我的8核macpro下跑一个多小时的，他在windows下要跑七八个小时，哈哈哈哈。。。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">import</span> multiprocessing\\n\\n<span class=\\\"token keyword\\\">from</span> gensim<span class=\\\"token punctuation\\\">.</span>models <span class=\\\"token keyword\\\">import</span> Word2Vec\\n<span class=\\\"token keyword\\\">from</span> gensim<span class=\\\"token punctuation\\\">.</span>models<span class=\\\"token punctuation\\\">.</span>word2vec <span class=\\\"token keyword\\\">import</span> LineSentence\\n\\ninp <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'wiki-zh-words.txt'</span>\\noutp1 <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'wiki-zh-model'</span>\\noutp2 <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'wiki-zh-vector'</span>\\n\\nmodel <span class=\\\"token operator\\\">=</span> Word2Vec<span class=\\\"token punctuation\\\">(</span>LineSentence<span class=\\\"token punctuation\\\">(</span>inp<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> size <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">400</span><span class=\\\"token punctuation\\\">,</span> window <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span> min_count <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span> workers <span class=\\\"token operator\\\">=</span> multiprocessing<span class=\\\"token punctuation\\\">.</span>cpu_count<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n\\nmodel<span class=\\\"token punctuation\\\">.</span>save<span class=\\\"token punctuation\\\">(</span>outp1<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">## 以二进制格式存储</span>\\nmodel<span class=\\\"token punctuation\\\">.</span>save_word2vec_format<span class=\\\"token punctuation\\\">(</span>outp2<span class=\\\"token punctuation\\\">,</span> binary <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">False</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">## 以文本格式存储， 一行是一个词的vector</span></code></pre>\\n      </div>\\n<p>这里用save<em>word2vec</em>format纯粹是为了看看输出的模型是什么样子的， 这样：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">台湾 0.396402 1.611405 -0.291840 -0.951169 -0.109141 1.918246 0.215038 0.674539 2.335748 -0.757200 -0.290877 2.198100 -0.309420 0.438734 -1.731025 -0.233053 0.150694 2.214514 ......</code></pre>\\n      </div>\\n<p>即每个词一行， 后面是400个数字， 即将每一个词变为一个400维的向量。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">size is the dimensionality of the feature vectors.</code></pre>\\n      </div>\\n<h1 id=\\\"看看效果\\\"><a href=\\\"#%E7%9C%8B%E7%9C%8B%E6%95%88%E6%9E%9C\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>看看效果</h1>\\n<p>看看跟杜甫相关的词呢：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">from</span> gensim<span class=\\\"token punctuation\\\">.</span>models <span class=\\\"token keyword\\\">import</span> Word2Vec\\n\\nmodel <span class=\\\"token operator\\\">=</span> Word2Vec<span class=\\\"token punctuation\\\">.</span>load<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./wiki-zh-model'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\"># model = Word2Vec.load_word2vec_format('./wiki-zh-vector', binary = False) # 如果之前用文本保存话， 用这个方法加载</span>\\nres <span class=\\\"token operator\\\">=</span> model<span class=\\\"token punctuation\\\">.</span>most_similar<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'杜甫'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span>res<span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">[(&#39;白居易&#39;, 0.8842014074325562), (&#39;苏轼&#39;, 0.8444569706916809), (&#39;陆游&#39;, 0.8307716846466064), (&#39;一诗&#39;, 0.8290032148361206), (&#39;韩愈&#39;, 0.8263246417045593), (&#39;王勃&#39;, 0.8244832754135132), (&#39;陶渊明&#39;, 0.8243700861930847), (&#39;赋诗&#39;, 0.8211008906364441), (&#39;吟咏&#39;, 0.82026606798172), (&#39;辛弃疾&#39;, 0.8185226917266846)]</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">&gt;&gt;&gt; model.most_similar(&#39;语言学&#39;)\\n[(&#39;语言学家&#39;, 0.7147563695907593), (&#39;民族学&#39;, 0.6887255907058716), (&#39;历史学&#39;, 0.6869072914123535), (&#39;比较语言学&#39;, 0.6818138360977173), (&#39;语音学&#39;, 0.6741021871566772), (&#39;音韵学&#39;, 0.6673719882965088), (&#39;语言所&#39;, 0.6434118747711182), (&#39;比较文学&#39;, 0.633540153503418), (&#39;人类学&#39;, 0.633027195930481), (&#39;方言学&#39;, 0.6314626336097717)]\\n&gt;&gt;&gt; model.most_similar(&#39;林丹&#39;)\\n[(&#39;谌龙&#39;, 0.9071081280708313), (&#39;鲍春来&#39;, 0.9035789966583252), (&#39;傅海峰&#39;, 0.8911731243133545), (&#39;蔡赟&#39;, 0.8886306285858154), (&#39;汪鑫&#39;, 0.8803133964538574), (&#39;李宗伟&#39;, 0.8767721652984619), (&#39;谢杏芳&#39;, 0.8706355690956116), (&#39;周蜜&#39;, 0.865954577922821), (&#39;李雪芮&#39;, 0.8658450841903687), (&#39;赵芸蕾&#39;, 0.8650676012039185)]\\n&gt;&gt;&gt; model.most_similar(&#39;习近平&#39;)\\n[(&#39;胡锦涛&#39;, 0.8577725291252136), (&#39;江泽民&#39;, 0.8138135075569153), (&#39;赵紫阳&#39;, 0.7295876741409302), (&#39;温家宝&#39;, 0.7284029722213745), (&#39;朱镕基&#39;, 0.7241271734237671), (&#39;邓小平&#39;, 0.7226930856704712), (&#39;李克强&#39;, 0.7181681990623474), (&#39;曾庆红&#39;, 0.6949223279953003), (&#39;周永康&#39;, 0.6847086548805237), (&#39;反腐&#39;, 0.681549072265625)]\\n&gt;&gt;&gt; model.most_similar(positive=[&#39;中国&#39;, &#39;东京&#39;], negative=[&#39;日本&#39;])\\n[(&#39;北京&#39;, 0.35159438848495483), (&#39;中央电视台&#39;, 0.3406861424446106), (&#39;辽艺版&#39;, 0.3394508361816406), (&#39;宗藤&#39;, 0.32839435338974), (&#39;寻奇&#39;, 0.3166041970252991), (&#39;china&#39;, 0.3111165761947632), (&#39;是冈瓦&#39;, 0.3110591471195221), (&#39;北京电视台&#39;, 0.31081947684288025), (&#39;女热&#39;, 0.30060601234436035), (&#39;北京市&#39;, 0.29704713821411133)]\\n&gt;&gt;&gt; model.most_similar(&#39;林志玲&#39;)\\n[(&#39;伊能静&#39;, 0.7900516986846924), (&#39;柯震东&#39;, 0.787365198135376), (&#39;言承旭&#39;, 0.7779808044433594), (&#39;徐熙媛&#39;, 0.7775079607963562), (&#39;林志颖&#39;, 0.7681171894073486), (&#39;谢依霖&#39;, 0.7657250761985779), (&#39;阮经天&#39;, 0.7654315233230591), (&#39;郭书瑶&#39;, 0.7628788948059082), (&#39;张钧宁&#39;, 0.7612718939781189), (&#39;何润东&#39;, 0.7598745822906494)]</code></pre>\\n      </div>\\n<p>还有没有觉得这个可以拿来干点有意思的事情呢？比如：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">&gt;&gt;&gt; model.most_similar(&#39;苍井空&#39;)\\n[(&#39;吉泽明步&#39;, 0.7175988554954529), (&#39;反町隆史&#39;, 0.6755084991455078), (&#39;金城武&#39;, 0.6724058389663696), (&#39;柴崎幸&#39;, 0.6579034924507141), (&#39;藤原纪香&#39;, 0.656890332698822), (&#39;松隆子&#39;, 0.6524500846862793), (&#39;仓田保昭&#39;, 0.6456934809684753), (&#39;柴咲幸&#39;, 0.6456423997879028), (&#39;叶山豪&#39;, 0.6449219584465027), (&#39;濑户朝香&#39;, 0.6442539095878601)]</code></pre>\\n      </div>\\n<p>请尽情发挥想象。。。。。。。。。。。。。。。。</p>\\n<h1 id=\\\"其他\\\"><a href=\\\"#%E5%85%B6%E4%BB%96\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>其他</h1>\\n<p>列几个word2vec的用途。</p>\\n<ul>\\n<li>情感分析 <a href=\\\"http://datartisan.com/article/detail/48.html\\\">http://datartisan.com/article/detail/48.html</a></li>\\n<li>SEO <a href=\\\"https://seofangfa.com/seo-articles/word2vec.html\\\">https://seofangfa.com/seo-articles/word2vec.html</a></li>\\n</ul>\\n<p>另外，如果想深入了解word2vec的原理， 可以看最初的论文<a href=\\\"https://arxiv.org/pdf/1310.4546.pdf\\\">Distributed Representations of Words and Phrases\\nand their Compositionality</a>，以及<a href=\\\"http://techblog.youdao.com/?p=915\\\">有道的这篇分析</a>。</p>\\n<p>如果想自己动手实现word2vec的话， 可以考虑用当前最热的深度学习框架<a href=\\\"https://www.tensorflow.org/\\\">TensorFlow</a>来实现， 官网上有<a href=\\\"https://www.tensorflow.org/tutorials/word2vec\\\">详细地介绍</a>。</p>\\n<h1 id=\\\"refers\\\"><a href=\\\"#refers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Refers</h1>\\n<ul>\\n<li><a href=\\\"http://www.52nlp.cn/%E4%B8%AD%E8%8B%B1%E6%96%87%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91%E8%AF%AD%E6%96%99%E4%B8%8A%E7%9A%84word2vec%E5%AE%9E%E9%AA%8C\\\">http://www.52nlp.cn/%E4%B8%AD%E8%8B%B1%E6%96%87%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91%E8%AF%AD%E6%96%99%E4%B8%8A%E7%9A%84word2vec%E5%AE%9E%E9%AA%8C</a></li>\\n<li><a href=\\\"https://radimrehurek.com/gensim/models/word2vec.html\\\">https://radimrehurek.com/gensim/models/word2vec.html</a></li>\\n<li><a href=\\\"https://code.google.com/archive/p/word2vec/\\\">https://code.google.com/archive/p/word2vec/</a></li>\\n<li><a href=\\\"http://licstar.net/archives/262\\\">http://licstar.net/archives/262</a></li>\\n<li><a href=\\\"https://github.com/fxsjy/jieba\\\">https://github.com/fxsjy/jieba</a></li>\\n<li><a href=\\\"http://thulac.thunlp.org/\\\">http://thulac.thunlp.org/</a></li>\\n<li><a href=\\\"http://arxiv.org/pdf/1310.4546.pdf\\\">http://arxiv.org/pdf/1310.4546.pdf</a></li>\\n<li><a href=\\\"https://www.tensorflow.org/tutorials/word2vec\\\">https://www.tensorflow.org/tutorials/word2vec</a></li>\\n<li><a href=\\\"http://techblog.youdao.com/?p=915\\\">http://techblog.youdao.com/?p=915</a></li>\\n<li><a href=\\\"http://blog.csdn.net/zhaoxinfan/article/details/11069485\\\">http://blog.csdn.net/zhaoxinfan/article/details/11069485</a></li>\\n<li><a href=\\\"http://cikuapi.com/index.php\\\">http://cikuapi.com/index.php</a></li>\\n</ul>\",\"timeToRead\":6,\"excerpt\":\"最近需要做一些自然语言处理的工作， 发现google推出的wrod2vec比较有意思，据说可以推算出king + man - woman = queue，感觉很nb啊， 后续可以拿来做文本分类、情绪分析、关键词提取等。本文记录一下在中文wiki语料库上做的实验。 word2vec…\",\"fields\":{\"slug\":\"/word2vec-first-try-md/\"},\"frontmatter\":{\"title\":\"用word2vec分析中文维基语料库\",\"date\":\"2017-03-03\",\"category\":\"ML\",\"tags\":[\"machine learning\",\"nlp\",\"word2vec\"]}}},{\"node\":{\"html\":\"<p>最近准备写一下机器学习的一些学习笔记， 由于涉及到大量数学公式， 发现不把如何在markdown里写数学公式这个问题解决了会严重影响工作效率。大概而言， 主要有两种方式：</p>\\n<!-- more -->\\n<ol>\\n<li>\\n<p>用图片！\\n也就是编辑好公式，上传，然后在markdown里面引用图片链接的方式。这种方式方便直接，但是显得比较low一点。 有兴趣的可以参考这几篇文章。</p>\\n</li>\\n<li>\\n<p><a href=\\\"http://www.ruanyifeng.com/blog/2011/07/formula_online_generator.html\\\">http://www.ruanyifeng.com/blog/2011/07/formula<em>online</em>generator.html</a>\\n当然， 在某些情况下， 必须使用这种思路。 比如， 微信公众号里。 可以参考<a href=\\\"http://www.52nlp.cn/%E5%9C%A8%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E9%87%8C%E4%BD%BF%E7%94%A8latex%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F\\\">这里</a></p>\\n</li>\\n<li>\\n<p>用Mathjax插件来写LaTex公式。\\n哪怕你是用图片， 那也得写出LaTex公式啊。所以我们今天主要讲第二种方式。推荐<a href=\\\"https://webdemo.myscript.com/views/math.html\\\">这个工具</a>，可以直接在浏览器里手写公式，它会帮你转为LaTex！很好很强大。</p>\\n</li>\\n</ol>\\n<h1 id=\\\"mathjax插件\\\"><a href=\\\"#mathjax%E6%8F%92%E4%BB%B6\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>MathJax插件</h1>\\n<p>著名的Stackoverflow网站上的漂亮公式，就是使用了MathJax插件的效果。添加MathJax插件也非常简单，只需要在markdown文件中，添加MathJax CDN，如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>text/javascript<span class=\\\"token punctuation\\\">\\\"</span></span>\\n   <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\">\\n</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span></code></pre>\\n      </div>\\n<p>就可以在md文件中插入Tex格式的公式了。</p>\\n<p>行间公式的形式为</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">$$ 此处插入公式 $$</code></pre>\\n      </div>\\n<p>而行内公式的形式为</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">\\\\\\\\( 此处插入公式 \\\\\\\\)</code></pre>\\n      </div>\\n<h1 id=\\\"hexo中显示数学公式\\\"><a href=\\\"#hexo%E4%B8%AD%E6%98%BE%E7%A4%BA%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Hexo中显示数学公式</h1>\\n<p>Hexo原生不支持数学公式， 因此需要我们做一些修改。安装<a href=\\\"https://github.com/akfish/hexo-math\\\">hexo-math</a>插件：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">npm install hexo-math --save</code></pre>\\n      </div>\\n<p>在_config.yml中增加</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">plugins:\\n  hexo-math</code></pre>\\n      </div>\\n<p>完事大吉， 你现在可以写LaTex公式了， 我们来写几个看看。</p>\\n<p>这是行内公式根号2这样写: \\\\(\\\\sqrt{2}\\\\)</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">\\\\\\\\(\\\\\\\\sqrt{2}\\\\\\\\)</code></pre>\\n      </div>\\n<p>这是单独一行的公式:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">$$ a ^ 2 + b ^ 2 = c ^ 2 $$\\n$$ \\\\sqrt{2} $$\\n$$ evidence\\\\_{i}=\\\\sum \\\\_{j}W\\\\_{ij}x\\\\_{j}+b\\\\_{i} $$</code></pre>\\n      </div>\\n<p>$$ a ^ 2 + b ^ 2 = c ^ 2 $$\\n$$ \\\\sqrt{2} $$\\n$$ evidence_{i}=\\\\sum _{j}W_{ij}x_{j}+b_{i} $$\\n细心的同学会发现， 里面有很多<strong>\\\\\\\\</strong>, <strong>\\\\_</strong>之类， 原因是<strong>\\\\</strong>本身在markdown和LaTex里都有含义， 因此需要转义。但是LaTex里面， <strong>\\\\</strong>太常用了， 所以每次遇到都转义的话就很痛苦， 而且在hexo里面写的公式，复制到其他地方去就不支持了。</p>\\n<p>网上有改hexo渲染的源码的， 有换用pandoc的， 其实最简单的方式是用hexo-math里的tag。网上搜索到的很多资料都是用的{% math_block %}，我试了发现总是不对， 后来看<a href=\\\"https://github.com/akfish/hexo-math\\\">官网</a>，发现这个方法已经deprecated了， 最新的用{% math %}，如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">这是行内公式：{% math %}\\\\sqrt{2 + 3}{% endmath %}</code></pre>\\n      </div>\\n<p>显示为：这是行内公式：{% math %}\\\\sqrt{2 + 3}{% endmath %}\\n一行公式：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">$$ evidence\\\\_{i}=\\\\sum \\\\_{j}W\\\\_{ij}x\\\\_{j}+b\\\\_{i} $$\\n\\n{% math %}\\n\\\\begin{aligned}\\nevidence_{i}=\\\\sum _{j}W_{ij}x_{j}+b_{i}\\n\\\\end{aligned}\\n{% endmath %}</code></pre>\\n      </div>\\n<p>$$ evidence_{i}=\\\\sum _{j}W_{ij}x_{j}+b_{i} $$\\n{% math %}\\n\\\\begin{aligned}\\nevidence<em>{i}=\\\\sum _{j}W</em>{ij}x<em>{j}+b</em>{i}\\n\\\\end{aligned}\\n{% endmath %}\\n可以看出， 如果有需要转义的字符， 用{% math %}tag这种方式要好很多。</p>\\n<p>再来一个复杂点的公式， 这是<a href=\\\"https://www.tensorflow.org/tutorials/word2vec\\\">word2vec</a>的损失函数公式（选中公式， 右键可以查看LaTex源码）：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">{% math %}\\nJ_\\\\text{NEG} = \\\\log Q_\\\\theta(D=1 |w_t, h) +\\n  k \\\\mathop{\\\\mathbb{E}}_{\\\\tilde w \\\\sim P_\\\\text{noise}}\\n     \\\\left[ \\\\log Q_\\\\theta(D = 0 |\\\\tilde w, h) \\\\right]\\n{% endmath %}</code></pre>\\n      </div>\\n<p>{% math %}\\nJ<em>\\\\text{NEG} = \\\\log Q</em>\\\\theta(D=1 |w<em>t, h) +\\nk \\\\mathop{\\\\mathbb{E}}</em>{\\\\tilde w \\\\sim P<em>\\\\text{noise}}\\n\\\\left[ \\\\log Q</em>\\\\theta(D = 0 |\\\\tilde w, h) \\\\right]\\n{% endmath %}</p>\\n<p>经过简单的配置， 我们的web页面已经可以支持很方便的书写数学公式了，而且由于不用特殊转义， 这里写的LaTex可以在其他markdown环境下使用， 比如<a href=\\\"http://mp.weixin.qq.com/s?__biz=MjM5NjAyNjkwMA==&#x26;mid=2723942529&#x26;idx=1&#x26;sn=3b417dd77b4d5b92231ed59649844eb9&#x26;chksm=81473ffab630b6ec843d77432c487e3e3a272ec26a5b9e0ae4007f5fce3dd826825a7b64a249&#x26;mpshare=1&#x26;scene=1&#x26;srcid=0301zj3JKl85H692JGwUHZzM#rd\\\">有道云笔记</a>。</p>\\n<p>============update===========</p>\\n<p>刚发现由于引用了MathJax.js， 本身又会引用其他一些js、css以及font， 会多增加差不多100k资源， 并且由于都是国外的cdn， 速度受限制（貌似还要翻墙），所以比较影响阅读体验。后续再想办法优化吧。</p>\\n<p>============update===========\\n发现next主题好看一些， 换成了next。 看到next直接<a href=\\\"http://theme-next.iissnan.com/third-party-services.html#others\\\">支持MathJax</a>的，换成了qiniu的cdn。但是next自带的math，不能支持{% math %}，发现还是需要hexo-math， 而且很奇怪的是， 发现不用在_config.yml里面写</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">plugins:\\n  hexo-math</code></pre>\\n      </div>\\n<p>居然也可以， 只要package.json里面有hexo-math就可以了。于是参考<a href=\\\"https://github.com/akfish/hexo-math\\\">hexo-math官网</a>，换成了qiniu的cdn。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">math:\\n  engine: &#39;mathjax&#39; # or &#39;katex&#39;\\n  mathjax:\\n  src: //cdn.staticfile.org/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML</code></pre>\\n      </div>\\n<p>奇怪的是，还是有一个网络请求，不知道从哪里来的。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">https://cdn.mathjax.org/mathjax/contrib/a11y/accessibility-menu.js?V=2.7.0</code></pre>\\n      </div>\\n<p>而且说的</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">Your config will be merged into default config:</code></pre>\\n      </div>\\n<p>似乎也没有。生成的代码为</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>text/x-mathjax-config<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\">\\n  MathJax<span class=\\\"token punctuation\\\">.</span>Hub<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Config</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span></code></pre>\\n      </div>\\n<p>配置目没有了？！！好在似乎没有影响使用，那就先暂时这样用着吧~~</p>\\n<h1 id=\\\"refers\\\"><a href=\\\"#refers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Refers</h1>\\n<ul>\\n<li><a href=\\\"http://jzqt.github.io/2015/06/30/Markdown%E4%B8%AD%E5%86%99%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/\\\">http://jzqt.github.io/2015/06/30/Markdown%E4%B8%AD%E5%86%99%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</a></li>\\n<li><a href=\\\"https://www.zybuluo.com/codeep/note/163962\\\">https://www.zybuluo.com/codeep/note/163962</a></li>\\n<li><a href=\\\"http://oiltang.com/2014/05/04/markdown-and-mathjax/\\\">http://oiltang.com/2014/05/04/markdown-and-mathjax/</a></li>\\n<li><a href=\\\"http://www.jeyzhang.com/how-to-insert-equations-in-markdown.html\\\">http://www.jeyzhang.com/how-to-insert-equations-in-markdown.html</a></li>\\n<li><a href=\\\"http://www.52nlp.cn/%E5%9C%A8%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E9%87%8C%E4%BD%BF%E7%94%A8latex%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F\\\">http://www.52nlp.cn/%E5%9C%A8%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E9%87%8C%E4%BD%BF%E7%94%A8latex%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F</a></li>\\n<li><a href=\\\"https://github.com/mathjax/MathJax-node\\\">https://github.com/mathjax/MathJax-node</a></li>\\n</ul>\",\"timeToRead\":5,\"excerpt\":\"最近准备写一下机器学习的一些学习笔记， 由于涉及到大量数学公式， 发现不把如何在markdown里写数学公式这个问题解决了会严重影响工作效率。大概而言， 主要有两种方式： 用图片！\\n也就是编辑好公式，上传，然后在markdown…\",\"fields\":{\"slug\":\"/markdown-math/\"},\"frontmatter\":{\"title\":\"在markdown里如何写数学公式\",\"date\":\"2017-03-02\",\"category\":\"ML\",\"tags\":[\"math\"]}}},{\"node\":{\"html\":\"<p>机器学习已经影响了我们生活中的每一个地方， 了解一些机器学习知识， 便于提高竞争力， 避免被机器替代。\\n下面是我参考咨询了很多大牛之后搜集整理的一些学习资料， 基本都是该领域世界最顶尖的高手亲自授课，以及一些最流行的工具库， 值得学习。</p>\\n<!-- more -->\\n<ul>\\n<li>台湾大学李宏毅老师的机器学习和深度学习课程，<a href=\\\"http://speech.ee.ntu.edu.tw/~tlkagk/courses.html%EF%BC%8C\\\">http://speech.ee.ntu.edu.tw/~tlkagk/courses.html，</a> bilibili上有视频：<a href=\\\"https://www.bilibili.com/video/av10590361/\\\">https://www.bilibili.com/video/av10590361/</a> , <a href=\\\"https://www.bilibili.com/video/av9770302/\\\">https://www.bilibili.com/video/av9770302/</a> 。 另外有个很好的pdf可以快速了解机器学习内容：<a href=\\\"https://www.slideshare.net/tw_dsconf/ss-62245351\\\">https://www.slideshare.net/tw_dsconf/ss-62245351</a> </li>\\n<li>Fast.ai课程，<a href=\\\"http://course.fast.ai/\\\">http://course.fast.ai/</a> ， 中文版<a href=\\\"http://geek.ai100.com.cn/tag/fast-ai\\\">http://geek.ai100.com.cn/tag/fast-ai</a> ，已完成，这个是我目前觉得最好的课程。</li>\\n<li>Andrew NG <a href=\\\"https://www.coursera.org/learn/machine-learning\\\">https://www.coursera.org/learn/machine-learning</a> （已完成）</li>\\n<li>Andrew NG Unsupervised Feature Learning and Deep Learning <a href=\\\"http://deeplearning.stanford.edu/tutorial/\\\">http://deeplearning.stanford.edu/tutorial/</a> （学习ing）</li>\\n<li><a href=\\\"http://neuralnetworksanddeeplearning.com/\\\">http://neuralnetworksanddeeplearning.com/</a> （已完成）</li>\\n<li>Andrew NG, standford的机器学习课程之一， <a href=\\\"http://cs229.stanford.edu/\\\">http://cs229.stanford.edu/</a></li>\\n<li>Neural Networks for Machine Learning <a href=\\\"https://www.coursera.org/learn/neural-networks\\\">https://www.coursera.org/learn/neural-networks</a> by Geoffrey Hinton, Professor(深度学习创始人) （学习中），有点后悔， 这个课程并不是适合初学者。参考<a href=\\\"https://www.quora.com/Is-it-wise-to-learn-deep-learning-from-Hintons-course-on-Coursera\\\">这里</a></li>\\n<li>李飞飞课程<a href=\\\"http://cs231n.github.io/\\\">http://cs231n.github.io/</a></li>\\n<li>斯坦福自然语言处理 <a href=\\\"http://web.stanford.edu/class/cs224n/\\\">http://web.stanford.edu/class/cs224n/</a></li>\\n<li>Tensorflow for Deep Learning Research <a href=\\\"http://web.stanford.edu/class/cs20si/\\\">http://web.stanford.edu/class/cs20si/</a></li>\\n<li>伯克利人工智能课程 <a href=\\\"http://www-inst.eecs.berkeley.edu/~cs188/archives.html\\\">http://www-inst.eecs.berkeley.edu/~cs188/archives.html</a></li>\\n<li><a href=\\\"http://www.deeplearningbook.org/\\\">http://www.deeplearningbook.org/</a>, by Ian Goodfellow and Yoshua Bengio（深度学习四大金刚之一） and Aaron Courville</li>\\n<li>udacity深度学习课程tensorflow <a href=\\\"https://classroom.udacity.com/courses/ud730/\\\">https://classroom.udacity.com/courses/ud730/</a> （已完成）</li>\\n<li><a href=\\\"https://keras.io\\\">https://keras.io</a></li>\\n<li><a href=\\\"https://scikit-learn.org\\\">https://scikit-learn.org</a></li>\\n<li><a href=\\\"https://www.tensorflow.org\\\">https://www.tensorflow.org</a></li>\\n<li><a href=\\\"http://deeplearning.net/\\\">http://deeplearning.net/</a></li>\\n<li><a href=\\\"https://www.kaggle.com\\\">https://www.kaggle.com</a></li>\\n</ul>\",\"timeToRead\":2,\"excerpt\":\"…\",\"fields\":{\"slug\":\"/ml-content/\"},\"frontmatter\":{\"title\":\"机器学习计划\",\"date\":\"2017-02-12\",\"category\":\"ML\",\"tags\":[\"AI\",\"ML\",\"machine learning\",\"deep learning\",\"深度学习\"]}}},{\"node\":{\"html\":\"<h1 id=\\\"什么是贝塞尔曲线\\\"><a href=\\\"#%E4%BB%80%E4%B9%88%E6%98%AF%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>什么是贝塞尔曲线</h1>\\n<p>最近做一个动画效果时需要将物体做曲线移动， 本来记得css3里的动画是可以指定beizer curve的， 结果用的时候发现css3的beizer curve只用来做easing timing function。简单来说就是拿来控制动画“非线性”移动，比如越来越快（ease-in）， 越来越慢（ease-out），先慢后快再慢（ease-in-out）等， 让动画效果更“灵动”， 避免线性（linear）的死板。</p>\\n<p>可以看看这两个页面， 有一个直观的感受。</p>\\n<!-- more -->\\n<ul>\\n<li><a href=\\\"http://cubic-bezier.com/\\\">http://cubic-bezier.com/</a></li>\\n<li><a href=\\\"http://easings.net/zh-cn\\\">http://easings.net/zh-cn</a></li>\\n</ul>\\n<p>beizer curve在css3中的使用， 可以自己google一下， 或者看下：</p>\\n<ul>\\n<li><a href=\\\"http://www.w3school.com.cn/css3/css3_transition.asp\\\">http://www.w3school.com.cn/css3/css3_transition.asp</a></li>\\n<li><a href=\\\"http://www.ruanyifeng.com/blog/2014/02/css_transition_and_animation.html\\\">http://www.ruanyifeng.com/blog/2014/02/css<em>transition</em>and_animation.html</a></li>\\n</ul>\\n<p>引用wiki上的介绍：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">    在数学的数值分析领域中，贝塞尔曲线（英语：Bézier curve）是计算机图形学中相当重要的参数曲线。更高维度的广泛化贝塞尔曲线就称作贝塞尔曲面，其中贝塞尔三角是一种特殊的实例。\\n    贝塞尔曲线于1962年，由法国工程师皮埃尔·贝塞尔（Pierre Bézier）所广泛发表，他运用贝塞尔曲线来为汽车的主体进行设计。贝塞尔曲线最初由Paul de Casteljau于1959年运用de Casteljau算法开发，以稳定数值的方法求出贝塞尔曲线。</code></pre>\\n      </div>\\n<p>有数学功底或者有兴趣的可以参考下面几篇文章， 我就不赘述了（最讨厌那种什么都要copy过来，弄得好像跟是自己写的样， 别人已经写得很清楚了， 干嘛再重复劳动一遍呢， 又没有自己的新的见解，赠人链接， 手留余香。 😁哈）。</p>\\n<ul>\\n<li><a href=\\\"https://en.wikipedia.org/wiki/B%C3%A9zier_curve\\\">https://en.wikipedia.org/wiki/B%C3%A9zier_curve</a></li>\\n<li><a href=\\\"https://zh.wikipedia.org/wiki/%E8%B2%9D%E8%8C%B2%E6%9B%B2%E7%B7%9A\\\">https://zh.wikipedia.org/wiki/%E8%B2%9D%E8%8C%B2%E6%9B%B2%E7%B7%9A</a></li>\\n<li><a href=\\\"http://www.html-js.com/article/1628\\\">http://www.html-js.com/article/1628</a></li>\\n<li><a href=\\\"http://www.cnblogs.com/hnfxs/p/3148483.html\\\">http://www.cnblogs.com/hnfxs/p/3148483.html</a></li>\\n<li></li>\\n</ul>\\n<h1 id=\\\"在线工具\\\"><a href=\\\"#%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>在线工具</h1>\\n<p>下面是几个比较有用的工具， 方便大家。</p>\\n<ul>\\n<li><a href=\\\"http://blogs.sitepointstatic.com/examples/tech/canvas-curves/quadratic-curve.html\\\">http://blogs.sitepointstatic.com/examples/tech/canvas-curves/quadratic-curve.html</a></li>\\n<li><a href=\\\"http://myst729.github.io/bezier-curve/\\\">http://myst729.github.io/bezier-curve/</a></li>\\n<li><a href=\\\"http://xuanfengge.com/easeing/ceaser/\\\">http://xuanfengge.com/easeing/ceaser/</a></li>\\n<li><a href=\\\"http://yisibl.github.io/cubic-bezier/#.17,.67,.83,.67\\\">http://yisibl.github.io/cubic-bezier/#.17,.67,.83,.67</a></li>\\n<li><a href=\\\"http://cubic-bezier.com/#.17,.67,.83,.67\\\">http://cubic-bezier.com/#.17,.67,.83,.67</a></li>\\n</ul>\\n<h1 id=\\\"实现\\\"><a href=\\\"#%E5%AE%9E%E7%8E%B0\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>实现</h1>\\n<p>前面资料都是把bezier curve拿来当timing function的， 而我的需求是要让物体（某个dom节点）沿着某条beizer curve移动，于是继续google， 找到了几个。</p>\\n<ul>\\n<li>Android实现: <a href=\\\"https://github.com/Yasic/QQBubbleView\\\">https://github.com/Yasic/QQBubbleView</a></li>\\n</ul>\\n<p>Android的我用不到， 放这里主要是里面的gif图很直观，哈哈。</p>\\n<ul>\\n<li>CSS实现：<a href=\\\"http://jinlong.github.io/2016/01/14/moving-along-a-curved-path-in-css-with-layered-animation/%EF%BC%8C\\\">http://jinlong.github.io/2016/01/14/moving-along-a-curved-path-in-css-with-layered-animation/，</a> 原文：<a href=\\\"http://tobiasahlin.com/blog/curved-path-animations-in-css/\\\">http://tobiasahlin.com/blog/curved-path-animations-in-css/</a></li>\\n</ul>\\n<p>CSS的实现真是相当tricky， 我解释一下。CSS里面的animation translate是直接按照直线移动到目的地的， 这是因为沿X轴和Y轴都是匀速运动（linear），所以合成之后的速度必然是斜角45°移动过去的。我们可以把X轴看成时间轴， 这时如果Y轴的移动函数是某个beizer curve，那合成之后的移动曲线就是beizer curve了。具体实现的时候还用到了:after伪元素了。</p>\\n<p>复杂一点的我觉得还是需要用js去控制， 于是自然想到了用js代码去按照beizer curve公式实现。</p>\\n<ul>\\n<li>JS实现： <a href=\\\"http://blog.csdn.net/cuixiping/article/details/6872095\\\">http://blog.csdn.net/cuixiping/article/details/6872095</a></li>\\n</ul>\\n<p>这个用的公式不直观，应该是进行了变换之后的， 我直接照着公式写了一个。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"gatsby-highlight-code-line\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">PointOnCubicBezier2</span><span class=\\\"token punctuation\\\">(</span>cp<span class=\\\"token punctuation\\\">,</span> t<span class=\\\"token punctuation\\\">)</span>  <span class=\\\"token punctuation\\\">{</span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">   <span class=\\\"token comment\\\">// B(t) = P0 * (1-t)^3 + 3 * P1 * t * (1-t)^2 + 3 * P2 * t^2 * (1-t) + P3 * t^3</span>\\n</span>        <span class=\\\"token keyword\\\">const</span> one_t <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1.0</span> <span class=\\\"token operator\\\">-</span> t<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">P0</span> <span class=\\\"token operator\\\">=</span> cp<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">P1</span> <span class=\\\"token operator\\\">=</span> cp<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">P2</span> <span class=\\\"token operator\\\">=</span> cp<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">P3</span> <span class=\\\"token operator\\\">=</span> cp<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> x <span class=\\\"token operator\\\">=</span>  <span class=\\\"token punctuation\\\">(</span><span class=\\\"token constant\\\">P0</span><span class=\\\"token punctuation\\\">.</span>x <span class=\\\"token operator\\\">*</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pow</span><span class=\\\"token punctuation\\\">(</span>one_t<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">3</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token constant\\\">P1</span><span class=\\\"token punctuation\\\">.</span>x <span class=\\\"token operator\\\">*</span> t <span class=\\\"token operator\\\">*</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pow</span><span class=\\\"token punctuation\\\">(</span>one_t<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">3</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token constant\\\">P2</span><span class=\\\"token punctuation\\\">.</span>x <span class=\\\"token operator\\\">*</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pow</span><span class=\\\"token punctuation\\\">(</span>t<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">*</span> one_t <span class=\\\"token operator\\\">+</span> <span class=\\\"token constant\\\">P3</span><span class=\\\"token punctuation\\\">.</span>x <span class=\\\"token operator\\\">*</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pow</span><span class=\\\"token punctuation\\\">(</span>t<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> y <span class=\\\"token operator\\\">=</span>  <span class=\\\"token punctuation\\\">(</span><span class=\\\"token constant\\\">P0</span><span class=\\\"token punctuation\\\">.</span>y <span class=\\\"token operator\\\">*</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pow</span><span class=\\\"token punctuation\\\">(</span>one_t<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">3</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token constant\\\">P1</span><span class=\\\"token punctuation\\\">.</span>y <span class=\\\"token operator\\\">*</span> t <span class=\\\"token operator\\\">*</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pow</span><span class=\\\"token punctuation\\\">(</span>one_t<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">3</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token constant\\\">P2</span><span class=\\\"token punctuation\\\">.</span>y <span class=\\\"token operator\\\">*</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pow</span><span class=\\\"token punctuation\\\">(</span>t<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">*</span> one_t <span class=\\\"token operator\\\">+</span> <span class=\\\"token constant\\\">P3</span><span class=\\\"token punctuation\\\">.</span>y <span class=\\\"token operator\\\">*</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pow</span><span class=\\\"token punctuation\\\">(</span>t<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> pointF <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Point2D</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">return</span> pointF<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>对比了一下两个函数的输出值， 完全是一样的， 应该就是数学变换而已， 我懒得去做推倒了。</p>\\n<p>后来找到一个三阶beizer curve的实现，看这里\\n<a href=\\\"https://github.com/gre/bezier-easing%EF%BC%8C\\\">https://github.com/gre/bezier-easing，</a> 这个实现可能有点NB，以至于<a href=\\\"https://facebook.github.io/react-native/\\\">React Native</a>、<a href=\\\"http://velocityjs.org/\\\">Velocity</a>等项目都使用了，屌屌的。</p>\\n<p>用<a href=\\\"https://github.com/bestiejs/benchmark.js\\\">benchmark</a>跑一下分：<a href=\\\"https://jsperf.com/beizer-curve5\\\">看这里</a>， chrome下我写的方法居然慢了94%！看样子代码可读性是要付出代价的哈。我还是老老实实用<a href=\\\"https://github.com/gre/bezier-easing%E5%90%A7%E3%80%82\\\">https://github.com/gre/bezier-easing吧。</a></p>\\n<p>刚刚又搜到一篇文章， 讲解地更细致深入， 害得我不想继续写了。 直接看这里吧。<a href=\\\"http://www.jianshu.com/p/55c721887568\\\">http://www.jianshu.com/p/55c721887568</a></p>\\n<h1 id=\\\"如何将多个点用贝塞尔曲线连起来\\\"><a href=\\\"#%E5%A6%82%E4%BD%95%E5%B0%86%E5%A4%9A%E4%B8%AA%E7%82%B9%E7%94%A8%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF%E8%BF%9E%E8%B5%B7%E6%9D%A5\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>如何将多个点用贝塞尔曲线连起来</h1>\\n<ul>\\n<li><a href=\\\"http://www.zheng-hang.com/?id=43\\\">http://www.zheng-hang.com/?id=43</a></li>\\n<li><a href=\\\"http://www.cnblogs.com/hnfxs/p/3148743.html\\\">http://www.cnblogs.com/hnfxs/p/3148743.html</a></li>\\n</ul>\",\"timeToRead\":4,\"excerpt\":\"什么是贝塞尔曲线 最近做一个动画效果时需要将物体做曲线移动， 本来记得css3里的动画是可以指定beizer curve的， 结果用的时候发现css3的beizer curve只用来做easing timing function…\",\"fields\":{\"slug\":\"/bezier-curve/\"},\"frontmatter\":{\"title\":\"bezier-curve\",\"date\":\"2016-11-29\",\"category\":\"FE\",\"tags\":[\"js\",\"css\",\"animation\",\"beizer curve\"]}}},{\"node\":{\"html\":\"<p>用了一年多的<a href=\\\"https://facebook.github.io/react/\\\">React</a>，真是爽的不要不要的， 谁用谁知道， 一般人我不告诉他！</p>\\n<p>最近用的过程中发现console里面总是出现这样的警告</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">react.js:20478 Warning: setState(...): Can only update a mounted or mounting component. This usually means you called setState() on an unmounted component. This is a no-op. Please check the code for the Small component.</code></pre>\\n      </div>\\n<p>虽不影响使用， 但是对于一个有代码洁癖的有追求的程序员来说， 怎么受得了呢！</p>\\n<p>react的error或者warning信息还是写得比较好的， 从上面我们可以看出原因是我们在一个unmounted的component上调用setState方法。分析业务代码， 发现是某个弹窗component需要从server加载数据， 有时候网络慢， 还没有加载出来用户就把弹窗关了， 所以对应的component变成了unmounted， 等到fetch请求成功之后， 再调用setState就warning了。</p>\\n<p>为了方便分析问题， 我把问题简化了， 同时为了用户直接能在浏览器打开看到效果， 而不用nodejs、npm、babel、webpack、react等一堆东西install半天， 我直接引用了react cdn上的文件。代码如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\"><span class=\\\"token doctype\\\">&lt;!DOCTYPE html></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>html</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>meta</span> <span class=\\\"token attr-name\\\">charset</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>UTF-8<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>title</span><span class=\\\"token punctuation\\\">></span></span>Hello World<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>title</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://unpkg.com/react@latest/dist/react.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://unpkg.com/react-dom@latest/dist/react-dom.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://unpkg.com/babel-standalone@6.15.0/babel.min.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">id</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>root<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>text/babel<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\">\\n\\n  <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Big</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n        small<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token function-variable function\\\">closeSmall</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'closeSmall'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> small<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>h1<span class=\\\"token operator\\\">></span>hello <span class=\\\"token keyword\\\">from</span> Big Component <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h1<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>h2 onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>closeSmall<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>close small <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h2<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>small <span class=\\\"token operator\\\">?</span> <span class=\\\"token operator\\\">&lt;</span>Small <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Small</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n        data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'init data'</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token function\\\">componentDidMount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'componentDidMount'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fetch data from server succeed...'</span><span class=\\\"token punctuation\\\">)</span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`this._isMounted: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_isMounted<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'data from server'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5000</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>h1<span class=\\\"token operator\\\">></span>hello <span class=\\\"token keyword\\\">from</span> Small Component <span class=\\\"token operator\\\">...</span>  <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h1<span class=\\\"token operator\\\">></span>\\n        data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n      ReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token operator\\\">&lt;</span>Big <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\n        document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'root'</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>html</span><span class=\\\"token punctuation\\\">></span></span></code></pre>\\n      </div>\\n<p>代码里面用setTimeout模拟了从server获取数据， 大家如果在5s内点击close small， 就可以重现这个问题。</p>\\n<p>问题的解决方法很自然地想到，如果可以在setState之前检查一下this component是否还是mounted状态就可以了。查react的文档，发现原来之前确实是有isMounted()这个方法的， 不过已经不推荐使用了， 因为<a href=\\\"https://facebook.github.io/react/blog/2015/12/16/ismounted-antipattern.html\\\">isMounted is an Antipattern</a>。</p>\\n<p>第一种解决方法就是自己模拟实现isMounted这个方法， 虽然已经被贴上Antipattern的标签， 但是有些时候用这种方法还是比较方便的。代码如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\"><span class=\\\"token doctype\\\">&lt;!DOCTYPE html></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>html</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>meta</span> <span class=\\\"token attr-name\\\">charset</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>UTF-8<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>title</span><span class=\\\"token punctuation\\\">></span></span>Hello World<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>title</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://unpkg.com/react@latest/dist/react.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://unpkg.com/react-dom@latest/dist/react-dom.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://unpkg.com/babel-standalone@6.15.0/babel.min.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">id</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>root<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>text/babel<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\">\\n\\n  <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Big</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n        small<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token function-variable function\\\">closeSmall</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'closeSmall'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> small<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>h1<span class=\\\"token operator\\\">></span>hello <span class=\\\"token keyword\\\">from</span> Big Component <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h1<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>h2 onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>closeSmall<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>close small <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h2<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>small <span class=\\\"token operator\\\">?</span> <span class=\\\"token operator\\\">&lt;</span>Small <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Small</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n        data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'init data'</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_isMounted <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token function\\\">componentDidMount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_isMounted <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'componentDidMount'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fetch data from server succeed...'</span><span class=\\\"token punctuation\\\">)</span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`this._isMounted: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_isMounted<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_isMounted<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'data from server'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5000</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token function\\\">componentWillUnmount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_isMounted <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>h1<span class=\\\"token operator\\\">></span>hello <span class=\\\"token keyword\\\">from</span> Small Component <span class=\\\"token operator\\\">...</span>  <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h1<span class=\\\"token operator\\\">></span>\\n        data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n      ReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token operator\\\">&lt;</span>Big <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\n        document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'root'</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>html</span><span class=\\\"token punctuation\\\">></span></span></code></pre>\\n      </div>\\n<p>对于callback现在已经有更好的解决方案， 伟大的<a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\\\">Promise</a>！如果这个promise能在componentWillUnmount()的时候cancel掉就完美了。可惜google之后发现官方Promise实现目前并不支持cancel！<a href=\\\"http://stackoverflow.com/questions/29478751/how-to-cancel-an-emcascript6-vanilla-javascript-promise-chain\\\">看这里</a>， 还有<a href=\\\"http://stackoverflow.com/questions/30233302/promise-is-it-possible-to-force-cancel-a-promise\\\">这里</a>，所以除非你使用第三方Promise库， 比如据说性能比原生还好的<a href=\\\"http://bluebirdjs.com/docs/api/cancellation.html\\\">Bluebird</a>。</p>\\n<p>当然有些时候没必要搞这么复杂， facebook的<a href=\\\"https://facebook.github.io/react/blog/2015/12/16/ismounted-antipattern.html\\\">文档</a>给了一个简易的cancelable的Promise。最好代码如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\"><span class=\\\"token doctype\\\">&lt;!DOCTYPE html></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>html</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>meta</span> <span class=\\\"token attr-name\\\">charset</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>UTF-8<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>title</span><span class=\\\"token punctuation\\\">></span></span>Hello World<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>title</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://unpkg.com/react@latest/dist/react.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://unpkg.com/react-dom@latest/dist/react-dom.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://unpkg.com/babel-standalone@6.15.0/babel.min.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">id</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>root<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>text/babel<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\">\\n\\n  <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Big</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n      small<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function-variable function\\\">closeSmall</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'closeSmall'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> small<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>h1<span class=\\\"token operator\\\">></span>hello <span class=\\\"token keyword\\\">from</span> Component <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h1<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>h2 onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>closeSmall<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>close small <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h2<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>small <span class=\\\"token operator\\\">?</span> <span class=\\\"token operator\\\">&lt;</span>Small <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Small</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n      data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'init data'</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">componentDidMount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'componentDidMount'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>cancelablePromise <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">makeCancelable</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fetch data from server succeed...'</span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'data from server'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5000</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>cancelablePromise\\n      <span class=\\\"token punctuation\\\">.</span>promise\\n      <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>data <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'resolved: '</span><span class=\\\"token punctuation\\\">,</span> data<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> data <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">catch</span><span class=\\\"token punctuation\\\">(</span>reason <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>reason<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">' isCanceled'</span><span class=\\\"token punctuation\\\">,</span> reason<span class=\\\"token punctuation\\\">.</span>isCanceled<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">componentWillUnmount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>cancelablePromise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">cancel</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span><span class=\\\"token comment\\\">// Cancel the promise</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>h1<span class=\\\"token operator\\\">></span>hello <span class=\\\"token keyword\\\">from</span> Small Component <span class=\\\"token operator\\\">...</span>  <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>h1<span class=\\\"token operator\\\">></span>\\n      data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">makeCancelable</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>promise<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> hasCanceled_ <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> wrappedPromise <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>val<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n      hasCanceled_ <span class=\\\"token operator\\\">?</span> <span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> isCanceled<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>val<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">catch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>error<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n      hasCanceled_ <span class=\\\"token operator\\\">?</span> <span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> isCanceled<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span>error<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    promise<span class=\\\"token punctuation\\\">:</span> wrappedPromise<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token function\\\">cancel</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      hasCanceled_ <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n      ReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token operator\\\">&lt;</span>Big <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\n        document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'root'</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>html</span><span class=\\\"token punctuation\\\">></span></span></code></pre>\\n      </div>\\n<p>well, it’s ok now!</p>\",\"timeToRead\":4,\"excerpt\":\"用了一年多的 React ，真是爽的不要不要的， 谁用谁知道， 一般人我不告诉他！ 最近用的过程中发现console里面总是出现这样的警告 虽不影响使用， 但是对于一个有代码洁癖的有追求的程序员来说， 怎么受得了呢！ react的error或者warning…\",\"fields\":{\"slug\":\"/react-ismounted-is-an-antipattern/\"},\"frontmatter\":{\"title\":\"react系列之isMounted is an Antipattern\",\"date\":\"2016-11-19\",\"category\":\"FE\",\"tags\":[\"react\"]}}},{\"node\":{\"html\":\"<p><a href=\\\"http://blog.coderzh.com/2015/09/13/use-webhook-automated-deploy-hugo/?hmsr=toutiao.io&#x26;utm_medium=toutiao.io&#x26;utm_source=toutiao.io\\\">http://blog.coderzh.com/2015/09/13/use-webhook-automated-deploy-hugo/?hmsr=toutiao.io&#x26;utm<em>medium=toutiao.io&#x26;utm</em>source=toutiao.io</a></p>\\n<p>…</p>\",\"timeToRead\":1,\"excerpt\":\"http://blog.coderzh.com/2015/09/13/use-webhook-automated-deploy-hugo/?hmsr=toutiao.io&utm medium=toutiao.io&utm source=toutiao.io …\",\"fields\":{\"slug\":\"/auto-deploy-githubPages-by-webhook-md/\"},\"frontmatter\":{\"title\":\"利用webhook实现github pages的自动部署\",\"date\":\"2015-09-16\",\"category\":\"default\",\"tags\":[\"github\",\"webhook\",\"ssh\"]}}},{\"node\":{\"html\":\"<p>javascript es6 arrow function.</p>\\n<!-- more -->\\n<p>开始学习ES6.\\n<a href=\\\"https://hacks.mozilla.org/category/es6-in-depth/\\\">https://hacks.mozilla.org/category/es6-in-depth/</a></p>\",\"timeToRead\":1,\"excerpt\":\"javascript es6 arrow function. 开始学习ES6.\\n https://hacks.mozilla.org/category/es6-in-depth/\",\"fields\":{\"slug\":\"/js-arrow-functions-md/\"},\"frontmatter\":{\"title\":\"javascript箭头函数\",\"date\":\"2015-09-07\",\"category\":\"JS\",\"tags\":[\"js\",\"javascript\",\"es6\"]}}},{\"node\":{\"html\":\"<p>微信公共号现在很火，一些简单的应用，做一个公共号比开发一款app成本要小很多，而且利用朋友圈的转发，相比app去app store里上架等着用户下载，要容易很多。</p>\\n<p>但是微信公共号的调试有点不方便，必须在微信<a href=\\\"https://mp.weixin.qq.com/\\\">管理后台</a>配置一个微信能访问到（公网）的url，然后在公共号里输入内容，微信以xml格式转发给这个url，url回复之后微信再将response回复给使用公共号的微信用户。当然微信也提供了<a href=\\\"http://mp.weixin.qq.com/debug\\\">调试工具</a>， 可以直接构造数据，方便调试各个接口。 但是依然需要一个公网的url作为接口。于是最原始的开发方式就是，修改代码，上传到server，（如果是有些静态语言还需要重启服务器），然后看是否正常work，如果不行的话，在可能错误的地方打出log，然后又是修改代码，上传server，重启。。。。。就这样，每次改一点点，你都可以泡杯咖啡了，老板就会觉得你很闲。参看<a href=\\\"http://www.oschina.net/news/15579/reasons-why-people-who-work-with-computers-seem-to\\\">为什么搞计算机工作的人总是看上去很清闲</a>。</p>\\n<!-- more -->\\n<p>有没有办法可以直接在本地调试呢，简单说，就是微信把数据传到我本地的电脑上，我每次改完代码，不用重新上传server，直接在本地加log等。经过研究，找到几个方法，记录下来，与大家分享，绝对能节约很多很多很多时间，然后就可以去陪妹纸了， 如果你有的话，没有的话<a href=\\\"http://www.zhihu.com/question/20385321\\\">here</a>。</p>\\n<p>第一种方法，你本地电脑有公网ip。比如家里宽带，没用路由，直接把网线插上，应该就是公网IP，吧。 如果家里有多人使用，你可以再路由器里配置NAT地址转换。自行<a href=\\\"https://www.google.com.hk/webhp?sourceid=chrome-instant&#x26;ion=1&#x26;espv=2&#x26;ie=UTF-8#q=NAT%20%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2\\\">Google</a>吧。</p>\\n<p>第二种，也是我搜到的最多的，用ngrok这个神器！网上一堆资料，比如<a href=\\\"http://www.mbnow.tk/2014/12/05/ngrok/\\\">这个</a>，我Google到的最多的也是这个，而且看上去也应该很简单。 <a href=\\\"http://www.oray.com/\\\">花生壳</a>我10年前用过（x，不小心暴露年龄了），应该是一样的。网上说，缺点是</p>\\n<blockquote>\\n<p>不过 ngrok 速度较慢，微信服务器对实时性要求较高，每次通信超过 5 秒便超时，所以此法也不建议使用。</p>\\n</blockquote>\\n<p>我觉得用花生壳的话可能好点，因为是国内的（有兴趣的可以自己去试试哈）。没有用ngrok试一下，因为“无法显示此网页”！网上就是“骗子”多，明明没有的网站，大家都描绘的绘声绘色。</p>\\n<p>第三种，用ssh建立反向通道。对了，使用此种方法，你还是需要一个公网IP的。 作为一名专业工程师，拥有公网 ip 地址的 VPS 服务器基本成了标配，<a href=\\\"http://www.qcloud.com/redirect.php?redirect=1002&#x26;cps_key=0a3641075e434bf76a016a44d2918e4a\\\">腾讯云VPS</a> 最便宜的一款每年也就几百块钱，平时挂挂自己喜欢的服务，做个站长，跑跑自己的开源项目甚爽。</p>\\n<ol>\\n<li>申请<a href=\\\"http://www.qcloud.com/redirect.php?redirect=1001&#x26;cps_key=0a3641075e434bf76a016a44d2918e4a\\\">腾讯云</a></li>\\n<li>本地安装ssh，如果是linux或mac，都是自带的。如果是windows的话，可以安装<a href=\\\"https://www.cygwin.com/\\\">Cygwin</a>，如果你嫌弃它太重了，安装了<a href=\\\"https://git-scm.com/download/gui/win\\\">Git</a>也是可以的。如果你也不想装或者不会装Git，额，(⊙o⊙)…，好吧，那你还是不要写程序了。</li>\\n<li>\\n<p>建立ssh反向通道。\\n这一步里有很多坑，我花了差不多一天才完全搞定。你们可以先参考这几篇文章，了解下原理啥的。</p>\\n<ul>\\n<li><a href=\\\"http://blog.zjutoe.net/?p=95\\\">http://blog.zjutoe.net/?p=95</a></li>\\n<li><a href=\\\"http://my.oschina.net/abcfy2/blog/177094\\\">http://my.oschina.net/abcfy2/blog/177094</a></li>\\n<li><a href=\\\"http://www.zzbaike.com/wiki/PuTTY/Putty%E5%BB%BA%E7%AB%8B%E9%9A%A7%E9%81%93%E7%9A%84%E6%96%B9%E6%B3%95\\\">http://www.zzbaike.com/wiki/PuTTY/Putty%E5%BB%BA%E7%AB%8B%E9%9A%A7%E9%81%93%E7%9A%84%E6%96%B9%E6%B3%95</a></li>\\n<li><a href=\\\"http://www.freeoa.net/osuport/netmanage/linux-ssh-tunneling-proxy_1892.html\\\">http://www.freeoa.net/osuport/netmanage/linux-ssh-tunneling-proxy_1892.html</a></li>\\n<li><a href=\\\"https://qdan.me/list/VOSXmsI4tv7fIciF\\\">https://qdan.me/list/VOSXmsI4tv7fIciF</a></li>\\n</ul>\\n</li>\\n</ol>\\n<p>好吧，来看我的具体一步一步做法。</p>\\n<ol>\\n<li>\\n<p>ssh -R 9999:localhost:9000 ubuntu@myserver<em>ip</em>address，输入密码</p>\\n</li>\\n<li>\\n<p>server上查看一下是否监听了9999端口，netstat -anltp | grep 9999</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">ubuntu@VM-39-45-ubuntu:~$ <span class=\\\"token function\\\">netstat</span> -anltp <span class=\\\"token operator\\\">|</span> <span class=\\\"token function\\\">grep</span> 9999\\n<span class=\\\"token punctuation\\\">(</span>Not all processes could be identified, non-owned process info\\nwill not be shown, you would have to be root to see it all.<span class=\\\"token punctuation\\\">)</span>\\ntcp        0      0 127.0.0.1:9999          0.0.0.0:*               LISTEN      -\\ntcp6       0      0 ::1:9999                :::*                    LISTEN      -</code></pre>\\n      </div>\\n</li>\\n<li>\\n<p>在本地9000（我用的<a href=\\\"https://www.playframework.com/documentation/1.3.x/home\\\">play 1</a>，可以了解下它到底为啥这么好用<a href=\\\"http://segmentfault.com/a/1190000000374033\\\">Play Framework —— Java开发者的梦想框架</a>）上开启web服务</p>\\n</li>\\n<li>\\n<p>在浏览器里输入<a href=\\\"http://myserver_ip_address:9999%EF%BC%8C\\\">http://myserver<em>ip</em>address:9999，</a> 居然是没有响应！奇怪！直接在server上用curl <a href=\\\"http://localhost:9999\\\">http://localhost:9999</a> 是可以的！仔细看netstat输出，发现监听的9999端口是本地的！！！也就是说只能在本地访问，那有xx用啊！！！</p>\\n</li>\\n<li>\\n<p>看看ssh —help， 原来是可以指定bind_address的， man ssh看看</p>\\n<blockquote>\\n<p>By default, the listening socket on the server will be bound to the loopback interface only.  This may be overridden by specifying a bind<em>address. An empty bind</em>address, or the address ‘*’, indicates that the remote socket should listen on all interfaces.  Specifying a remote bind<em>address will only succeed if the server’s GatewayPorts option is enabled (see sshd</em>config(5)).</p>\\n</blockquote>\\n</li>\\n</ol>\\n<p>  继续看看 man sshd_config</p>\\n<blockquote>\\n<p>GatewayPorts\\nSpecifies whether remote hosts are allowed to connect to ports forwarded for the client.  By default, sshd(8) binds remote port forwardings to the\\nloopback address.  This prevents other remote hosts from connecting to forwarded ports.  GatewayPorts can be used to specify that sshd should allow</p>\\n</blockquote>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">remote port forwardings to bind to non-loopback addresses, thus allowing other hosts to connect.  The argument may be “no” to force remote port\\nforwardings to be available to the local host only, “yes” to force remote port forwardings to bind to the wildcard address, or “clientspecified” to\\nallow the client to select the address to which the forwarding is bound.  The default is “no”.</code></pre>\\n      </div>\\n<p> sudo vim /etc/ssh/sshd<em>config，添加GatewayPorts clientspecified，GatewayPorts yes也可以，退出，sudo service sshd restart，重启ssh服务。重新ssh -R :9999:localhost:9000 ubuntu@myserver</em>ip<em>address（仔细看，就9999前多了一个冒号:），输入密码，netstat -anltp | grep 9999，果然\\n<code class=\\\"language-text\\\">tcp        0      0 0.0.0.0:9999            0.0.0.0:*               LISTEN      -\\n\\ttcp6       0      0 :::9999                 :::*                    LISTEN      -</code>\\n浏览器里输入<a href=\\\"http://myserver\\\">http://myserver</a></em>ip_address:9999， 这回可以看到本地打出日志了。</p>\\n<ol start=\\\"6\\\">\\n<li>\\n<p>然后发现微信里面配置的url只能是80端口。简单，直接改成ssh -R :80:localhost:9000 ubuntu@myserver<em>ip</em>address就可以了，吧！奇怪，直接访问<a href=\\\"http://myserver_ip_address%EF%BC%8C\\\">http://myserver<em>ip</em>address，</a> 打不开网页！用netstat -anltp | grep 80，居然什么都没有！说明server没有在80端口监听呀！哦，对了ubuntu低于1024的端口是需要用root权限的。</p>\\n</li>\\n<li>\\n<p>ubuntu里root默认是关闭的。sudo passwd root，设置root密码后，可以打开。还需要在sudo vim /etc/ssh/sshd_config\\t添加</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">#PermitRootLogin without-password\\nPermitRootLogin yes</code></pre>\\n      </div>\\n</li>\\n<li>\\n<p>重启ssh，再重新用root账号连接，ssh -R :80:localhost:9000 root@myserver<em>ip</em>address， 一切ok，<a href=\\\"http://myserver_ip_address%EF%BC%8C\\\">http://myserver<em>ip</em>address，</a> 本地代码打出日志，说明流量已经导入到本地了。</p>\\n</li>\\n<li>\\n<p>最后，就可以在<a href=\\\"http://mp.weixin.qq.com/debug\\\">微信公众平台接口调试工具</a>里调试了，配合<a href=\\\"http://playframework.com/\\\">Play!</a>的hot reload，随时修改代码，加log，然后马上就可以看到效果，不用重新编译，不用上传server，不用重启。。。。生活真是幸福美满啊。。。。</p>\\n</li>\\n<li>\\n<p>几个问题说明：</p>\\n<ol>\\n<li>直接用ssh连接的话，断开之后端口映射就没有了，可以用autossh， 只是我就是临时需要调试用的时候才ssh建立反向隧道，所以我不用autossh。</li>\\n<li>直接用root登陆ssh，开通80端口。应该是有安全隐患的， 吧！对安全不是很了解，但感觉直接用root肯定不是最佳实践。网上有各种方法解决这个问题，比如用iptables端口映射，或者nginx反向代理的，<a href=\\\"http://stackoverflow.com/questions/23281895/node-js-eacces-error-when-listening-on-http-80-port-permission-denied\\\">看这里</a>，参看1的原因，我没有采用。还是一次focus一个点吧，不然光环境就配置几天，有点太慢了。</li>\\n</ol>\\n</li>\\n</ol>\\n<p>通过本文的配置，可以在本地方便的开发调试微信公共号了。但是对于微信提供的<a href=\\\"http://mp.weixin.qq.com/wiki/7/aaa137b55fb2e0456bf8dd9148dd613f.html\\\">JS-SDK</a>，又存在另外的问题，这个我会<a href=\\\"http://my.oschina.net/magicly007/blog/480704\\\">另外写一篇blog来解决</a>。毕竟，我们程序员应该坚持<a href=\\\"https://en.wikipedia.org/wiki/Single_responsibility_principle\\\">Single responsibility principle</a>嘛。</p>\\n<h1 id=\\\"refers\\\"><a href=\\\"#refers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Refers</h1>\\n<ol>\\n<li><a href=\\\"http://www.mbnow.tk/2014/12/05/ngrok/\\\">http://www.mbnow.tk/2014/12/05/ngrok/</a></li>\\n<li><a href=\\\"http://my.oschina.net/jfinal/blog/336861\\\">http://my.oschina.net/jfinal/blog/336861</a></li>\\n<li><a href=\\\"http://www.mbnow.tk/2014/12/05/ngrok/\\\">http://www.mbnow.tk/2014/12/05/ngrok/</a></li>\\n<li><a href=\\\"http://liyaodong.com/2015/07/06/%E5%BE%AE%E4%BF%A1%E8%B0%83%E8%AF%95%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/\\\">http://liyaodong.com/2015/07/06/%E5%BE%AE%E4%BF%A1%E8%B0%83%E8%AF%95%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/</a></li>\\n<li><a href=\\\"http://my.oschina.net/abcfy2/blog/177094\\\">http://my.oschina.net/abcfy2/blog/177094</a></li>\\n<li><a href=\\\"http://www.zhihu.com/question/25456655\\\">http://www.zhihu.com/question/25456655</a></li>\\n<li><a href=\\\"http://my.oschina.net/atanl/blog/391611\\\">http://my.oschina.net/atanl/blog/391611</a></li>\\n</ol>\\n<blockquote>\\n<p>Written with <a href=\\\"https://stackedit.io/\\\">StackEdit</a>.</p>\\n</blockquote>\",\"timeToRead\":5,\"excerpt\":\"微信公共号现在很火，一些简单的应用，做一个公共号比开发一款app成本要小很多，而且利用朋友圈的转发，相比app去app store里上架等着用户下载，要容易很多。 但是微信公共号的调试有点不方便，必须在微信 管理后台 配置一个微信能访问到（公网）的url…\",\"fields\":{\"slug\":\"/ssh-reverse-tunnel-wx-local/\"},\"frontmatter\":{\"title\":\"利用SSH反向通道在本地调试微信公共号\",\"date\":\"2015-07-26\",\"category\":\"weixin\",\"tags\":[\"ssh\",\"weixin\",\"微信\"]}}},{\"node\":{\"html\":\"<p>引用<a href=\\\"http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html\\\">阮老师</a>的话，</p>\\n<blockquote>\\n<p>喜欢写Blog的人，会经历三个阶段。</p>\\n</blockquote>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">第一阶段，刚接触Blog，觉得很新鲜，试着选择一个免费空间来写。\\n第二阶段，发现免费空间限制太多，就自己购买域名和空间，搭建独立博客。\\n第三阶段，觉得独立博客的管理太麻烦，最好在保留控制权的前提下，让别人来管，自己只负责写文章。</code></pre>\\n      </div>\\n<p>自己比较懒惰，也就偶尔在<a href=\\\"http://my.oschina.net/magicly007/blog\\\">OC</a>上写点闲散的笔记，最近觉得还是应该要把自己的知识系统地梳理一下，便决定开一个独立的域名，自己记录Blog。</p>\\n<p>之前就了解Github Pages，也断断续续用MarkDown写过几篇放着，但是没有用<a href=\\\"http://jekyllrb.com/\\\">jekyll</a>，或者<a href=\\\"http://octopress.org/\\\">octpress</a>等串起来，上个月再次想配置好jekyll，结果在mac下始终配置不好（怪我咯）。今天决定一定要配置好，搜集了大量资料（google “jekyll 像黑客一样”），结果意外在<a href=\\\"http://www.douban.com/group/topic/39939196/\\\">http://www.douban.com/group/topic/39939196/</a>的回复中看到“用pelican吧 python的 还有hexo是nodejs的 ”。因为最近刚好在看nodejs，觉得很有兴趣，于是改为尝试<a href=\\\"https://hexo.io/zh-cn/\\\">hexo</a>。</p>\\n<!-- more -->\\n<h1 id=\\\"简介\\\"><a href=\\\"#%E7%AE%80%E4%BB%8B\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>简介</h1>\\n<p><a href=\\\"http://ibruce.info/2013/11/22/hexo-your-blog/\\\">http://ibruce.info/2013/11/22/hexo-your-blog/</a></p>\\n<blockquote>\\n<p>hexo出自台湾大学生<a href=\\\"https://twitter.com/tommy351\\\">tommy351</a>之手，是一个基于<a href=\\\"https://nodejs.org/\\\">Node.js</a>的静态博客程序，其编译上百篇文字只需要几秒。hexo生成的静态网页可以直接放到GitHub Pages，BAE，SAE等平台上。先看看tommy是如何吐槽Octopress的 →＿→ <a href=\\\"http://zespia.tw/blog/2012/10/11/hexo-debut/\\\">Hexo颯爽登場</a>。</p>\\n</blockquote>\\n<h1 id=\\\"安装\\\"><a href=\\\"#%E5%AE%89%E8%A3%85\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>安装</h1>\\n<p>首先安装Node.js，然后运行</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">\\t<span class=\\\"token function\\\">npm</span> <span class=\\\"token function\\\">install</span> -g hexo-cli\\n\\t<span class=\\\"token function\\\">npm</span> <span class=\\\"token function\\\">install</span> hexo --save</code></pre>\\n      </div>\\n<h1 id=\\\"初始化配置\\\"><a href=\\\"#%E5%88%9D%E5%A7%8B%E5%8C%96%E9%85%8D%E7%BD%AE\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>初始化配置</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">\\thexo init\\n\\t<span class=\\\"token function\\\">npm</span> <span class=\\\"token function\\\">install</span></code></pre>\\n      </div>\\n<h1 id=\\\"写blog\\\"><a href=\\\"#%E5%86%99blog\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>写blog</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">\\thexo n</code></pre>\\n      </div>\\n<h1 id=\\\"生成\\\"><a href=\\\"#%E7%94%9F%E6%88%90\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>生成</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">\\thexo g</code></pre>\\n      </div>\\n<h1 id=\\\"本地预览\\\"><a href=\\\"#%E6%9C%AC%E5%9C%B0%E9%A2%84%E8%A7%88\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>本地预览</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">\\thexo s</code></pre>\\n      </div>\\n<h1 id=\\\"发布\\\"><a href=\\\"#%E5%8F%91%E5%B8%83\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>发布</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">\\thexo d</code></pre>\\n      </div>\\n<p>实在觉得没必<a href=\\\"https://en.wikipedia.org/wiki/Reinventing_the_wheel\\\">重复造轮子</a>，重写已经有很详细资料的东西。强烈推荐<a href=\\\"http://ibruce.info/2013/11/22/hexo-your-blog/\\\">这篇</a>。 我觉得基本涵盖了方方面面，如果以后有新东西这里面没有的，我再写吧~</p>\\n<h1 id=\\\"refers\\\"><a href=\\\"#refers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Refers</h1>\\n<ol>\\n<li><a href=\\\"http://ibruce.info/2013/11/22/hexo-your-blog/\\\">http://ibruce.info/2013/11/22/hexo-your-blog/</a></li>\\n<li><a href=\\\"http://wsgzao.github.io/post/hexo-guide/\\\">http://wsgzao.github.io/post/hexo-guide/</a></li>\\n<li><a href=\\\"http://www.jianshu.com/p/05289a4bc8b2\\\">http://www.jianshu.com/p/05289a4bc8b2</a></li>\\n<li><a href=\\\"http://yangjian.me/workspace/building-blog-with-hexo/\\\">http://yangjian.me/workspace/building-blog-with-hexo/</a></li>\\n<li><a href=\\\"http://yangjian.me/workspace/building-blog-with-hexo/\\\">http://yangjian.me/workspace/building-blog-with-hexo/</a></li>\\n<li><a href=\\\"http://blog.csdn.net/jackystudio/article/details/16117585\\\">http://blog.csdn.net/jackystudio/article/details/16117585</a></li>\\n</ol>\\n<blockquote>\\n<p>Written with <a href=\\\"https://stackedit.io/\\\">StackEdit</a>.</p>\\n</blockquote>\",\"timeToRead\":2,\"excerpt\":\"引用 阮老师 的话， 喜欢写Blog的人，会经历三个阶段。 自己比较懒惰，也就偶尔在 OC 上写点闲散的笔记，最近觉得还是应该要把自己的知识系统地梳理一下，便决定开一个独立的域名，自己记录Blog。 之前就了解Github Pages，也断断续续用MarkDown…\",\"fields\":{\"slug\":\"/my-first-hexo-blog/\"},\"frontmatter\":{\"title\":\"我的第一个hexo Blog\",\"date\":\"2015-07-26\",\"category\":\"default\",\"tags\":[\"hexo\",\"github\",\"githubPages\"]}}},{\"node\":{\"html\":\"<p>需要在代码里面发邮件是很经常的事情，包括找回密码，通知用户领奖，监控报警等。</p>\\n<p>在Java里面实现比较简单，Oracle自己提供了<a href=\\\"http://www.oracle.com/technetwork/java/javasebusiness/downloads/java-archive-downloads-eeplat-419426.html#javamail-1.4.7-oth-JPR\\\">JavaMail</a>， 不过API比较底层，用起来不方便，可以自己封装下，也可以直接使用Apache的开源项目<a href=\\\"https://commons.apache.org/proper/commons-email/\\\">Commons Email</a>。 下面的代码，可以以小马哥的名义给自己发邮件，该功能仅用于测试，请谨慎使用，产生的问题，本人概不负责。 /微笑</p>\\n<!-- more -->\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code class=\\\"language-java\\\"><span class=\\\"token keyword\\\">import</span> org<span class=\\\"token punctuation\\\">.</span>apache<span class=\\\"token punctuation\\\">.</span>commons<span class=\\\"token punctuation\\\">.</span>mail<span class=\\\"token punctuation\\\">.</span>EmailAttachment<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> org<span class=\\\"token punctuation\\\">.</span>apache<span class=\\\"token punctuation\\\">.</span>commons<span class=\\\"token punctuation\\\">.</span>mail<span class=\\\"token punctuation\\\">.</span>EmailException<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> org<span class=\\\"token punctuation\\\">.</span>apache<span class=\\\"token punctuation\\\">.</span>commons<span class=\\\"token punctuation\\\">.</span>mail<span class=\\\"token punctuation\\\">.</span>MultiPartEmail<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">import</span> java<span class=\\\"token punctuation\\\">.</span>net<span class=\\\"token punctuation\\\">.</span>MalformedURLException<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> java<span class=\\\"token punctuation\\\">.</span>net<span class=\\\"token punctuation\\\">.</span>URL<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/**\\n * Created by magicalli on 2015/7/6.\\n */</span>\\n<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">MultiPartEmailTest</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">static</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span>String<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> args<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throws</span> EmailException<span class=\\\"token punctuation\\\">,</span> MalformedURLException <span class=\\\"token punctuation\\\">{</span>\\n        MultiPartEmail email <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">MultiPartEmail</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        email<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setHostName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"smtp.tencent.com\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">//        email.setAuthentication(\\\"youremail@tencent.com\\\", \\\"***\\\");//邮件服务器验证：用户名/密码</span>\\n        email<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setCharset</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"UTF-8\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        email<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setFrom</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"pony@qq.com\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"马化腾\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        email<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">addTo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"magicalli@tencent.com\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        email<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setSubject</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"加油奋斗！\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        email<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setMsg</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"come on! 加油奋斗吧，早晚有一天你会出任CEO，迎娶白富美，走上人生巅峰！ http://www.qq.com\\\\n\\\\n\\\\n pony\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        EmailAttachment attachment <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">EmailAttachment</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        attachment<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setPath</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"d:/lzl.jpg\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span><span class=\\\"token comment\\\">// 本地文件</span>\\n        attachment<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setDisposition</span><span class=\\\"token punctuation\\\">(</span>EmailAttachment<span class=\\\"token punctuation\\\">.</span>ATTACHMENT<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        attachment<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setDescription</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"林志玲1\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        attachment<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"lzl_1\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        email<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">attach</span><span class=\\\"token punctuation\\\">(</span>attachment<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        EmailAttachment attachment2 <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">EmailAttachment</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        attachment2<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setURL</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">URL</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"http://mat1.qq.com/datalib_img/star/pic/lib/2007-01-15/2007011511104716122311.jpg\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span><span class=\\\"token comment\\\">//远程文件, 如果不是qq.com域名下，内网是访问不了的哈</span>\\n        attachment2<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setDisposition</span><span class=\\\"token punctuation\\\">(</span>EmailAttachment<span class=\\\"token punctuation\\\">.</span>ATTACHMENT<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        attachment2<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setDescription</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"林志玲2\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        attachment2<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"lzl_2\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        email<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">attach</span><span class=\\\"token punctuation\\\">(</span>attachment2<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        email<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">send</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p><a href=\\\"https://commons.apache.org/proper/commons-email/\\\">Commons Email</a>支持好几种格式，包括简单文本，html，带附件等。需要的可以自己查看文档。</p>\\n<p>基于smtp的协议邮件协议很简单，大家甚至可以直接用telnet来发送，可以参考这边文章<a href=\\\"http://blog.csdn.net/ghsau/article/details/8602076\\\">Java Mail(一)：telnet实现发送收取邮件</a>. </p>\\n<p>一般公司内网没有验证发送方，你可以冒充公司任何一个员工发送邮件（包括你们老板），一般外面的邮件服务器，比如qq, 126, 163等，是需要验证密码的。</p>\\n<p>重申一遍，别用这个代码干坏事，后果自负， 与本人无关！</p>\\n<h1 id=\\\"refers\\\"><a href=\\\"#refers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Refers</h1>\\n<ol>\\n<li><a href=\\\"http://blog.csdn.net/ghsau/article/details/8602076\\\">http://blog.csdn.net/ghsau/article/details/8602076</a></li>\\n<li><a href=\\\"http://blog.csdn.net/ghsau/article/details/17839983\\\">http://blog.csdn.net/ghsau/article/details/17839983</a></li>\\n<li><a href=\\\"http://haolloyin.blog.51cto.com/1177454/354320\\\">http://haolloyin.blog.51cto.com/1177454/354320</a></li>\\n<li><a href=\\\"http://www.runoob.com/java/java-sending-email.html\\\">http://www.runoob.com/java/java-sending-email.html</a></li>\\n<li><a href=\\\"https://commons.apache.org/proper/commons-email/\\\">https://commons.apache.org/proper/commons-email/</a></li>\\n<li><a href=\\\"http://blog.csdn.net/qiaqia609/article/details/11580589\\\">http://blog.csdn.net/qiaqia609/article/details/11580589</a></li>\\n</ol>\\n<blockquote>\\n<p>Written with <a href=\\\"https://stackedit.io/\\\">StackEdit</a>.</p>\\n</blockquote>\",\"timeToRead\":2,\"excerpt\":\"需要在代码里面发邮件是很经常的事情，包括找回密码，通知用户领奖，监控报警等。 在Java里面实现比较简单，Oracle自己提供了 JavaMail ， 不过API比较底层，用起来不方便，可以自己封装下，也可以直接使用Apache的开源项目 Commons Email…\",\"fields\":{\"slug\":\"/java-email/\"},\"frontmatter\":{\"title\":\"Java发送邮件\",\"date\":\"2015-07-13\",\"category\":\"Java\",\"tags\":[\"Java\",\"Email\",\"JavaMail\",\"Apache Commons\"]}}}]}},\"pathContext\":{\"current\":5,\"skip\":40,\"total\":6}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/page-5.json\n// module id = 634\n// module chunks = 10891958300999"],"sourceRoot":""}
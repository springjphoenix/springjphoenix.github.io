{"version":3,"sources":["webpack:///path---ts-react-starter-731ffe901565dafba542.js","webpack:///./.cache/json/ts-react-starter.json"],"names":["webpackJsonp","724","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","timeToRead","frontmatter","date","category","tags","math","pathContext","prev","url","slug","next"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,iBAAAC,OAAA,YAA6CC,gBAAmBC,GAAA,2HAAAC,KAAA;AAA+72DC,WAAA,EAAAC,aAA41CN,MAAA,qBAAAO,KAAA,aAAAC,SAAA,KAAAC,MAAA,2BAAAC,KAAA,QAAkHC,aAAgBC,MAAQC,IAAA,2BAAAb,MAAA,6BAAqEc,KAAA,qBAAAC,MAAqCF,IAAA,eAAAb,MAAA","file":"path---ts-react-starter-731ffe901565dafba542.js","sourcesContent":["webpackJsonp([175816136313180],{\n\n/***/ 724:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Magicly's Blog\",\"author\":\"Magicly\"}},\"markdownRemark\":{\"id\":\"/Users/spring/Developer/Gatsby/springjphoenix.github.io/src/pages/ts-react-starter.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>Javascript作为一门动态语言， 简单易学，容易上手，非常适合web开发（浏览器也只支持JS啊）。但是随着项目逐渐变大，动态语言的弊端慢慢显露出来，比如没有编译器检查，代码质量不容易保证，IDE支持有限， 不便于重构等等， 而且JS设计之初比较仓促遗留了很多问题，好在ES6等后续版本慢慢修复了很多问题。也有各种尝试将其它语言编译成JS来做web开发，包括GWT、Dart、Java、Scala、Kotlin、Go等，而微软出的TypeScript由于一系列的优点，算是目前最流行的吧。当前Web开发基本是三大框架三分天下：Angular、React、Vue，而Angular本身就是TS开发的，React和Vue也支持TS开发。本文就简单介绍一下如何用TS开发React。</p>\\n<p>另外Facebook自己开发的Flow也可以给JS添加静态类型，我之前写过一篇文章介绍React Native里面如何使用Flow，有兴趣的可以移步<a href=\\\"http://gitbook.cn/gitchat/column/5a17c2e113c02f4a35ca5a7d/topic/5a17de4013c02f4a35ca67a6\\\">Flow使用</a>。</p>\\n<p>本文涵盖内容如下：</p>\\n<ul>\\n<li>TypeScript &#x26; React</li>\\n<li>TSLint</li>\\n<li>Jest &#x26; Enzyme</li>\\n<li>Redux</li>\\n</ul>\\n<!-- more -->\\n<h1 id=\\\"安装create-react-app\\\"><a href=\\\"#%E5%AE%89%E8%A3%85create-react-app\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>安装create-react-app</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> i -g create-react-app</code></pre>\\n      </div>\\n<h1 id=\\\"新建项目\\\"><a href=\\\"#%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>新建项目</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">create-react-app ts-react-demo --scripts-version<span class=\\\"token operator\\\">=</span>react-scripts-ts</code></pre>\\n      </div>\\n<p><a href=\\\"https://github.com/wmonk/create-react-app-typescript\\\">react-scripts-ts</a>是CRA的一个fork，可以很方便的开始使用TS。</p>\\n<p>项目初始结构为：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  ts-react-demo tree -L 1\\n<span class=\\\"token keyword\\\">.</span>\\n├── README.md\\n├── node_modules\\n├── package.json\\n├── public\\n├── src\\n├── tsconfig.json\\n├── tsconfig.test.json\\n├── tslint.json\\n└── yarn.lock\\n\\n3 directories, 6 files</code></pre>\\n      </div>\\n<p>其中：</p>\\n<ul>\\n<li>tsconfig.json是关于TS编译器的一些配置项；</li>\\n<li>tslint.json，是TSLint的配置文件，类似ESLint</li>\\n</ul>\\n<p>其他文件跟普通CRA建的项目一样。</p>\\n<h1 id=\\\"运行\\\"><a href=\\\"#%E8%BF%90%E8%A1%8C\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>运行</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> start</code></pre>\\n      </div>\\n<p>会自动启动浏览器打开<a href=\\\"http://localhost:3000\\\">http://localhost:3000</a> 。</p>\\n<h1 id=\\\"测试\\\"><a href=\\\"#%E6%B5%8B%E8%AF%95\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>测试</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> run <span class=\\\"token function\\\">test</span></code></pre>\\n      </div>\\n<p>会运行Jest做测试， 检查所有以<code class=\\\"language-text\\\">.test.ts</code>或者<code class=\\\"language-text\\\">.spec.ts</code>结尾的文件。</p>\\n<h1 id=\\\"打正式包\\\"><a href=\\\"#%E6%89%93%E6%AD%A3%E5%BC%8F%E5%8C%85\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>打正式包</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> run build</code></pre>\\n      </div>\\n<p>下面， 我们正式开始用TS来写React组件。</p>\\n<h1 id=\\\"创建组件\\\"><a href=\\\"#%E5%88%9B%E5%BB%BA%E7%BB%84%E4%BB%B6\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>创建组件</h1>\\n<p>我们写一个简单的<code class=\\\"language-text\\\">Counter</code>组件，接受<code class=\\\"language-text\\\">name</code>和<code class=\\\"language-text\\\">count</code>参数， 显示<code class=\\\"language-text\\\">Counter {name}: {count}</code>，可以如下调用：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Counter</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">count</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span></code></pre>\\n      </div>\\n<p>React里，最简单的写组件的方式是用函数定义，即所谓的<a href=\\\"https://react-course.magicfun.ai/basics/stateless-component.html\\\">Stateless Component</a>，定义如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// src/components/Counter.tsx</span>\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Props</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n  count<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> count <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> Props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    Counter <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>当然也可以用<code class=\\\"language-text\\\">class</code>的方式定义组件，写作如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Counter</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span><span class=\\\"token operator\\\">&lt;</span>Props<span class=\\\"token punctuation\\\">,</span> object<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> count <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n        Counter <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>这里<code class=\\\"language-text\\\">React.Component&lt;Props, object&gt;</code>第一个是<code class=\\\"language-text\\\">props</code>的参数类型， 第二个是<code class=\\\"language-text\\\">state</code>的类型。因为我们暂时用不到<code class=\\\"language-text\\\">state</code>，所以简单放一个<code class=\\\"language-text\\\">objcet</code>类型即可。</p>\\n<p>然后我们修改<code class=\\\"language-text\\\">index.tsx</code>文件：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-dom'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Hello <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./components/Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> registerServiceWorker <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./registerServiceWorker'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token string\\\">'./index.css'</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Hello</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'root'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> HTMLElement<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">registerServiceWorker</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>最后提一下<code class=\\\"language-text\\\">document.getElementById(&#39;root&#39;) as HTMLElement</code>是TS里的强制类型转化，因为<code class=\\\"language-text\\\">document.getElementById(&#39;root&#39;)</code>返回的类型是<code class=\\\"language-text\\\">HTMLElement | null</code>，即有可能为null。当然了， 如果html里面没有id是root的DOM，返回值就是null了。但是这里我们自己知道肯定有id是root的DOM的， 也就是说我们比TS编译器更清楚事实真相，所以可以用强制类型转化告诉编译器。PS, 其实不做貌似也没问题。</p>\\n<h1 id=\\\"添加样式\\\"><a href=\\\"#%E6%B7%BB%E5%8A%A0%E6%A0%B7%E5%BC%8F\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>添加样式</h1>\\n<p>前端开发，一个很重要的工作就是编写样式。CRA（也就是webpack和一堆loaders）支持直接<code class=\\\"language-text\\\">import css</code>，所以我们可以直接编写<code class=\\\"language-text\\\">src/components/Counter.css</code>，然后在<code class=\\\"language-text\\\">Counter.tsx</code>中<code class=\\\"language-text\\\">import</code>即可。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-css\\\"><code class=\\\"language-css\\\"><span class=\\\"token comment\\\">/* src/components/Counter.css */</span>\\n<span class=\\\"token selector\\\">.counter</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">text-align</span><span class=\\\"token punctuation\\\">:</span> center<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token property\\\">font-size</span><span class=\\\"token punctuation\\\">:</span> 48px<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token string\\\">'./Counter.css'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Props</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n  count<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> count <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> Props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    Counter <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>当然，由于CSS只有全局作用域，很容易出现命名冲突，现在越来越流行用CSSInJS来开发，推荐使用<a href=\\\"https://react-course.magicfun.ai/css/\\\">Styled Components</a>。</p>\\n<h1 id=\\\"测试-1\\\"><a href=\\\"#%E6%B5%8B%E8%AF%95-1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>测试</h1>\\n<p>我们用<a href=\\\"http://airbnb.io/enzyme/\\\">Enzyme</a>来做测试。首先安装依赖：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> i -D enzyme @types/enzyme react-addons-test-utils</code></pre>\\n      </div>\\n<p>其中<code class=\\\"language-text\\\">enzyme</code>是实际运行的代码， <code class=\\\"language-text\\\">@types/enzyme</code>是类型声明文件，类似于C/C++中的<code class=\\\"language-text\\\">.h</code>文件。</p>\\n<p>然后我们就可以写测试代码了：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// src/components/Counter.test.tsx</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> enzyme <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'enzyme'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Counter <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">it</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'renders the correct text when count is not given'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> hello <span class=\\\"token operator\\\">=</span> enzyme<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">shallow</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Counter</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>hello<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'.counter'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">text</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toEqual</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Counter counter1: 1'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><strong>注意！！！</strong>：这里我遇到一些问题， 直接执行<code class=\\\"language-text\\\">npm run test</code>，报错：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">Error: Cannot <span class=\\\"token function\\\">find</span> module <span class=\\\"token string\\\">'./development/fe/ts-react-demo/node_modules/jest-cli'</span></code></pre>\\n      </div>\\n<p>发现<code class=\\\"language-text\\\">jest-cli</code>目录为空：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  ts-react-demo git:<span class=\\\"token punctuation\\\">(</span>master<span class=\\\"token punctuation\\\">)</span> ✗ ll node_modules/jest-cli\\ntotal 0\\ndrwxr-xr-x  3 magicly  staff    96B  2 24 12:12 node_modules</code></pre>\\n      </div>\\n<p>而重新用<code class=\\\"language-text\\\">yarn</code>安装所有依赖， 则正常了：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  ts-react-demo git:<span class=\\\"token punctuation\\\">(</span>master<span class=\\\"token punctuation\\\">)</span> ✗ ll node_modules/jest-cli\\ntotal 16\\n-rw-r--r--   1 magicly  staff   595B  5 12  2017 README.md\\ndrwxr-xr-x   3 magicly  staff    96B  2 24 12:16 bin\\ndrwxr-xr-x  23 magicly  staff   736B  2 24 12:16 build\\ndrwxr-xr-x   3 magicly  staff    96B  2 24 12:16 node_modules\\n-rw-r--r--   1 magicly  staff   1.7K  5 24  2017 package.json</code></pre>\\n      </div>\\n<p>貌似<code class=\\\"language-text\\\">jest</code>跟<code class=\\\"language-text\\\">yarn</code>更适合？\\n然后执行<code class=\\\"language-text\\\">npm run test</code>报错：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">FAIL  src/components/Counter.test.tsx\\n  ● renders the correct text when no count is given\\n\\n\\n          Enzyme Internal Error: Enzyme expects an adapter to be configured, but found none. To\\n          configure an adapter, you should call <span class=\\\"token variable\\\"><span class=\\\"token variable\\\">`</span>Enzyme.configure<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> adapter: new Adapter<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token variable\\\">`</span></span>\\n          before using any of Enzyme<span class=\\\"token string\\\">'s top level APIs, where <span class=\\\"token variable\\\"><span class=\\\"token variable\\\">`</span>Adapter<span class=\\\"token variable\\\">`</span></span> is the adapter\\n          corresponding to the library currently being tested. For example:\\n\\n          import Adapter from '</span>enzyme-adapter-react-15'<span class=\\\"token punctuation\\\">;</span>\\n\\n          To <span class=\\\"token function\\\">find</span> out <span class=\\\"token function\\\">more</span> about this, see http://airbnb.io/enzyme/docs/installation/index.html</code></pre>\\n      </div>\\n<p>因为我们用的Reactv16，安装相应adapter即可：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> i -D enzyme-adapter-react-16</code></pre>\\n      </div>\\n<p>结果，很奇怪，<code class=\\\"language-text\\\">jest-cli</code>又被清空了！又重新用<code class=\\\"language-text\\\">yarn</code>安装了一次，ok了， 看样子以后用CRA的话还是用yarn吧，毕竟都是Facebook的产品。</p>\\n<p>还会报错说没有<code class=\\\"language-text\\\">enzyme-adapter-react-16</code>的类型定义信息， 于是安装之: <code class=\\\"language-text\\\">yarn add -D @types/enzyme-adapter-react-16</code>。 一起正常了！</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"> PASS  src/components/Counter.test.tsx\\n  ✓ renders the correct text when count is not given <span class=\\\"token punctuation\\\">(</span>3ms<span class=\\\"token punctuation\\\">)</span>\\n  ✓ renders the correct text when count is given <span class=\\\"token punctuation\\\">(</span>1ms<span class=\\\"token punctuation\\\">)</span>\\n\\nTest Suites: 1 passed, 1 total\\nTests:       2 passed, 2 total\\nSnapshots:   0 total\\nTime:        0.597s, estimated 2s\\nRan all <span class=\\\"token function\\\">test</span> suites related to changed files.\\n\\nWatch Usage: Press w to show more.</code></pre>\\n      </div>\\n<p>最终测试代码如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// src/components/Counter.test.tsx</span>\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> enzyme <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'enzyme'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> Adapter <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'enzyme-adapter-react-16'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Counter <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n\\nenzyme<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">configure</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> adapter<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Adapter</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">it</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'renders the correct text when count is not given'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> hello <span class=\\\"token operator\\\">=</span> enzyme<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">shallow</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Counter</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>hello<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'.counter'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">text</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toEqual</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Counter counter1: 1'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">it</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'renders the correct text when count is given'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> hello <span class=\\\"token operator\\\">=</span> enzyme<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">shallow</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Counter</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">count</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>hello<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'.counter'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">text</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toEqual</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Counter counter1: 5'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h1 id=\\\"状态管理\\\"><a href=\\\"#%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>状态管理</h1>\\n<p>稍微复杂点的应用都需要专门的状态管理工具， 比较流行的有<a href=\\\"http://redux.js.org/\\\">Redux</a>和<a href=\\\"https://mobx.js.org/\\\">MobX</a>， 这里我们使用<a href=\\\"http://gitbook.cn/gitchat/column/5a17c2e113c02f4a35ca5a7d/topic/5a17ddd313c02f4a35ca676f\\\">更熟悉的Redux</a>, 以前做培训的时候录制过一个<a href=\\\"https://www.bilibili.com/video/av17174653/\\\">redux视频</a>，有兴趣的可以看看。</p>\\n<h2 id=\\\"安装redux\\\"><a href=\\\"#%E5%AE%89%E8%A3%85redux\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>安装redux</h2>\\n<p>首先我们还是安装<code class=\\\"language-text\\\">redux</code>和<code class=\\\"language-text\\\">react-redux</code>。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">yarn add redux react-redux @types/react-redux</code></pre>\\n      </div>\\n<p>这里我们只需要安装<code class=\\\"language-text\\\">react-redux</code>的types，因为<code class=\\\"language-text\\\">redux</code>包里自己包含了类型定义（现在很多流行的包都这样做了，也可以反映出TS的流行程度）。</p>\\n<p>redux有三个重要部分，分别是<code class=\\\"language-text\\\">state</code>, <code class=\\\"language-text\\\">action</code>和<code class=\\\"language-text\\\">reducer</code>，接下来我们分别介绍。</p>\\n<h2 id=\\\"state\\\"><a href=\\\"#state\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>state</h2>\\n<p>redux的设计原则是整个App里就只有一颗状态树，我们的应用比较简单，状态只有两个变量即可：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// src/types/index.tsx</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">StoreState</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n  count<span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h2 id=\\\"actions\\\"><a href=\\\"#actions\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>actions</h2>\\n<p>action就是简单的JS对象，只需要有<code class=\\\"language-text\\\">type</code>属性即可，为了便于重构，我们把用作<code class=\\\"language-text\\\">action.type</code>的字符串作为常量放在单独的文件。 </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// src/constants/index.ts</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">INCX</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'INC'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">DEC</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'DEC'</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>然后定义<code class=\\\"language-text\\\">action</code>文件：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> constants <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../constants'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ActionINC</span> <span class=\\\"token punctuation\\\">{</span>\\n  type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">typeof</span> constants<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">INC</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ActionDEC</span> <span class=\\\"token punctuation\\\">{</span>\\n  type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">typeof</span> constants<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">DEC</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> type ActionCount <span class=\\\"token operator\\\">=</span> ActionINC <span class=\\\"token operator\\\">|</span> ActionDEC<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">inc</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    type<span class=\\\"token punctuation\\\">:</span> constants<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">INC</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">dec</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    type<span class=\\\"token punctuation\\\">:</span> constants<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">DEC</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p><strong>注意</strong>，TS有<a href=\\\"https://www.typescriptlang.org/docs/handbook/advanced-types.html\\\">字符串字面量类型String Literal Types</a>，也就是说<code class=\\\"language-text\\\">typeof &#39;INC&#39;</code>类型也就是<code class=\\\"language-text\\\">&#39;INC&#39;</code>，但是不能把作为<code class=\\\"language-text\\\">type</code>的<code class=\\\"language-text\\\">&#39;INC&#39;</code>跟作为字符串本身的<code class=\\\"language-text\\\">&#39;INC&#39;</code>混淆。这就是为什么在定义<code class=\\\"language-text\\\">ActionINC</code>中，需要使用<code class=\\\"language-text\\\">typeof constants.INC</code>而不能直接使用<code class=\\\"language-text\\\">constants.INC</code>（会报找不到INC）。</p>\\n<p>如果觉得我们为了定义两个action写了太多<strong>boilerplate</strong>代码， 可以看一下<a href=\\\"https://github.com/reduxactions/redux-actions\\\">redux-actions</a>。</p>\\n<h2 id=\\\"reducers\\\"><a href=\\\"#reducers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>reducers</h2>\\n<p>redux中，reducer是一个pure function，接受之前的状态和当前的action，返回下一个状态，即：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token punctuation\\\">(</span>prevState<span class=\\\"token punctuation\\\">,</span> action<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> nextState</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// src/reducers/index.ts</span>\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> ActionCount <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../actions'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> StoreState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../types'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token constant\\\">INC</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">DEC</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../constants'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">reducer</span><span class=\\\"token punctuation\\\">(</span>prevState<span class=\\\"token punctuation\\\">:</span> StoreState<span class=\\\"token punctuation\\\">,</span> action<span class=\\\"token punctuation\\\">:</span> ActionCount<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span> StoreState <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>action<span class=\\\"token punctuation\\\">.</span>type<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token constant\\\">INC</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>prevState<span class=\\\"token punctuation\\\">,</span> count<span class=\\\"token punctuation\\\">:</span> prevState<span class=\\\"token punctuation\\\">.</span>count <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token constant\\\">DEC</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>prevState<span class=\\\"token punctuation\\\">,</span> count<span class=\\\"token punctuation\\\">:</span> prevState<span class=\\\"token punctuation\\\">.</span>count <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token keyword\\\">return</span> prevState<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h2 id=\\\"container-component\\\"><a href=\\\"#container-component\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Container Component</h2>\\n<p>一般在开发React应用时，我们会把控制显示的组件定义成无状态组件（Stateless Functional Component），然后在此基础上包装状态，控制逻辑。可以参考redux作者<a href=\\\"https://twitter.com/dan_abramov\\\">Dan Abramov</a>的这篇文章<a href=\\\"https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0\\\">Presentational and Container Components</a>。</p>\\n<p>我们先给<code class=\\\"language-text\\\">Presentational</code>组件<code class=\\\"language-text\\\">Counter</code>添加一些行为，可以增加和减少count。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// src/components/Counter.tsx</span>\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token string\\\">'./Counter.css'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Props</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n  count<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">;</span>\\n  onInc<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n  onDec<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> count <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> onInc<span class=\\\"token punctuation\\\">,</span> onDec <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> Props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    Counter <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onInc<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token operator\\\">+</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onDec<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token operator\\\">-</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>然后我们用<code class=\\\"language-text\\\">react-redux</code>的<code class=\\\"language-text\\\">connect</code>将<code class=\\\"language-text\\\">redux</code>的状态等跟<code class=\\\"language-text\\\">Counter</code>组件关联起来。<code class=\\\"language-text\\\">connect</code>函数接受两个参数：</p>\\n<ul>\\n<li>mapState2Props： 将state跟props关联起来，redux的state变化的时候自动触发props更新导致组件重新渲染</li>\\n<li>mapDispatch2Props： 将redux的dispatch传递给事件回调函数，用户触发redux的state更新</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// src/containers/Counter.tsx</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> connect<span class=\\\"token punctuation\\\">,</span> Dispatch <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-redux'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Counter <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../components/Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> actions <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../actions'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> StoreState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../types'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">mapState2Props</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> count <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> StoreState<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    name<span class=\\\"token punctuation\\\">,</span>\\n    count<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> mapDispatch2Props <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>dispatch<span class=\\\"token punctuation\\\">:</span> Dispatch<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>actions.ActionCount</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    onInc<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span>actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">inc</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    onDec<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span>actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">dec</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token function\\\">connect</span><span class=\\\"token punctuation\\\">(</span>mapState2Props<span class=\\\"token punctuation\\\">,</span> mapDispatch2Props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>Counter<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2 id=\\\"store\\\"><a href=\\\"#store\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Store</h2>\\n<p>最后，我们在最上层组件（通常是在index.tsx里），初始化redux的store，然后传递下去。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-dom'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> createStore <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'redux'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Provider <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-redux'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> StoreState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./types'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> reducer <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./reducers'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Hello <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./containers/Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> registerServiceWorker <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./registerServiceWorker'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token string\\\">'./index.css'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> store <span class=\\\"token operator\\\">=</span> createStore<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>StoreState</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">(</span>reducer<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'counter1'</span><span class=\\\"token punctuation\\\">,</span> count<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Provider</span> <span class=\\\"token attr-name\\\">store</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>store<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Hello</span> <span class=\\\"token punctuation\\\">/></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Provider</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">,</span>\\n  document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'root'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">registerServiceWorker</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>一切都搞定了。 最后，如果要部署上线的话， 请记得用<code class=\\\"language-text\\\">yarn run build</code>打包压缩代码，然后部署<code class=\\\"language-text\\\">build</code>目录下的文件即可。</p>\\n<p>本文代码托管在<a href=\\\"https://github.com/magicly/ts-react-demo\\\">https://github.com/magicly/ts-react-demo</a> ，随意使用~</p>\\n<h1 id=\\\"refers\\\"><a href=\\\"#refers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Refers</h1>\\n<ul>\\n<li><a href=\\\"https://github.com/Microsoft/TypeScript-React-Starter\\\">https://github.com/Microsoft/TypeScript-React-Starter</a></li>\\n<li><a href=\\\"https://github.com/wmonk/create-react-app-typescript\\\">https://github.com/wmonk/create-react-app-typescript</a></li>\\n<li><a href=\\\"https://www.typescriptlang.org/docs/home.html\\\">https://www.typescriptlang.org/docs/home.html</a></li>\\n<li><a href=\\\"http://airbnb.io/enzyme/\\\">http://airbnb.io/enzyme/</a></li>\\n</ul>\",\"timeToRead\":9,\"frontmatter\":{\"title\":\"TypeScript React入门\",\"date\":\"2018-02-24\",\"category\":\"FE\",\"tags\":[\"typescript\",\"ts\",\"react\"],\"math\":null}}},\"pathContext\":{\"prev\":{\"url\":\"/ts-reactnative-starter/\",\"title\":\"TypeScript React Native入门\"},\"slug\":\"/ts-react-starter/\",\"next\":{\"url\":\"/wechat-sdk/\",\"title\":\"接入微信SDK的坑s\"}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---ts-react-starter-731ffe901565dafba542.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Magicly's Blog\",\"author\":\"Magicly\"}},\"markdownRemark\":{\"id\":\"/Users/spring/Developer/Gatsby/springjphoenix.github.io/src/pages/ts-react-starter.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>Javascript作为一门动态语言， 简单易学，容易上手，非常适合web开发（浏览器也只支持JS啊）。但是随着项目逐渐变大，动态语言的弊端慢慢显露出来，比如没有编译器检查，代码质量不容易保证，IDE支持有限， 不便于重构等等， 而且JS设计之初比较仓促遗留了很多问题，好在ES6等后续版本慢慢修复了很多问题。也有各种尝试将其它语言编译成JS来做web开发，包括GWT、Dart、Java、Scala、Kotlin、Go等，而微软出的TypeScript由于一系列的优点，算是目前最流行的吧。当前Web开发基本是三大框架三分天下：Angular、React、Vue，而Angular本身就是TS开发的，React和Vue也支持TS开发。本文就简单介绍一下如何用TS开发React。</p>\\n<p>另外Facebook自己开发的Flow也可以给JS添加静态类型，我之前写过一篇文章介绍React Native里面如何使用Flow，有兴趣的可以移步<a href=\\\"http://gitbook.cn/gitchat/column/5a17c2e113c02f4a35ca5a7d/topic/5a17de4013c02f4a35ca67a6\\\">Flow使用</a>。</p>\\n<p>本文涵盖内容如下：</p>\\n<ul>\\n<li>TypeScript &#x26; React</li>\\n<li>TSLint</li>\\n<li>Jest &#x26; Enzyme</li>\\n<li>Redux</li>\\n</ul>\\n<!-- more -->\\n<h1 id=\\\"安装create-react-app\\\"><a href=\\\"#%E5%AE%89%E8%A3%85create-react-app\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>安装create-react-app</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> i -g create-react-app</code></pre>\\n      </div>\\n<h1 id=\\\"新建项目\\\"><a href=\\\"#%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>新建项目</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">create-react-app ts-react-demo --scripts-version<span class=\\\"token operator\\\">=</span>react-scripts-ts</code></pre>\\n      </div>\\n<p><a href=\\\"https://github.com/wmonk/create-react-app-typescript\\\">react-scripts-ts</a>是CRA的一个fork，可以很方便的开始使用TS。</p>\\n<p>项目初始结构为：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  ts-react-demo tree -L 1\\n<span class=\\\"token keyword\\\">.</span>\\n├── README.md\\n├── node_modules\\n├── package.json\\n├── public\\n├── src\\n├── tsconfig.json\\n├── tsconfig.test.json\\n├── tslint.json\\n└── yarn.lock\\n\\n3 directories, 6 files</code></pre>\\n      </div>\\n<p>其中：</p>\\n<ul>\\n<li>tsconfig.json是关于TS编译器的一些配置项；</li>\\n<li>tslint.json，是TSLint的配置文件，类似ESLint</li>\\n</ul>\\n<p>其他文件跟普通CRA建的项目一样。</p>\\n<h1 id=\\\"运行\\\"><a href=\\\"#%E8%BF%90%E8%A1%8C\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>运行</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> start</code></pre>\\n      </div>\\n<p>会自动启动浏览器打开<a href=\\\"http://localhost:3000\\\">http://localhost:3000</a> 。</p>\\n<h1 id=\\\"测试\\\"><a href=\\\"#%E6%B5%8B%E8%AF%95\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>测试</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> run <span class=\\\"token function\\\">test</span></code></pre>\\n      </div>\\n<p>会运行Jest做测试， 检查所有以<code class=\\\"language-text\\\">.test.ts</code>或者<code class=\\\"language-text\\\">.spec.ts</code>结尾的文件。</p>\\n<h1 id=\\\"打正式包\\\"><a href=\\\"#%E6%89%93%E6%AD%A3%E5%BC%8F%E5%8C%85\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>打正式包</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> run build</code></pre>\\n      </div>\\n<p>下面， 我们正式开始用TS来写React组件。</p>\\n<h1 id=\\\"创建组件\\\"><a href=\\\"#%E5%88%9B%E5%BB%BA%E7%BB%84%E4%BB%B6\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>创建组件</h1>\\n<p>我们写一个简单的<code class=\\\"language-text\\\">Counter</code>组件，接受<code class=\\\"language-text\\\">name</code>和<code class=\\\"language-text\\\">count</code>参数， 显示<code class=\\\"language-text\\\">Counter {name}: {count}</code>，可以如下调用：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Counter</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">count</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span></code></pre>\\n      </div>\\n<p>React里，最简单的写组件的方式是用函数定义，即所谓的<a href=\\\"https://react-course.magicfun.ai/basics/stateless-component.html\\\">Stateless Component</a>，定义如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// src/components/Counter.tsx</span>\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Props</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n  count<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> count <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> Props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    Counter <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>当然也可以用<code class=\\\"language-text\\\">class</code>的方式定义组件，写作如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Counter</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span><span class=\\\"token operator\\\">&lt;</span>Props<span class=\\\"token punctuation\\\">,</span> object<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> count <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n        Counter <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>这里<code class=\\\"language-text\\\">React.Component&lt;Props, object&gt;</code>第一个是<code class=\\\"language-text\\\">props</code>的参数类型， 第二个是<code class=\\\"language-text\\\">state</code>的类型。因为我们暂时用不到<code class=\\\"language-text\\\">state</code>，所以简单放一个<code class=\\\"language-text\\\">objcet</code>类型即可。</p>\\n<p>然后我们修改<code class=\\\"language-text\\\">index.tsx</code>文件：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-dom'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Hello <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./components/Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> registerServiceWorker <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./registerServiceWorker'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token string\\\">'./index.css'</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Hello</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'root'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> HTMLElement<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">registerServiceWorker</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>最后提一下<code class=\\\"language-text\\\">document.getElementById(&#39;root&#39;) as HTMLElement</code>是TS里的强制类型转化，因为<code class=\\\"language-text\\\">document.getElementById(&#39;root&#39;)</code>返回的类型是<code class=\\\"language-text\\\">HTMLElement | null</code>，即有可能为null。当然了， 如果html里面没有id是root的DOM，返回值就是null了。但是这里我们自己知道肯定有id是root的DOM的， 也就是说我们比TS编译器更清楚事实真相，所以可以用强制类型转化告诉编译器。PS, 其实不做貌似也没问题。</p>\\n<h1 id=\\\"添加样式\\\"><a href=\\\"#%E6%B7%BB%E5%8A%A0%E6%A0%B7%E5%BC%8F\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>添加样式</h1>\\n<p>前端开发，一个很重要的工作就是编写样式。CRA（也就是webpack和一堆loaders）支持直接<code class=\\\"language-text\\\">import css</code>，所以我们可以直接编写<code class=\\\"language-text\\\">src/components/Counter.css</code>，然后在<code class=\\\"language-text\\\">Counter.tsx</code>中<code class=\\\"language-text\\\">import</code>即可。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-css\\\"><code class=\\\"language-css\\\"><span class=\\\"token comment\\\">/* src/components/Counter.css */</span>\\n<span class=\\\"token selector\\\">.counter</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">text-align</span><span class=\\\"token punctuation\\\">:</span> center<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token property\\\">font-size</span><span class=\\\"token punctuation\\\">:</span> 48px<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token string\\\">'./Counter.css'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Props</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n  count<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> count <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> Props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    Counter <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>当然，由于CSS只有全局作用域，很容易出现命名冲突，现在越来越流行用CSSInJS来开发，推荐使用<a href=\\\"https://react-course.magicfun.ai/css/\\\">Styled Components</a>。</p>\\n<h1 id=\\\"测试-1\\\"><a href=\\\"#%E6%B5%8B%E8%AF%95-1\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>测试</h1>\\n<p>我们用<a href=\\\"http://airbnb.io/enzyme/\\\">Enzyme</a>来做测试。首先安装依赖：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> i -D enzyme @types/enzyme react-addons-test-utils</code></pre>\\n      </div>\\n<p>其中<code class=\\\"language-text\\\">enzyme</code>是实际运行的代码， <code class=\\\"language-text\\\">@types/enzyme</code>是类型声明文件，类似于C/C++中的<code class=\\\"language-text\\\">.h</code>文件。</p>\\n<p>然后我们就可以写测试代码了：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// src/components/Counter.test.tsx</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> enzyme <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'enzyme'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Counter <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">it</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'renders the correct text when count is not given'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> hello <span class=\\\"token operator\\\">=</span> enzyme<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">shallow</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Counter</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>hello<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'.counter'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">text</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toEqual</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Counter counter1: 1'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><strong>注意！！！</strong>：这里我遇到一些问题， 直接执行<code class=\\\"language-text\\\">npm run test</code>，报错：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">Error: Cannot <span class=\\\"token function\\\">find</span> module <span class=\\\"token string\\\">'./development/fe/ts-react-demo/node_modules/jest-cli'</span></code></pre>\\n      </div>\\n<p>发现<code class=\\\"language-text\\\">jest-cli</code>目录为空：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  ts-react-demo git:<span class=\\\"token punctuation\\\">(</span>master<span class=\\\"token punctuation\\\">)</span> ✗ ll node_modules/jest-cli\\ntotal 0\\ndrwxr-xr-x  3 magicly  staff    96B  2 24 12:12 node_modules</code></pre>\\n      </div>\\n<p>而重新用<code class=\\\"language-text\\\">yarn</code>安装所有依赖， 则正常了：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">➜  ts-react-demo git:<span class=\\\"token punctuation\\\">(</span>master<span class=\\\"token punctuation\\\">)</span> ✗ ll node_modules/jest-cli\\ntotal 16\\n-rw-r--r--   1 magicly  staff   595B  5 12  2017 README.md\\ndrwxr-xr-x   3 magicly  staff    96B  2 24 12:16 bin\\ndrwxr-xr-x  23 magicly  staff   736B  2 24 12:16 build\\ndrwxr-xr-x   3 magicly  staff    96B  2 24 12:16 node_modules\\n-rw-r--r--   1 magicly  staff   1.7K  5 24  2017 package.json</code></pre>\\n      </div>\\n<p>貌似<code class=\\\"language-text\\\">jest</code>跟<code class=\\\"language-text\\\">yarn</code>更适合？\\n然后执行<code class=\\\"language-text\\\">npm run test</code>报错：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">FAIL  src/components/Counter.test.tsx\\n  ● renders the correct text when no count is given\\n\\n\\n          Enzyme Internal Error: Enzyme expects an adapter to be configured, but found none. To\\n          configure an adapter, you should call <span class=\\\"token variable\\\"><span class=\\\"token variable\\\">`</span>Enzyme.configure<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> adapter: new Adapter<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token variable\\\">`</span></span>\\n          before using any of Enzyme<span class=\\\"token string\\\">'s top level APIs, where <span class=\\\"token variable\\\"><span class=\\\"token variable\\\">`</span>Adapter<span class=\\\"token variable\\\">`</span></span> is the adapter\\n          corresponding to the library currently being tested. For example:\\n\\n          import Adapter from '</span>enzyme-adapter-react-15'<span class=\\\"token punctuation\\\">;</span>\\n\\n          To <span class=\\\"token function\\\">find</span> out <span class=\\\"token function\\\">more</span> about this, see http://airbnb.io/enzyme/docs/installation/index.html</code></pre>\\n      </div>\\n<p>因为我们用的Reactv16，安装相应adapter即可：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> i -D enzyme-adapter-react-16</code></pre>\\n      </div>\\n<p>结果，很奇怪，<code class=\\\"language-text\\\">jest-cli</code>又被清空了！又重新用<code class=\\\"language-text\\\">yarn</code>安装了一次，ok了， 看样子以后用CRA的话还是用yarn吧，毕竟都是Facebook的产品。</p>\\n<p>还会报错说没有<code class=\\\"language-text\\\">enzyme-adapter-react-16</code>的类型定义信息， 于是安装之: <code class=\\\"language-text\\\">yarn add -D @types/enzyme-adapter-react-16</code>。 一起正常了！</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"> PASS  src/components/Counter.test.tsx\\n  ✓ renders the correct text when count is not given <span class=\\\"token punctuation\\\">(</span>3ms<span class=\\\"token punctuation\\\">)</span>\\n  ✓ renders the correct text when count is given <span class=\\\"token punctuation\\\">(</span>1ms<span class=\\\"token punctuation\\\">)</span>\\n\\nTest Suites: 1 passed, 1 total\\nTests:       2 passed, 2 total\\nSnapshots:   0 total\\nTime:        0.597s, estimated 2s\\nRan all <span class=\\\"token function\\\">test</span> suites related to changed files.\\n\\nWatch Usage: Press w to show more.</code></pre>\\n      </div>\\n<p>最终测试代码如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// src/components/Counter.test.tsx</span>\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> enzyme <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'enzyme'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> Adapter <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'enzyme-adapter-react-16'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Counter <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n\\nenzyme<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">configure</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> adapter<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Adapter</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">it</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'renders the correct text when count is not given'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> hello <span class=\\\"token operator\\\">=</span> enzyme<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">shallow</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Counter</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>hello<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'.counter'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">text</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toEqual</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Counter counter1: 1'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">it</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'renders the correct text when count is given'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> hello <span class=\\\"token operator\\\">=</span> enzyme<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">shallow</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Counter</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">count</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>hello<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">find</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'.counter'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">text</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toEqual</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Counter counter1: 5'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h1 id=\\\"状态管理\\\"><a href=\\\"#%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>状态管理</h1>\\n<p>稍微复杂点的应用都需要专门的状态管理工具， 比较流行的有<a href=\\\"http://redux.js.org/\\\">Redux</a>和<a href=\\\"https://mobx.js.org/\\\">MobX</a>， 这里我们使用<a href=\\\"http://gitbook.cn/gitchat/column/5a17c2e113c02f4a35ca5a7d/topic/5a17ddd313c02f4a35ca676f\\\">更熟悉的Redux</a>, 以前做培训的时候录制过一个<a href=\\\"https://www.bilibili.com/video/av17174653/\\\">redux视频</a>，有兴趣的可以看看。</p>\\n<h2 id=\\\"安装redux\\\"><a href=\\\"#%E5%AE%89%E8%A3%85redux\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>安装redux</h2>\\n<p>首先我们还是安装<code class=\\\"language-text\\\">redux</code>和<code class=\\\"language-text\\\">react-redux</code>。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">yarn add redux react-redux @types/react-redux</code></pre>\\n      </div>\\n<p>这里我们只需要安装<code class=\\\"language-text\\\">react-redux</code>的types，因为<code class=\\\"language-text\\\">redux</code>包里自己包含了类型定义（现在很多流行的包都这样做了，也可以反映出TS的流行程度）。</p>\\n<p>redux有三个重要部分，分别是<code class=\\\"language-text\\\">state</code>, <code class=\\\"language-text\\\">action</code>和<code class=\\\"language-text\\\">reducer</code>，接下来我们分别介绍。</p>\\n<h2 id=\\\"state\\\"><a href=\\\"#state\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>state</h2>\\n<p>redux的设计原则是整个App里就只有一颗状态树，我们的应用比较简单，状态只有两个变量即可：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// src/types/index.tsx</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">StoreState</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n  count<span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h2 id=\\\"actions\\\"><a href=\\\"#actions\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>actions</h2>\\n<p>action就是简单的JS对象，只需要有<code class=\\\"language-text\\\">type</code>属性即可，为了便于重构，我们把用作<code class=\\\"language-text\\\">action.type</code>的字符串作为常量放在单独的文件。 </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// src/constants/index.ts</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">INCX</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'INC'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">DEC</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'DEC'</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>然后定义<code class=\\\"language-text\\\">action</code>文件：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> constants <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../constants'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ActionINC</span> <span class=\\\"token punctuation\\\">{</span>\\n  type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">typeof</span> constants<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">INC</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ActionDEC</span> <span class=\\\"token punctuation\\\">{</span>\\n  type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">typeof</span> constants<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">DEC</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> type ActionCount <span class=\\\"token operator\\\">=</span> ActionINC <span class=\\\"token operator\\\">|</span> ActionDEC<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">inc</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    type<span class=\\\"token punctuation\\\">:</span> constants<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">INC</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">dec</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    type<span class=\\\"token punctuation\\\">:</span> constants<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">DEC</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p><strong>注意</strong>，TS有<a href=\\\"https://www.typescriptlang.org/docs/handbook/advanced-types.html\\\">字符串字面量类型String Literal Types</a>，也就是说<code class=\\\"language-text\\\">typeof &#39;INC&#39;</code>类型也就是<code class=\\\"language-text\\\">&#39;INC&#39;</code>，但是不能把作为<code class=\\\"language-text\\\">type</code>的<code class=\\\"language-text\\\">&#39;INC&#39;</code>跟作为字符串本身的<code class=\\\"language-text\\\">&#39;INC&#39;</code>混淆。这就是为什么在定义<code class=\\\"language-text\\\">ActionINC</code>中，需要使用<code class=\\\"language-text\\\">typeof constants.INC</code>而不能直接使用<code class=\\\"language-text\\\">constants.INC</code>（会报找不到INC）。</p>\\n<p>如果觉得我们为了定义两个action写了太多<strong>boilerplate</strong>代码， 可以看一下<a href=\\\"https://github.com/reduxactions/redux-actions\\\">redux-actions</a>。</p>\\n<h2 id=\\\"reducers\\\"><a href=\\\"#reducers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>reducers</h2>\\n<p>redux中，reducer是一个pure function，接受之前的状态和当前的action，返回下一个状态，即：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token punctuation\\\">(</span>prevState<span class=\\\"token punctuation\\\">,</span> action<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> nextState</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// src/reducers/index.ts</span>\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> ActionCount <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../actions'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> StoreState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../types'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token constant\\\">INC</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">DEC</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../constants'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">reducer</span><span class=\\\"token punctuation\\\">(</span>prevState<span class=\\\"token punctuation\\\">:</span> StoreState<span class=\\\"token punctuation\\\">,</span> action<span class=\\\"token punctuation\\\">:</span> ActionCount<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span> StoreState <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>action<span class=\\\"token punctuation\\\">.</span>type<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token constant\\\">INC</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>prevState<span class=\\\"token punctuation\\\">,</span> count<span class=\\\"token punctuation\\\">:</span> prevState<span class=\\\"token punctuation\\\">.</span>count <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token constant\\\">DEC</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>prevState<span class=\\\"token punctuation\\\">,</span> count<span class=\\\"token punctuation\\\">:</span> prevState<span class=\\\"token punctuation\\\">.</span>count <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token keyword\\\">return</span> prevState<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h2 id=\\\"container-component\\\"><a href=\\\"#container-component\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Container Component</h2>\\n<p>一般在开发React应用时，我们会把控制显示的组件定义成无状态组件（Stateless Functional Component），然后在此基础上包装状态，控制逻辑。可以参考redux作者<a href=\\\"https://twitter.com/dan_abramov\\\">Dan Abramov</a>的这篇文章<a href=\\\"https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0\\\">Presentational and Container Components</a>。</p>\\n<p>我们先给<code class=\\\"language-text\\\">Presentational</code>组件<code class=\\\"language-text\\\">Counter</code>添加一些行为，可以增加和减少count。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// src/components/Counter.tsx</span>\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token string\\\">'./Counter.css'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Props</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n  count<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token punctuation\\\">;</span>\\n  onInc<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n  onDec<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> count <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> onInc<span class=\\\"token punctuation\\\">,</span> onDec <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> Props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>counter<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    Counter <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onInc<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token operator\\\">+</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onDec<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token operator\\\">-</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>然后我们用<code class=\\\"language-text\\\">react-redux</code>的<code class=\\\"language-text\\\">connect</code>将<code class=\\\"language-text\\\">redux</code>的状态等跟<code class=\\\"language-text\\\">Counter</code>组件关联起来。<code class=\\\"language-text\\\">connect</code>函数接受两个参数：</p>\\n<ul>\\n<li>mapState2Props： 将state跟props关联起来，redux的state变化的时候自动触发props更新导致组件重新渲染</li>\\n<li>mapDispatch2Props： 将redux的dispatch传递给事件回调函数，用户触发redux的state更新</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// src/containers/Counter.tsx</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> connect<span class=\\\"token punctuation\\\">,</span> Dispatch <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-redux'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Counter <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../components/Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> actions <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../actions'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> StoreState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../types'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">mapState2Props</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> count <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span> StoreState<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    name<span class=\\\"token punctuation\\\">,</span>\\n    count<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> mapDispatch2Props <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>dispatch<span class=\\\"token punctuation\\\">:</span> Dispatch<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>actions.ActionCount</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    onInc<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span>actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">inc</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    onDec<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span>actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">dec</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token function\\\">connect</span><span class=\\\"token punctuation\\\">(</span>mapState2Props<span class=\\\"token punctuation\\\">,</span> mapDispatch2Props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>Counter<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2 id=\\\"store\\\"><a href=\\\"#store\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Store</h2>\\n<p>最后，我们在最上层组件（通常是在index.tsx里），初始化redux的store，然后传递下去。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-dom'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> createStore <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'redux'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Provider <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-redux'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> StoreState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./types'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> reducer <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./reducers'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Hello <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./containers/Counter'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> registerServiceWorker <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./registerServiceWorker'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token string\\\">'./index.css'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> store <span class=\\\"token operator\\\">=</span> createStore<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>StoreState</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">(</span>reducer<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'counter1'</span><span class=\\\"token punctuation\\\">,</span> count<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Provider</span> <span class=\\\"token attr-name\\\">store</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>store<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Hello</span> <span class=\\\"token punctuation\\\">/></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Provider</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">,</span>\\n  document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'root'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">registerServiceWorker</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>一切都搞定了。 最后，如果要部署上线的话， 请记得用<code class=\\\"language-text\\\">yarn run build</code>打包压缩代码，然后部署<code class=\\\"language-text\\\">build</code>目录下的文件即可。</p>\\n<p>本文代码托管在<a href=\\\"https://github.com/magicly/ts-react-demo\\\">https://github.com/magicly/ts-react-demo</a> ，随意使用~</p>\\n<h1 id=\\\"refers\\\"><a href=\\\"#refers\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Refers</h1>\\n<ul>\\n<li><a href=\\\"https://github.com/Microsoft/TypeScript-React-Starter\\\">https://github.com/Microsoft/TypeScript-React-Starter</a></li>\\n<li><a href=\\\"https://github.com/wmonk/create-react-app-typescript\\\">https://github.com/wmonk/create-react-app-typescript</a></li>\\n<li><a href=\\\"https://www.typescriptlang.org/docs/home.html\\\">https://www.typescriptlang.org/docs/home.html</a></li>\\n<li><a href=\\\"http://airbnb.io/enzyme/\\\">http://airbnb.io/enzyme/</a></li>\\n</ul>\",\"timeToRead\":9,\"frontmatter\":{\"title\":\"TypeScript React入门\",\"date\":\"2018-02-24\",\"category\":\"FE\",\"tags\":[\"typescript\",\"ts\",\"react\"],\"math\":null}}},\"pathContext\":{\"prev\":{\"url\":\"/ts-reactnative-starter/\",\"title\":\"TypeScript React Native入门\"},\"slug\":\"/ts-react-starter/\",\"next\":{\"url\":\"/wechat-sdk/\",\"title\":\"接入微信SDK的坑s\"}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/ts-react-starter.json\n// module id = 724\n// module chunks = 175816136313180"],"sourceRoot":""}
webpackJsonp([41777283506947],{725:function(n,s){n.exports={data:{site:{siteMetadata:{title:"Magicly's Blog",author:"Magicly"}},markdownRemark:{id:"/Users/spring/Developer/Gatsby/gatsby-blog/src/pages/ts-reactnative-starter.md absPath of file >>> MarkdownRemark",html:'<p><a href="https://magicly.me/ts-react-starter/">上一篇我们介绍了TypeScript如何跟React搭配使用</a>，这篇我们继续介绍如何在React Native中使用TS。</p>\n<p>关于React Native，我之前写过一本<a href="http://gitbook.cn/gitchat/column/5a17c2e113c02f4a35ca5a7d">React Native电子书</a>， 如果不熟悉RN的话可以参考一下。</p>\n<p>本文涵盖内容如下：</p>\n<ul>\n<li>TypeScript &#x26; React Native</li>\n<li>TSLint</li>\n<li>Jest</li>\n</ul>\n<!-- more -->\n<h1 id="准备知识"><a href="#%E5%87%86%E5%A4%87%E7%9F%A5%E8%AF%86" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>准备知识</h1>\n<p>本文假设读者已经知道如何用RN进行开发，至少是把开发环境搭建起来，能在模拟器或者手机上运行App了。如果不了解的话， 请参考<a href="http://gitbook.cn/gitchat/column/5a17c2e113c02f4a35ca5a7d">React Native 移动开发入门与实战</a>。</p>\n<h1 id="新建项目"><a href="#%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>新建项目</h1>\n<p>用<code class="language-text">react-native init</code>正常初始化一个RN项目。</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash">react-native init TSReactNativeDemo</code></pre>\n      </div>\n<p>项目初始结构为：</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash">➜  TSReactNativeDemo tree -L 1\n<span class="token keyword">.</span>\n├── App.js\n├── __tests__\n├── android\n├── app.json\n├── index.js\n├── ios\n├── node_modules\n├── package.json\n└── yarn.lock\n\n4 directories, 5 files</code></pre>\n      </div>\n<h1 id="运行"><a href="#%E8%BF%90%E8%A1%8C" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>运行</h1>\n<p>在手机或者模拟器上运行起来。</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash">react-native run-android\nreact-native run-ios</code></pre>\n      </div>\n<h1 id="引入typescript"><a href="#%E5%BC%95%E5%85%A5typescript" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>引入TypeScript</h1>\n<p>目前React Native Packager是通过Babel编译<code class="language-text">.js</code>文件以及打包的，暂时还没有特别好的方法直接使用<code class="language-text">.tsx</code>。所以基本思路就是， 先用TypeScript的编译器<code class="language-text">tsc</code>将<code class="language-text">.ts</code>或<code class="language-text">.tsx</code>文件编译成<code class="language-text">.js</code>文件，再用React Native Packager编译打包即可。</p>\n<p>首先我们安装TS依赖：</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash">yarn add -D typescript</code></pre>\n      </div>\n<p>然后需要安装types：</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash">yarn add -D @types/react @types/react-native</code></pre>\n      </div>\n<p>然后需要配置<code class="language-text">tsconfig.json</code>，可以用如下命令生成：</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash">tsc --init --pretty --sourceMap --target es2015 --outDir ./lib --rootDir ./ --module commonjs --jsx react</code></pre>\n      </div>\n<p>生成的文件里面有具体每个参数的含义，也可以参考<a href="http://www.typescriptlang.org/docs/handbook/tsconfig-json.html">TS官网文档</a>。 也可以直接参考上一篇中的<code class="language-text">tsconfig.json</code>文件，进行少许修改即可。</p>\n<h1 id="编写ts组件"><a href="#%E7%BC%96%E5%86%99ts%E7%BB%84%E4%BB%B6" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>编写TS组件</h1>\n<p>上面配置好TS后， 我们就可以开始用TS写组件了。还是跟上篇一样， 写一个简单的<code class="language-text">Counter.tsx</code>。</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> StyleSheet<span class="token punctuation">,</span> Text<span class="token punctuation">,</span> View <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-native\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">Props</span> <span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> string<span class="token punctuation">;</span>\n  count<span class="token operator">?</span><span class="token punctuation">:</span> number<span class="token punctuation">;</span>\n  onInc<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n  onDec<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">,</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> onInc<span class="token punctuation">,</span> onDec <span class="token punctuation">}</span><span class="token punctuation">:</span> Props<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>root<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Text</span><span class="token punctuation">></span></span>\n      Counter <span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>count<span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Text</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>+<span class="token punctuation">"</span></span> <span class="token attr-name">onPress</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onInc <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-<span class="token punctuation">"</span></span> <span class="token attr-name">onPress</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onDec <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>View</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>View</span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// styles</span>\n<span class="token keyword">const</span> styles <span class="token operator">=</span> StyleSheet<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  root<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    alignItems<span class="token punctuation">:</span> <span class="token string">\'center\'</span><span class="token punctuation">,</span>\n    alignSelf<span class="token punctuation">:</span> <span class="token string">\'center\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  buttons<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    flexDirection<span class="token punctuation">:</span> <span class="token string">\'row\'</span><span class="token punctuation">,</span>\n    minHeight<span class="token punctuation">:</span> <span class="token number">70</span><span class="token punctuation">,</span>\n    alignItems<span class="token punctuation">:</span> <span class="token string">\'stretch\'</span><span class="token punctuation">,</span>\n    alignSelf<span class="token punctuation">:</span> <span class="token string">\'center\'</span><span class="token punctuation">,</span>\n    borderWidth<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  button<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    flex<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    paddingVertical<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  greeting<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    color<span class="token punctuation">:</span> <span class="token string">\'#999\'</span><span class="token punctuation">,</span>\n    fontWeight<span class="token punctuation">:</span> <span class="token string">\'bold\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<p>然后我们执行<code class="language-text">./node_modules/.bin/tsc</code>命令，就会在<code class="language-text">lib</code>目录下生成相同目录结构的<code class="language-text">.js</code>文件等。</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash">➜  TSReactNativeDemo git:<span class="token punctuation">(</span>master<span class="token punctuation">)</span> ✗ tree lib -L 3\nlib\n└── src\n    └── components\n        ├── Counter.js\n        └── Counter.js.map\n\n2 directories, 2 files</code></pre>\n      </div>\n<p>然后在<code class="language-text">App.js</code>中如下使用<code class="language-text">Counter</code>即可：</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> StyleSheet<span class="token punctuation">,</span> Text<span class="token punctuation">,</span> View <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-native\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> Counter <span class="token keyword">from</span> <span class="token string">\'./lib/src/components/Counter\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>container<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Text</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>welcome<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Welcome to React Native<span class="token operator">!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Text</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Counter</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>counter1<span class="token punctuation">"</span></span> <span class="token attr-name">count</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>View</span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> styles <span class="token operator">=</span> StyleSheet<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  container<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    flex<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    justifyContent<span class="token punctuation">:</span> <span class="token string">\'center\'</span><span class="token punctuation">,</span>\n    alignItems<span class="token punctuation">:</span> <span class="token string">\'center\'</span><span class="token punctuation">,</span>\n    backgroundColor<span class="token punctuation">:</span> <span class="token string">\'#F5FCFF\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  welcome<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    fontSize<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n    textAlign<span class="token punctuation">:</span> <span class="token string">\'center\'</span><span class="token punctuation">,</span>\n    margin<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  instructions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    textAlign<span class="token punctuation">:</span> <span class="token string">\'center\'</span><span class="token punctuation">,</span>\n    color<span class="token punctuation">:</span> <span class="token string">\'#333333\'</span><span class="token punctuation">,</span>\n    marginBottom<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<p>由于<code class="language-text">lib/</code>目录下的文件是编译生成，因此不需要放在git里面， 我们在<code class="language-text">.gitingore</code>中添加<code class="language-text">lib/</code>忽略之：</p>\n<div class="gatsby-highlight">\n      <pre class="language-text"><code class="language-text"># TypeScript\nlib/</code></pre>\n      </div>\n<h1 id="测试"><a href="#%E6%B5%8B%E8%AF%95" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>测试</h1>\n<p><strong>注意</strong>， <a href="http://airbnb.io/enzyme/docs/guides/react-native.html">enzyme测试ReactNative需要用react-native-mock</a>， 但是<a href="https://github.com/RealOrangeOne/react-native-mock/issues/139"><code class="language-text">react-native-mock</code>目前不支持React v16+</a>， 因此暂时不采用enzyme吧。</p>\n<p>RN还是用Jest做测试，为了支持TS，我们安装<code class="language-text">ts-jest</code>包。</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash">yarn add -D ts-jest</code></pre>\n      </div>\n<p>同样，我们也添加相应的<code class="language-text">@types</code>：</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash">yarn add -D @types/jest @types/react-test-renderer</code></pre>\n      </div>\n<p>修改<code class="language-text">package.json</code>文件里面<code class="language-text">jest</code>属性：</p>\n<div class="gatsby-highlight">\n      <pre class="language-json"><code class="language-json"><span class="token property">"jest"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">"preset"</span><span class="token operator">:</span> <span class="token string">"react-native"</span><span class="token punctuation">,</span>\n    <span class="token property">"moduleFileExtensions"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token string">"ts"</span><span class="token punctuation">,</span>\n        <span class="token string">"tsx"</span><span class="token punctuation">,</span>\n        <span class="token string">"js"</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token property">"transform"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">"^.+\\\\.(js)$"</span><span class="token operator">:</span> <span class="token string">"&lt;rootDir>/node_modules/babel-jest"</span><span class="token punctuation">,</span>\n        <span class="token property">"\\\\.(ts|tsx)$"</span><span class="token operator">:</span> <span class="token string">"&lt;rootDir>/node_modules/ts-jest/preprocessor.js"</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token property">"testRegex"</span><span class="token operator">:</span> <span class="token string">"(/__tests__/.*|\\\\.(test|spec))\\\\.(ts|tsx|js)$"</span><span class="token punctuation">,</span>\n    <span class="token property">"testPathIgnorePatterns"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token string">"\\\\.snap$"</span><span class="token punctuation">,</span>\n        <span class="token string">"&lt;rootDir>/node_modules/"</span><span class="token punctuation">,</span>\n        <span class="token string">"&lt;rootDir>/lib/"</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token property">"cacheDirectory"</span><span class="token operator">:</span> <span class="token string">".jest/cache"</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>然后我们就可以写测试代码了：</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token comment">// src/components/Counter.test.tsx</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> enzyme <span class="token keyword">from</span> <span class="token string">\'enzyme\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Counter <span class="token keyword">from</span> <span class="token string">\'./Counter\'</span><span class="token punctuation">;</span>\n\n<span class="token function">it</span><span class="token punctuation">(</span><span class="token string">\'renders the correct text when count is not given\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> hello <span class="token operator">=</span> enzyme<span class="token punctuation">.</span><span class="token function">shallow</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Counter</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>counter1<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">expect</span><span class="token punctuation">(</span>hello<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">\'.counter\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span><span class="token string">\'Counter counter1: 1\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<p>更多关于Jest测试可以参考<a href="http://gitbook.cn/gitchat/column/5a17c2e113c02f4a35ca5a7d/topic/5a17de5713c02f4a35ca67af">测试 Jest</a>。</p>\n<h1 id="配置tslint"><a href="#%E9%85%8D%E7%BD%AEtslint" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>配置TSLint</h1>\n<p>不像上一篇用<code class="language-text">react-scripts-ts</code>的话TSLint是自动配置好的， 我们需要手动安装TSLint。</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash">yarn add -D tslint tslint-react</code></pre>\n      </div>\n<p>然后把上一章的<code class="language-text">tslint.json</code>文件复制过来。再在<code class="language-text">package.json</code>文件中增加如下代码：</p>\n<div class="gatsby-highlight">\n      <pre class="language-json"><code class="language-json">    <span class="token property">"lint"</span><span class="token operator">:</span> <span class="token string">"tslint -c tslint.json \'src/**/*.{ts,tsx}\'"</span><span class="token punctuation">,</span></code></pre>\n      </div>\n<p>然后就可以用<code class="language-text">yarn lint</code>检查代码了。</p>\n<p>为了在写代码的时候就能在VSCode里面获得错误提示， 可以安装VSCode的TSLint插件。</p>\n<h1 id="其他"><a href="#%E5%85%B6%E4%BB%96" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>其他</h1>\n<p>最后我们做一些额外工作提高开发效率。首先我们将<code class="language-text">tsc</code>命令写到<code class="language-text">package.json</code>里， 同时提供一个选择开启<code class="language-text">watch</code>模式。这样子执行<code class="language-text">yarn tsc-watch</code>命令后， TS就能实时编译为JS了，再配合上RN的<code class="language-text">Live Reload</code>或者<code class="language-text">Hot Reloading</code>能大大提高开发效率。</p>\n<div class="gatsby-highlight">\n      <pre class="language-json"><code class="language-json">    <span class="token property">"tsc"</span><span class="token operator">:</span> <span class="token string">"tsc"</span><span class="token punctuation">,</span>\n    <span class="token property">"tsc-watch"</span><span class="token operator">:</span> <span class="token string">"tsc --watch"</span><span class="token punctuation">,</span></code></pre>\n      </div>\n<p>Redux在RN中使用跟在React中使用没什么区别，参考<a href="/ts-react-starter">TypeScript React入门</a>即可。</p>\n<p>本文代码托管在<a href="https://github.com/magicly/TSReactNativeDemo">https://github.com/magicly/TSReactNativeDemo</a> ，随意使用~</p>\n<h1 id="refers"><a href="#refers" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Refers</h1>\n<ul>\n<li><a href="https://github.com/Microsoft/TypeScript-React-Native-Starter">https://github.com/Microsoft/TypeScript-React-Native-Starter</a></li>\n<li><a href="https://github.com/kulshekhar/ts-jest">https://github.com/kulshekhar/ts-jest</a></li>\n<li><a href="https://www.typescriptlang.org/docs/home.html">https://www.typescriptlang.org/docs/home.html</a></li>\n<li><a href="http://airbnb.io/enzyme/">http://airbnb.io/enzyme/</a></li>\n<li><a href="https://palantir.github.io/tslint/rules/no-implicit-dependencies/">https://palantir.github.io/tslint/rules/no-implicit-dependencies/</a></li>\n<li><a href="https://palantir.github.io/tslint/usage/rule-flags/">https://palantir.github.io/tslint/usage/rule-flags/</a></li>\n<li><a href="https://stackoverflow.com/questions/31605781/why-do-tslint-and-jslint-report-empty-blocks">https://stackoverflow.com/questions/31605781/why-do-tslint-and-jslint-report-empty-blocks</a></li>\n<li><a href="https://medium.com/@rintoj/react-native-with-typescript-40355a90a5d7">https://medium.com/@rintoj/react-native-with-typescript-40355a90a5d7</a></li>\n<li><a href="http://bbs.reactnative.cn/topic/4483/%E4%BD%BF%E7%94%A8typescript%E7%BC%96%E5%86%99react-native-%E9%AB%98%E6%95%88%E7%89%88">http://bbs.reactnative.cn/topic/4483/使用typescript编写react-native-高效版</a></li>\n<li><a href="https://zhuanlan.zhihu.com/p/27029898">https://zhuanlan.zhihu.com/p/27029898</a></li>\n</ul>',
timeToRead:6,frontmatter:{title:"TypeScript React Native入门",date:"2018-02-25",category:"FE",tags:["typescript","ts","react","rn","redux","react native"],math:null}}},pathContext:{prev:{url:"/ts-materials/",title:"TypeScript学习资料"},slug:"/ts-reactnative-starter/",next:{url:"/ts-react-starter/",title:"TypeScript React入门"}}}}});
//# sourceMappingURL=path---ts-reactnative-starter-b3e8d689b3418d6c551d.js.map